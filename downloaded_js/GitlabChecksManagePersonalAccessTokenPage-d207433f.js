import{_ as T,f as A,g as x,V as I,B as b,a3 as d,cc as P,ch as y,a0 as B,ci as L,Z as V,r as o,m as u,o as c,w as s,n,k as w,p as k,F as v,q as r,s as t,u as C}from"./index-13ff96f4.js";import{P as D}from"./PageHeader-46c38a32.js";const S={components:{BaseButton:A,BaseLink:x,InputText:I,BaseParagraph:b,PageHeader:D},data(){return{isLoading:!0,isSaving:!1,externalDirectLink:null,personalAccessToken:"",personalAccessTokenInfo:null}},async mounted(){await Promise.allSettled([this.getPersonalAccessTokenInfo(),this.getAccountInfo()]),this.isLoading=!1},computed:{inputIsValid(){return!!this.personalAccessToken&&this.personalAccessToken.trim()!==""},personalAccessTokenDetails(){if(!this.personalAccessTokenInfo)return;const e=d.fromUnix(this.personalAccessTokenInfo.updated_at).format(d.US_FRIENDLY_DATE_WITH_TIME);return!this.personalAccessTokenInfo||this.personalAccessTokenInfo.last_updated_by_id<1?`Last updated at ${e}`:`Last updated by ${this.personalAccessTokenInfo.last_updated_by_name} at ${e}`}},methods:{async getAccountInfo(){const e=await P();e.scm_org_base_url&&(this.externalDirectLink=e.scm_org_base_url+"/-/user_settings/personal_access_tokens")},async getPersonalAccessTokenInfo(){try{this.personalAccessTokenInfo=await y()}catch(e){B.isAxiosError(e)&&e.response.status!==404&&this.$toast.error({title:"hello",description:test})}},async handleUpdatePersonalAccessToken(){if(this.inputIsValid){this.isSaving=!0;try{await L(this.personalAccessToken),await V.fetchGitlabChecksIntegrationStatus(),this.$toast.success({title:"Personal Token Updated",description:"The Personal Access Token for the Gitlab Checks integration has been successfully updated"}),this.$router.replace("/settings/integrations/gitlab/checks")}finally{this.isSaving=!1}}}}},G={class:"page-content"},U={class:"flex flex-column gap-24px min-w-264px max-w-50p"},E={class:"flex flex-column gap-4px"},N={class:"flex w-full justify-between"},H=["href"],F=n("i",{class:"icon icon-openLink icon-12px text--normal"},null,-1),M={class:"flex"};function W(e,l,Y,$,a,i){const _=o("BaseLink"),p=o("BaseParagraph"),f=o("PageHeader"),h=o("InputText"),m=o("BaseButton");return r(),u(v,null,[c(f,{title:"Manage Gitlab Checks Personal Access Token"},{subTitle:s(()=>[c(p,null,{default:s(()=>[t(" Setup instructions and information about the correct scope in Gitlab can be found "),c(_,{target:"_blank",href:"https://help.aikido.dev/doc/untitled-document/docoIsWkwDTQ"},{default:s(()=>[t("here.")]),_:1})]),_:1})]),_:1}),n("div",G,[n("div",U,[n("div",E,[c(h,{name:"personal_access_token",modelValue:a.personalAccessToken,"onUpdate:modelValue":l[0]||(l[0]=g=>a.personalAccessToken=g)},{title:s(()=>[n("span",N,[t(" Your Personal Access Token "),a.externalDirectLink?(r(),u("a",{key:0,href:a.externalDirectLink,target:"_blank",class:"link flex gap-4px align-center mt-2px"},[t(" Generate Access Token here "),F],8,H)):k("",!0)])]),_:1},8,["modelValue"]),this.personalAccessTokenInfo?(r(),w(p,{key:0,color:"gray"},{default:s(()=>[t(C(i.personalAccessTokenDetails),1)]),_:1})):k("",!0)]),n("div",M,[c(m,{variation:"primary",onClick:i.handleUpdatePersonalAccessToken,disabled:!i.inputIsValid,"is-loading":a.isSaving},{default:s(()=>[t("Update Token")]),_:1},8,["onClick","disabled","is-loading"])])])])],64)}const Q=T(S,[["render",W]]);export{Q as default};
