import{_ as v,N as R,K as b,bi as I,fH as E,r as m,q as n,m as p,k as y,p as u,B as w,dF as A,o as c,w as f,s as g,u as _,c5 as k,ah as F,n as i,S as P,a3 as T,h as B}from"./index-13ff96f4.js";import{g as L}from"./repoName-872812ed.js";import{I as M}from"./InputMultiSelect-21584437.js";import{B as D}from"./BaseRadioInput-a7ac3557.js";const V={props:{error:String,onlyShowRepo:Boolean,onlyShowCloud:Boolean,initialSelectedSCMRepository:{type:[Number,null],default:null},initialSelectedCloudRepository:{type:[Number,null],default:null},showAlreadyLinkedResources:{type:Boolean,default:!1}},components:{BaseSelect:R},emits:["selectRepository"],data(){return{scmRepositories:[],isLoadingSCMRepositories:!0,selectedSCMRepository:this.initialSelectedSCMRepository,cloudRepositories:[],isLoadingCloudRepositories:!0,selectedCloudRepository:this.initialSelectedCloudRepository,alreadyLinkedContainerIds:[],alreadyLinkedRepoIds:[]}},async mounted(){await this.fetchAlreadySetUpArchitectures(),await Promise.allSettled([this.handleGetCloudRepositories(),this.handleGetSCMRepositories()])},methods:{async handleGetSCMRepositories(){try{const e=await b(null,!0,!0);this.scmRepositories=e.filter(t=>t.active).filter(t=>this.showAlreadyLinkedResources?!0:!this.alreadyLinkedRepoIds.includes(t.id)).map(t=>({title:L(t),id:t.id})).sort((t,o)=>t.title.localeCompare(o.title))}finally{this.isLoadingSCMRepositories=!1}},async handleGetCloudRepositories(){try{const e=await I();this.cloudRepositories=e.filter(t=>t.active).filter(t=>this.showAlreadyLinkedResources?!0:!this.alreadyLinkedContainerIds.includes(t.id)).map(t=>({title:[t.registry_name,t.name].filter(Boolean).join(" - "),id:t.id})).sort((t,o)=>t.title.localeCompare(o.title))}finally{this.isLoadingCloudRepositories=!1}},async fetchAlreadySetUpArchitectures(){const{repo_ids_having_arch:e,image_ids_having_arch:t}=await E();this.alreadyLinkedContainerIds=t,this.alreadyLinkedRepoIds=e},handleSelectValue(e,t){const o=t?parseInt(t,10):0;let d=null;e==="scm_repo"?(this.selectedCloudRepository=null,d=this.scmRepositories.find(s=>s.id===o)):(this.selectedSCMRepository=null,d=this.cloudRepositories.find(s=>s.id===o)),this.$emit("selectRepository",{kind:e,repository:d})}}},$={class:"flex flex-column gap-16px"};function z(e,t,o,d,s,r){const l=m("BaseSelect");return n(),p("div",$,[o.onlyShowCloud?u("",!0):(n(),y(l,{key:0,label:"Pick a repository",options:s.scmRepositories,modelValue:s.selectedSCMRepository,"onUpdate:modelValue":[t[0]||(t[0]=a=>s.selectedSCMRepository=a),t[1]||(t[1]=a=>r.handleSelectValue("scm_repo",a))],"is-loading":s.isLoadingSCMRepositories,error:o.error},null,8,["options","modelValue","is-loading","error"])),o.onlyShowRepo?u("",!0):(n(),y(l,{key:1,label:"Pick a container",options:s.cloudRepositories,modelValue:s.selectedCloudRepository,"onUpdate:modelValue":[t[2]||(t[2]=a=>s.selectedCloudRepository=a),t[3]||(t[3]=a=>r.handleSelectValue("cloud_repo",a))],"is-loading":s.isLoadingCloudRepositories,error:o.error},null,8,["options","modelValue","is-loading","error"]))])}const ge=v(V,[["render",z]]),N={components:{BaseParagraph:w,InputMultiSelect:M},emits:["update:modelValue"],props:{modelValue:{type:Array,required:!0}},data(){return{taggroups:[],maxSelectableItems:4}},async mounted(){const e=await A();this.taggroups=e.map(t=>({label:`${t.technology} (${t.amount_templates} checks)`,value:t.technology}))}},U={class:"flex flex-column gap-12px"};function j(e,t,o,d,s,r){const l=m("BaseParagraph"),a=m("InputMultiSelect");return n(),p("div",U,[c(l,{size:"medium",bold:""},{default:f(()=>[g("Please select technologies")]),_:1}),c(l,{size:"small",color:"subdued"},{default:f(()=>[g(" Let Aikido scan more focused by telling us about the technologies you are using. You can select up to "+_(s.maxSelectableItems)+" technologies that will be scanned with Nuclei. ",1)]),_:1}),c(a,{class:"mt-16px mb-16px w-full",options:s.taggroups,selectedItems:o.modelValue,"onUpdate:selectedItems":t[0]||(t[0]=x=>e.$emit("update:modelValue",x)),width:"unset",maxSelectableItems:s.maxSelectableItems},null,8,["options","selectedItems","maxSelectableItems"])])}const ye=v(N,[["render",j]]),h={blocklist:["exe","dmg","lnk","js","php","asp","ksh","msi","pl","sh","","tmp","vb"],maxSize:50*1024*1024,getType(e){return/\.(gif|jpg|jpeg|tiff|png|ico|bmp)$/i.test(e)?"image":/\.(pdf)$/i.test(e)?"pdf":/\.(doc|docm|docx|dot|dotm|odt)$/i.test(e)?"word":/\.(txt|md|ini|rtf)$/i.test(e)?"text":/\.(zip|7z|rar|gz|tar)$/i.test(e)?"archive":/\.(mp3|wav)$/i.test(e)?"audio":/\.(js|html|css|php|json)$/i.test(e)?"code":/\.(mp4|avi)$/i.test(e)?"video":/\.(xls|xlsx)$/i.test(e)?"excel":/\.(ppt)$/i.test(e)?"powerpoint":""},humanFileSize(e){if(!e)return"";var t=Math.floor(Math.log(e)/Math.log(1024));return(e/Math.pow(1024,t)).toFixed(2)*1+" "+["B","kB","MB","GB","TB"][t]},getExtension(e){return!e||typeof e!="string"||e.indexOf(".")===-1?"":e.split(".").pop()},getFileName(e){return e.split(".").slice(0,-1).join(".")},readFile(e,t){return new Promise((o,d)=>{var s=new FileReader;s.addEventListener("load",()=>{console.log("reader",s),o(s)},!1),s.addEventListener("progress",t),s.addEventListener("error",d,!1),h.getType(e.name)==="image"?s.readAsDataURL(e):s.readAsText(e)})}},O={data(){return{dragCount:0}},computed:{isDragging(){return this.dragCount>0}},created(){document.addEventListener("dragenter",this.dragEnter),document.addEventListener("dragover",this.dragOver),document.addEventListener("dragleave",this.dragLeave),document.addEventListener("drop",this.dragDrop)},beforeDestroy(){document.removeEventListener("dragenter",this.dragEnter),document.removeEventListener("dragover",this.dragOver),document.removeEventListener("dragleave",this.dragLeave),document.removeEventListener("drop",this.dragDrop)},methods:{setDropEffect(e){e&&e.dataTransfer&&(e.dataTransfer.effectAllowed="copy",e.dataTransfer.dropEffect="copy")},dragEnter(e){this.setDropEffect(e),e.preventDefault(),e.stopPropagation(),this.dragCount++},dragOver(e){this.setDropEffect(e),e.preventDefault(),e.stopPropagation()},dragLeave(e){e.preventDefault(),e.stopPropagation(),this.dragCount--},dragDrop(e){this.setDropEffect(e),e.preventDefault(),e.stopPropagation(),this.dragCount=0,this.processDropEvent(e.dataTransfer)},processDropEvent(){}}},Z={mixins:[O],expose:["clearFile","setFileAndShowPreviewConfirm"],emits:["fileSelected","fileRead"],props:{allowedFileTypes:{type:Array,default:()=>[]}},data(){return{status:"EMPTY",readProgress:0,uploadProgress:0,file:null,fileData:null}},computed:{isImageType(){return h.getType(this.file.name)==="image"},uploadBoxClasses(){return{empty:this.status==="EMPTY",complete:this.status==="COMPLETE",preview:this.status==="PREVIEW",busy:this.status!=="EMPTY",dragging:this.isDragging&&this.status==="EMPTY"}},readProgressStyles(){return{width:this.readProgress*100+"%"}}},methods:{processDropEvent(e){if(this.status!=="EMPTY")return;const t=[];if(e.items)for(const o of e.items)o.kind==="file"&&t.push(o.getAsFile());else for(const o of e.files)t.push(o);this.setFileAndShowPreviewConfirm(t)},fileInputChanged(){const e=document.getElementById("upload");e&&this.setFileAndShowPreviewConfirm(e.files)},setFileAndShowPreviewConfirm(e){if(e[0]){if(e.length>1){this.$toast.error("You can only upload one file at a time");return}this.file=e[0],this.$emit("fileSelected",this.file),this.readFile()}},async readFile(){const e=this.file,t=/(?:\.([^.]+))?$/.exec(e.name)[1];if(h.blocklist.indexOf(t)>-1){this.$toast.error("File type not allowed");return}if(this.allowedFileTypes.length>0&&!this.allowedFileTypes.includes(t)){this.$toast.error("File type not allowed. Allowed file types: "+this.allowedFileTypes.join(", "));return}if(e.size>h.maxSize){this.$toast.error("File too big");return}this.readProgress=0,this.status="READING";try{this.fileData=await h.readFile(e,o=>{this.readProgress=o.loaded/o.total}),this.readProgress=1,this.status="PREVIEW",this.$emit("fileRead",this.fileData)}catch(o){this.$toast.error("File upload failed"),console.error("read error",o),k("fileReadError",{extra:{fileReadError:o,selectedFile:e}}),this.status="EMPTY"}},async clearFile(){this.status="EMPTY",await this.$nextTick(),this.$refs.inputFile.value="",this.file=null,this.fileData=null,this.$emit("fileRead",null)}}},G={key:1,for:"upload",class:"upload-box-content upload-box-drop"},Y=i("div",{class:"upload-box-top"},"Click to Upload File",-1),q={key:2,class:"upload-box-content"},W={class:"upload-box-message"},H={key:3,class:"upload-box-content"},K={class:"p-16px rounded-4px text-left font-medium"},X={class:"table w-full"},J={class:"td valign-top mobile_w-full leading-normal"},Q={class:"block font-medium text-primary-aik-140 break-all"},ee={class:"td valign-top td-collapse mobile_w-full mobile_mt-10px pl-20px text-center nowrap"},te={key:0,class:"upload-box-preview text-center"},se=["src","alt"];function oe(e,t,o,d,s,r){return n(),p("div",{class:P(["upload-box",r.uploadBoxClasses])},[s.status==="READING"?(n(),p("div",{key:0,class:"upload-box-progress read",style:F(r.readProgressStyles)},null,4)):u("",!0),s.status==="EMPTY"?(n(),p("label",G,[i("input",{ref:"inputFile",type:"file",id:"upload",onChange:t[0]||(t[0]=(...l)=>r.fileInputChanged&&r.fileInputChanged(...l))},null,544),Y])):u("",!0),s.status==="READING"?(n(),p("div",q,[i("div",W,_(e.$t("READING_FILE_X",{name:s.file.name})),1)])):u("",!0),s.status==="PREVIEW"?(n(),p("div",H,[i("div",K,[i("div",X,[i("div",J,[i("span",Q,_(s.file.name),1)]),i("div",ee,[i("a",{class:"link text-12px",onClick:t[1]||(t[1]=(...l)=>r.clearFile&&r.clearFile(...l))},"Remove")])])]),r.isImageType?(n(),p("div",te,[i("img",{class:"upload-box-preview-image",src:s.fileData.result,alt:s.file.name},null,8,se)])):u("",!0)])):u("",!0)],2)}const ie=v(Z,[["render",oe]]),re={components:{BaseParagraph:w,BaseRadioInput:D,BaseSelect:R,InputFileBox:ie},emits:["update:runtimeServiceId","update:customSpecFileContent"],props:{runtimeServiceId:Number,customSpecFileContent:[String,null],isEdit:{type:Boolean,default:!1},lastUpdatedAt:Number},data(){return{selectedType:"zen",selectedZenApp:null,loaded:!1}},async mounted(){if(this.isEdit)if(this.runtimeServiceId>0)this.selectedZenApp=this.runtimeServiceId;else{this.selectedType="upload",await this.$nextTick();let t="openapi.json";this.lastUpdatedAt>0&&(t=`openapi-${T.fromUnix(this.lastUpdatedAt).format("yyyy-MM-dd HH:mm")}.json`);const o=new File(["{}"],t,{type:"application/json"});this.$refs.InputFileBox.setFileAndShowPreviewConfirm([o])}const e=await B();this.zenAppsOptions=e.map(t=>({id:t.id,title:t.name})),e.length==0&&(this.zenAppsOptions=[{id:"addZenApp",title:"Get started with Zen"}]),this.loaded=!0},watch:{selectedType(e){e==="zen"?this.$emit("update:customSpecFileContent",null):this.$emit("update:runtimeServiceId",-1)},selectedZenApp(e){this.$emit("update:runtimeServiceId",e)}},methods:{onFileRead(e){e!=null&&e.result?this.$emit("update:customSpecFileContent",e.result):this.$emit("update:customSpecFileContent",null)},async redirectToZenWhenRequested(e){e=="addZenApp"&&await this.$modal.show("AddRuntimeServiceModal")}}},le={class:"flex flex-column gap-12px"},ne={class:"flex gap-8px align-center mb-12px"},ae=i("label",{for:"unknown",class:"paragraph paragraph--small text-carbon-60 cursor-pointer"}," Autogenerate openAPI Spec via Zen ",-1),de=i("label",{for:"connected",class:"paragraph paragraph--small text-carbon-60 cursor-pointer"}," Upload manually ",-1),pe={class:"mt-12px py-12px px-16px flex gap-16px align-center bg-surface-orange-20 border-1 border-surface-orange-80 rounded-8px"};function ue(e,t,o,d,s,r){const l=m("BaseParagraph"),a=m("BaseRadioInput"),x=m("BaseSelect"),C=m("InputFileBox");return n(),p("div",le,[c(l,{size:"medium",bold:""},{default:f(()=>[g("Add OpenAPI Spec")]),_:1}),c(l,{size:"small",color:"subdued"},{default:f(()=>[g(" The OpenAPI spec is required to scan your API for security risks. Add it automatically by selecting the Zen app it applies to or upload it manually. ")]),_:1}),i("div",ne,[c(a,{name:"input_type",id:"unknown",value:"unknown",onSelect:t[0]||(t[0]=S=>s.selectedType="zen"),checked:s.selectedType=="zen",required:""},null,8,["checked"]),ae,c(a,{class:"ml-8px",name:"input_type",id:"connected",value:"connected",onSelect:t[1]||(t[1]=S=>s.selectedType="upload"),checked:s.selectedType=="upload",required:""},null,8,["checked"]),de]),s.selectedType=="zen"?(n(),y(x,{key:0,placeholder:"Select Zen app...",modelValue:s.selectedZenApp,"onUpdate:modelValue":[t[2]||(t[2]=S=>s.selectedZenApp=S),r.redirectToZenWhenRequested],options:e.zenAppsOptions,isLoading:!s.loaded},null,8,["modelValue","onUpdate:modelValue","options","isLoading"])):u("",!0),s.selectedType=="upload"?(n(),y(C,{key:1,ref:"InputFileBox",onFileRead:r.onFileRead,allowedFileTypes:["json","yaml","yml"]},null,8,["onFileRead"])):u("",!0),i("div",pe,[i("div",null,[c(l,{color:"orange",semiBold:""},{default:f(()=>[g("Do NOT run REST API checks on production. Use staging only.")]),_:1})])])])}const ve=v(re,[["render",ue]]);export{ve as A,ye as N,ge as S};
