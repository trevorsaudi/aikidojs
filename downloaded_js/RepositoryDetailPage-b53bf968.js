import{_ as S,r as n,q as s,m as u,o as c,bp as G,an as b,bq as X,ao as $,S as O,t as F,p as a,n as y,u as _,F as L,Z as z,B as j,a2 as Y,H as W,d as Z,al as J,bI as R,aV as Q,a3 as P,dl as ee,c6 as te,A,ar as oe,c9 as se,dm as re,ap as ie,k as l,w as i,s as h,ah as ae}from"./index-13ff96f4.js";import{P as ne}from"./PageHeader-46c38a32.js";import"./lock-files-cdbb050f.js";import{S as le}from"./SupportedLockFilesModal-4d6e0a8a.js";import{F as ce}from"./FaultyLockfileModal-7f5493a7.js";import{X as ue}from"./XTabs-d492da26.js";import{B as pe}from"./BaseCallout-aea0aba4.js";import{b as de}from"./dateFns-a344cb79.js";import{g as he}from"./scans-7651948f.js";import ye from"./IgnoreConfigurationIssueModal-91f8a4b9.js";import{N as fe}from"./NoAccess-b1a75b5c.js";import{g as v}from"./repoType-39cf0b6c.js";import"./RepositoryDetailCheckFileEntry-e151c779.js";import"./index-b87db690.js";import"./configurationIssues-06890829.js";const ge={components:{XTabs:ue},emits:["update:modelValue"],props:{modelValue:String},inject:["repository"],data(){return{tabs:[{title:this.$t("ISSUES"),id:"repositoryDetailIssues"},{title:this.$t("CHECKS"),id:"repositoryDetailChecks"}]}},computed:{repositoryId(){return this.$route.params.id}}},_e={class:"flex justify-between pr-64px"};function me(e,o,p,f,r,t){const d=n("XTabs");return s(),u("div",_e,[c(d,{class:"page-tabs",tabs:r.tabs,useRouterLinks:!0,modelValue:p.modelValue,"onUpdate:modelValue":o[0]||(o[0]=g=>e.$emit("update:modelValue",g))},null,8,["tabs","modelValue"])])}const ke=S(ge,[["render",me]]),be={props:{repository:Object},data(){return{isBookmarked:!1}},async mounted(){await this.loadBookmarkedState()},methods:{toggleFavorite(){this.isBookmarked?this.removeFromFavorites():this.addToFavorites()},async addToFavorites(){await G("repo",this.repository.id),b.emit("activeScmReposChanged"),this.isBookmarked=!0,Toast.success({title:this.$t("NOTIFICATIONS.FAVORITE_STATUS.TITLE"),description:"This repo will now be shown at the top of the Repos section in the left navigation bar."})},async removeFromFavorites(){await X("repo",this.repository.id),b.emit("activeScmReposChanged"),this.isBookmarked=!1,Toast.success({title:this.$t("NOTIFICATIONS.FAVORITE_STATUS.TITLE"),description:"Repo successfully removed from bookmarks."})},async loadBookmarkedState(){const o=(await $("repo")).find(p=>p.type_id==this.repository.id);this.isBookmarked=!!o}}};function Ce(e,o,p,f,r,t){return s(),u("i",{class:O(["icon icon-bookmark cursor-pointer icon-20px p-4px",[r.isBookmarked?"text-primary-aik-100":"text-primary-aik-40"]]),onClick:o[0]||(o[0]=(...d)=>t.toggleFavorite&&t.toggleFavorite(...d))},null,2)}const Se=S(be,[["render",Ce]]),Le={props:{repository:{type:Object,required:!0}},computed:{repoPathParts(){const e=this.repository.repo_path.split("/");let o=this.repository.scm_org_base_url||"https://gitlab.com";o+="/";const p=[];for(const f in e){const r=e[f];p.push({title:r,link:o+e.slice(0,f+1).join("/")})}return p}}},Ie={key:0},ve=["href"];function Te(e,o,p,f,r,t){return s(!0),u(L,null,F(t.repoPathParts,(d,g)=>(s(),u("span",{key:`part_${g}`},[g!=0?(s(),u("span",Ie," / ")):a("",!0),y("a",{class:"text--normal hover_underline",href:d.link,target:"_blank"},_(d.title),9,ve)]))),128)}const we=S(Le,[["render",Te]]),Re={props:{repository:{type:Object,required:!0}},computed:{repoPathParts(){const e=this.repository.repo_path.split("/"),o=[];for(const p of e)o.push({title:p});return o}}},Pe={key:0},Ae={class:"text--normal"};function Oe(e,o,p,f,r,t){return s(!0),u(L,null,F(t.repoPathParts,(d,g)=>(s(),u("span",{key:`part_${g}`},[g!=0?(s(),u("span",Pe," / ")):a("",!0),y("span",Ae,_(d.title),1)]))),128)}const Fe=S(Re,[["render",Oe]]),Ee=()=>{switch(z.data.scanFrequency){case"monthly":return"every month";case"weekly":return"every week";case"3days":return"every 3 days";case"daily":default:return"nightly"}},Be={components:{PageHeader:ne,RepoDetailTabs:ke,RepoBookmarkButton:Se,BaseCallout:pe,SupportedLockFilesModal:le,BaseParagraph:j,XTooltip:Y,FaultyLockfileModal:ce,IgnoreConfigurationIssueModal:ye,BaseHeading:W,BasePill:Z,GitlabRepoPathLabel:we,AzureDevopsRepoPathLabel:Fe,NoAccess:fe,LoadingSpinner:J},data(){return{repository:void 0,meta:null,loaded:!1,scanningProgress:null,tab:this.$route.name,showLockfilesModal:!1,showFaultyLockfileModal:!1,showIgnoreConfigurationIssueModal:!1,hasNoAccess:!1,showLocalScanPrScanOverviewButton:!1,openSingleIssuesCount:null}},async created(){b.on(R,this.handleDependencyScanEvent),b.on("configurationIssueIgnored",this.loadRepositoryDetails)},async mounted(){if(await this.loadRepositoryDetails(),this.hasNoAccess){this.loaded=!0;return}this.loadRepositoryMeta(),await this.loadLocalScanData(),this.loaded=!0},beforeUnmount(){b.off(R,this.handleDependencyScanEvent),b.off("configurationIssueIgnored",this.loadRepositoryDetails)},watch:{async repositoryId(){this.repositoryId&&(await this.loadRepositoryDetails(),this.loadRepositoryMeta(),await this.loadLocalScanData(),this.scanningProgress=null)},"$route.name"(){["repositoryDetailIssues","repositoryDetailChecks"].includes(this.$route.name)&&(this.tab=this.$route.name)}},provide(){return{repository:Q(()=>this.repository)}},computed:{repositoryId(){return this.$route.params.id},repositoryTitle(){return this.repository?this.repository.scm_repo_name:"Repository"},subtitle(){return this.$featureflags.show_repo_single_issue_count?`${this.repository.open_issues} Groups`:`${this.repository.open_issues} issues`},singleIssueCountText(){return!this.$featureflags.show_repo_single_issue_count||this.openSingleIssuesCount===null?"":`${this.openSingleIssuesCount} Single Issues`},breadcrumbs(){let e=[{label:"Repositories",href:"/repositories"},{label:this.repositoryTitle}];return this.tab==="repositoryDetailChecks"&&e.push({label:"Checks"}),e},isScanning(){return!!this.scanningProgress&&this.scanningProgress>0&&this.scanningProgress<100},showHasMissingLockFile(){return!!this.missingLockfileConfigurationIssue},showIsDeactivated(){return!this.repository.active},missingLockfileConfigurationIssue(){return this.repository.configuration_issues.find(o=>o.kind==="lockfile_missing"&&o.status==="open")??void 0},showHasFaultyLockfile(){return!!this.faultyLockfileConfigurationIssue},faultyLockfileConfigurationIssue(){return this.repository.configuration_issues.find(o=>o.kind==="lockfile_missing_versions"&&o.status==="open")??void 0},lastScan(){var e;return(e=this.meta)!=null&&e.last_scanned_at?`Last scan ${de(this.meta.last_scanned_at)} ago`:"No scans just yet"},nextScanTime(){var e;return(e=this.meta)!=null&&e.next_scan_at?`Next scan on ${P.fromUnix(this.meta.next_scan_at).format(P.SHORT_DATE_FORMAT)}`:null},repositoryExternalLink(){return this.repository.external_url},repositoryKindIcon(){const e=v(this.repository);return e==="github"?"icon-github":e==="bitbucket"?"icon-bitbucket":e==="azure_devops"?"icon-azure":e==="selfscan"?null:"icon-Gitlab"},repositoryKindSvgIcon(){return v(this.repository)==="selfscan"?"selfscan":""},repositoryKindLabel(){const e=v(this.repository);return e==="github"?"GitHub":e==="bitbucket"?"Bitbucket":e==="azure_devops"?"Azure DevOps":e==="selfscan"?"Local Scan":"GitLab"},isTfvc(){return this.repository.scm_repo_uid.startsWith("tfvc_")},isScannableRepo(){return this.repository.scm_type!=="selfscan"},branchLabel(){return this.isTfvc&&this.repository.path_to_scan?"":this.isTfvc&&!this.repository.scm_repo_default_branch?"All Branches":this.repository.scm_repo_default_branch},shouldShowGitlabRepoPathLabel(){var e,o;return((e=this.$group)==null?void 0:e.scm_type)=="gitlab_server"||((o=this.$group)==null?void 0:o.scm_type)=="gitlab"},frequencyCopy:Ee},methods:{async loadRepositoryDetails(){try{this.repository=await ee(this.repositoryId),this.getOpenSingleIssueCountForRepo()}catch(e){e instanceof te.AxiosError&&(e.response.status===404&&this.$router.push({name:"notFound"}),e.response.status===498&&(this.hasNoAccess=!0))}},async loadRepositoryMeta(){this.meta=await he("repo",this.repositoryId)},async handleStartScan(){if(A.hasExpiredFullTrial())return this.$modal.show("UpgradeAccountModal",{msg:"Aikido will rescan daily for any new issues. Upgrade now to enable manual rescanning."});this.scanningProgress=1;try{await oe(this.repository.id)}catch{this.scanningProgress=null}},async handleDependencyScanEvent(e){const{type:o,progress:p,repositoryId:f}=e;if(`${f}`===this.repositoryId)if(o==="progress_update"){if((this.scanningProgress??0)>p)return;this.scanningProgress=p}else o==="completed"?(this.scanningProgress=100,b.emit("dependencyScanFinished"),await this.loadRepositoryDetails(this.searchTerm),this.loadRepositoryMeta()):o==="failure"&&(this.scanningProgress=null,Toast.error({title:this.$t("ERROR"),description:"We were unable to complete the scan for this repository"}))},handleOpenLockfilesModal(){this.showLockfilesModal=!0},handleCloseLockfilesModal(){this.showLockfilesModal=!1},handleOpenFaultyLockfileModal(){this.showFaultyLockfileModal=!0},handleCloseFaultyLockfileModal(){this.showFaultyLockfileModal=!1},handleOpenIgnoreConfigurationIssueModal(){this.showIgnoreConfigurationIssueModal=!0},handleCloseIgnoreConfigurationIssueModal(){this.showIgnoreConfigurationIssueModal=!1},onExternalRepositoryClick(){this.$modal.show("ExternalRepoModal",{repository:this.repository})},async onDefaultBranchClick(){if(A.hasExpiredFullTrial())return this.$modal.show("UpgradeAccountModal",{msg:`Aikido will scan the ${this.repository.scm_repo_default_branch}-branch daily for any new issues. Upgrade now to configure a different branch to scan.`});(await this.$modal.show("DefaultBranchModal",{repository:this.repository})).type=="saved"&&(this.loadRepositoryDetails(),this.handleStartScan())},async onConfigureClick(){const e=await this.$modal.show("RepositoryArchitectureConfigurationModal",{repository:this.repository});e.type=="saved"&&(this.repository.dev_dep_scanning_enabled=e.value.dev_dep_scanning_enabled)},goToCiChecksScanOverview(){this.$router.push(`/settings/integrations/ci/checks/scans?repo_id=${this.repository.id}`)},async loadLocalScanData(){if(this.showLocalScanPrScanOverviewButton=!1,this.repository.scm_type!=="selfscan"||this.$groupUser.is_team_restricted)return;(await se({page:0,per_page:1,repo_id:this.repository.id})).length>0&&(this.showLocalScanPrScanOverviewButton=!0)},async getOpenSingleIssueCountForRepo(){this.openSingleIssuesCount=await re(this.repositoryId,{disable_toasts:!0})},async activateRepo(){await ie(this.repositoryId),b.emit("activeScmReposChanged"),this.loadRepositoryDetails()}}},De={class:"flex gap-8px align-center"},Me={class:"flex gap-8px"},xe={key:1,class:"w-full h-24px"},Ne={class:"ws-pre"},Ue={class:"flex gap-8px"},Ve={key:0,class:"loading-overlay"},He=y("div",{class:"shimmer shimmer--purple shimmer--rtl"},null,-1),qe=[He],Ke=y("i",{class:"icon icon-calender icon-12px valign-middle ml-8px"},null,-1),Ge={class:"page-content"},Xe={key:1,class:"mb-24px"},$e={key:2,class:"mb-24px"},ze={key:3,class:"mb-24px"};function je(e,o,p,f,r,t){const d=n("XPreloader"),g=n("NoAccess"),E=n("BaseHeading"),B=n("RepoBookmarkButton"),D=n("GitlabRepoPathLabel"),M=n("AzureDevopsRepoPathLabel"),T=n("BaseParagraph"),x=n("LoadingSpinner"),C=n("XTooltip"),m=n("BasePill"),w=n("BaseButton"),N=n("RepoDetailTabs"),U=n("PageHeader"),V=n("SupportedLockFilesModal"),I=n("BaseCallout"),H=n("FaultyLockfileModal"),q=n("router-view"),K=n("IgnoreConfigurationIssueModal");return r.loaded?r.hasNoAccess?(s(),l(g,{key:1,type:"repository"})):(s(),u(L,{key:2},[c(U,{breadcrumbs:t.breadcrumbs},{title:i(()=>[y("div",De,[c(E,{as:"h1"},{default:i(()=>[h(_(t.repositoryTitle),1)]),_:1}),c(B,{repository:r.repository,class:"mt-4px"},null,8,["repository"])])]),subTitle:i(()=>[r.repository.repo_path?(s(),l(T,{key:0,color:"gray",class:"-mt-8px"},{default:i(()=>{var k;return[t.shouldShowGitlabRepoPathLabel?(s(),l(D,{key:0,repository:r.repository},null,8,["repository"])):a("",!0),((k=e.$group)==null?void 0:k.scm_type)=="azure_devops"?(s(),l(M,{key:1,repository:r.repository},null,8,["repository"])):a("",!0)]}),_:1})):a("",!0),y("div",Me,[c(m,{title:t.subtitle,variation:"green"},{default:i(()=>[t.singleIssueCountText?a("",!0):(s(),l(C,{key:0,class:"ws-break-spaces w-175px"},{default:i(()=>[r.openSingleIssuesCount!==null?(s(),u(L,{key:0},[h(_(`${r.openSingleIssuesCount} individual issues combined in ${r.repository.open_issues} groups`),1)],64)):(s(),u("div",xe,[c(x,{class:"absolute-centered",color:"#645dd7",width:16,height:16})]))]),_:1}))]),_:1},8,["title"]),t.singleIssueCountText?(s(),l(m,{key:0,title:t.singleIssueCountText,variation:"gray-fill"},null,8,["title"])):a("",!0),c(m,{class:"cursor-pointer",icon:"icon-settings",title:"Configure",variation:"gray-fill",onClick:t.onConfigureClick},null,8,["onClick"]),c(m,{class:"cursor-pointer",icon:t.repositoryKindIcon,iconSvg:t.repositoryKindSvgIcon,title:t.repositoryKindLabel,variation:"gray-fill",onClick:t.onExternalRepositoryClick},null,8,["icon","iconSvg","title","onClick"]),t.branchLabel?(s(),l(m,{key:1,icon:"icon-gh_branch",title:t.branchLabel,variation:"gray-fill",class:"cursor-pointer",onClick:t.onDefaultBranchClick},{default:i(()=>[t.isScannableRepo?(s(),l(C,{key:0},{default:i(()=>[h("Aikido will scan this branch "+_(t.frequencyCopy),1)]),_:1})):a("",!0)]),_:1},8,["title","onClick"])):a("",!0),r.repository.path_to_scan?(s(),l(m,{key:2,title:"Path: "+r.repository.path_to_scan,variation:"gray-fill"},{default:i(()=>[c(C,null,{default:i(()=>[h("Aikido will scan this path "+_(t.frequencyCopy),1)]),_:1})]),_:1},8,["title"])):a("",!0),t.isTfvc?(s(),l(m,{key:3,title:"TFVC",variation:"gray-fill",class:"cursor-pointer"},{default:i(()=>[c(C,null,{default:i(()=>[h("Team Foundation Version Control")]),_:1})]),_:1})):a("",!0),r.repository.skippable_directories.length>0?(s(),l(m,{key:4,title:e.$t("X_PATHS_EXCLUDED",r.repository.skippable_directories.length),variation:"gray-fill",class:"cursor-pointer"},{default:i(()=>[c(C,null,{default:i(()=>[y("span",Ne,_(r.repository.skippable_directories.join(`
`)),1)]),_:1})]),_:1},8,["title"])):a("",!0)])]),rightContent:i(()=>[y("div",Ue,[t.isScannableRepo&&!e.$group.is_demo_group&&!t.isTfvc?(s(),l(w,{key:0,variation:"plain",onClick:o[0]||(o[0]=k=>e.$modal.show("StartBranchScanModal",{repositoryId:r.repository.id}))},{default:i(()=>[h(" Scan Branch ")]),_:1})):a("",!0),r.showLocalScanPrScanOverviewButton?(s(),l(w,{key:1,variation:"tertiary",onClick:o[1]||(o[1]=k=>t.goToCiChecksScanOverview())},{default:i(()=>[h(" PR scan overview ")]),_:1})):a("",!0),t.isScannableRepo?(s(),u("button",{key:2,class:O(["button-brand button--primary button--rounded button--normal button--border button--with-progress",[t.isScanning&&"button--in-progress"]]),onClick:o[2]||(o[2]=(...k)=>t.handleStartScan&&t.handleStartScan(...k))},[t.isScanning?(s(),u("div",Ve,[y("div",{class:"loading-bar",style:ae({width:`${r.scanningProgress}%`})},qe,4)])):a("",!0),h(" Start Scan ")],2)):a("",!0)])]),tabs:i(()=>[c(N,{modelValue:r.tab,"onUpdate:modelValue":o[3]||(o[3]=k=>r.tab=k)},null,8,["modelValue"])]),footerRightContent:i(()=>[r.meta?(s(),l(T,{key:0,color:"subdued"},{default:i(()=>[h(_(t.lastScan)+" ",1),Ke,c(C,null,{default:i(()=>[h(_(t.nextScanTime),1)]),_:1})]),_:1})):a("",!0)]),_:1},8,["breadcrumbs"]),y("div",Ge,[r.showLockfilesModal?(s(),l(V,{key:0,scannedLockfiles:this.repository.target_paths,onClose:t.handleCloseLockfilesModal},null,8,["scannedLockfiles","onClose"])):a("",!0),t.showIsDeactivated?(s(),u("div",Xe,[c(I,{title:e.$t("CALLOUTS.REPO.DEACTIVATED.TITLE"),description:e.$t("CALLOUTS.REPO.DEACTIVATED.DESCRIPTION"),actionLabel:e.$t("CALLOUTS.REPO.DEACTIVATED.ACTION"),onAction:t.activateRepo,variation:"danger"},null,8,["title","description","actionLabel","onAction"])])):t.showHasMissingLockFile?(s(),u("div",$e,[c(I,{title:e.$t("CALLOUTS.REPO.MISSING_LOCK_FILE.TITLE"),description:e.$t("CALLOUTS.REPO.MISSING_LOCK_FILE.DESCRIPTION"),actionLabel:e.$t("CALLOUTS.REPO.MISSING_LOCK_FILE.SECONDARY_ACTION_LABEL"),onAction:t.handleOpenLockfilesModal,secondaryActionLabel:"ignore",onSecondaryAction:t.handleOpenIgnoreConfigurationIssueModal,variation:"danger"},null,8,["title","description","actionLabel","onAction","onSecondaryAction"])])):t.showHasFaultyLockfile?(s(),u("div",ze,[c(I,{title:e.$t("CALLOUTS.REPO.FAULTY_LOCK_FILE.TITLE"),description:e.$t("CALLOUTS.REPO.FAULTY_LOCK_FILE.DESCRIPTION"),actionLabel:e.$t("CALLOUTS.REPO.FAULTY_LOCK_FILE.SECONDARY_ACTION_LABEL"),onAction:t.handleOpenFaultyLockfileModal,secondaryActionLabel:"ignore",onSecondaryAction:t.handleOpenIgnoreConfigurationIssueModal,variation:"danger"},null,8,["title","description","actionLabel","onAction","onSecondaryAction"]),r.showFaultyLockfileModal?(s(),l(H,{key:0,"repository-id":this.repositoryId,onClose:t.handleCloseFaultyLockfileModal},null,8,["repository-id","onClose"])):a("",!0)])):a("",!0),c(q,{repository:r.repository},null,8,["repository"])]),r.showIgnoreConfigurationIssueModal?(s(),l(K,{key:0,issue:t.missingLockfileConfigurationIssue||t.faultyLockfileConfigurationIssue,onCancel:t.handleCloseIgnoreConfigurationIssueModal,onConfirm:t.handleCloseIgnoreConfigurationIssueModal},null,8,["issue","onCancel","onConfirm"])):a("",!0)],64)):(s(),l(d,{key:0,class:"supercenter",theme:"transparent"}))}const ut=S(Be,[["render",je]]);export{ut as default};
