import{_ as C,M as j,B as b,f as E,H as k,N as x,cF as N,bK as V,fO as U,fP as A,an as P,r as d,q as l,k as h,w as i,o,s as r,n as f,u as m,m as y,F as I,p as v}from"./index-13ff96f4.js";const R={props:{groupedIssue:{type:Object},filterRepoId:{type:[Number,String],default:void 0},filterImageId:{type:[Number,String],default:void 0},filterCloudId:{type:[Number,String],default:void 0},filterDomainId:{type:[Number,String],default:void 0},filterInstanceGroupId:{type:[Number,String],default:void 0}},emits:["close","saved"],components:{BaseModal:j,BaseParagraph:b,BaseButton:E,BaseHeading:k,BaseSelect:x,InputTextArea:N},data(){return{reason:"",reasonError:null,adjustedSeverity:null,adjustedSeverityError:null,isSaving:!1}},computed:{openIssues(){return this.groupedIssue.issues.filter(s=>["open","snoozed"].includes(s.status))},severityOptions(){const s=this.openIssues.map(e=>V(e.aikido_priority).toLowerCase());return[{id:"critical",title:"Critical",disabled:s.every(e=>e==="critical")},{id:"high",title:"High",disabled:s.every(e=>e==="high")},{id:"medium",title:"Medium",disabled:s.every(e=>e==="medium")},{id:"low",title:"Low",disabled:s.every(e=>e==="low")}]},issueImpact(){if(!this.adjustedSeverity)return null;const s=U(this.adjustedSeverity);let e=[],p=[];for(const n of this.openIssues){if(n.aikido_priority<s.min){e.push(n);continue}if(n.aikido_priority>s.max){p.push(n);continue}}return{upgraded:e.length,downgraded:p.length}}},methods:{handleClose(){this.$emit("close")},isFormValid(){return!this.reason||this.reason.length===0&&this.reason!==""?this.reasonError="Please provide a reason the severity should be updated":this.reasonError=null,this.adjustedSeverity?this.adjustedSeverityError=null:this.adjustedSeverityError="You must select a new severity",this.adjustedSeverityError===null&&this.reasonError===null},async handleUpdateSeverity(){if(this.reason=this.reason.trim(),!!this.isFormValid()){this.isSaving=!0;try{await A({issueGroupId:this.groupedIssue.id,severity:this.adjustedSeverity,reason:this.reason,filterRepoId:this.filterRepoId,filterImageId:this.filterImageId,filterCloudId:this.filterCloudId,filterDomainId:this.filterDomainId,filterInstanceGroupId:this.filterInstanceGroupId})}finally{P.emit("issueUpdated",{id:this.groupedIssue.id}),this.handleClose(),this.isSaving=!1}}}}},T={class:"flex flex-column gap-12px"},D=f("span",{class:"text--semi text-surface-red-100"},"upgraded",-1),G=f("span",{class:"text--semi text-surface-green-100"},"downgraded",-1);function M(s,e,p,n,a,t){const u=d("BaseParagraph"),S=d("BaseHeading"),_=d("BaseSelect"),w=d("InputTextArea"),g=d("BaseButton"),B=d("BaseModal");return l(),h(B,{width:600,onClose:t.handleClose,allowBackgroundClose:!1},{header:i(()=>[o(u,{color:"gray"},{default:i(()=>[r("Adjust issue group severity")]),_:1})]),content:i(()=>[f("div",T,[o(S,{as:"h3"},{default:i(()=>[r("Change this issue group's severity")]),_:1}),o(u,{size:"medium",loose:""},{default:i(()=>[r(" Do you think the severity of this issue group is too high or too low? Adjusting the severity will adjust the severity for all issues in this group. ")]),_:1}),o(_,{class:"flex-1",id:"severity",label:"New severity",modelValue:a.adjustedSeverity,"onUpdate:modelValue":e[0]||(e[0]=c=>a.adjustedSeverity=c),options:t.severityOptions,placeholder:"Select new severity...",error:a.adjustedSeverityError},null,8,["modelValue","options","error"]),t.issueImpact?(l(),h(u,{key:1},{default:i(()=>[r(m(s.$t("ISSUE_GROUP.ADJUST_SEVERITY.IMPACTED_ISSUES_NOTICE",t.issueImpact.upgraded+t.issueImpact.downgraded))+" ",1),t.issueImpact.upgraded>0?(l(),y(I,{key:0},[r(m(t.issueImpact.upgraded)+" Will be ",1),D,r(". ")],64)):v("",!0),t.issueImpact.downgraded>0?(l(),y(I,{key:1},[r(m(t.issueImpact.downgraded)+" Will be ",1),G,r(". ")],64)):v("",!0)]),_:1})):(l(),h(u,{key:0},{default:i(()=>[r("Select a new severity to see how many issues will be impacted.")]),_:1})),o(w,{title:"Reason for adjustment",placeholder:"Explain why you believe the severity of this issue group should be adjusted...",modelValue:a.reason,"onUpdate:modelValue":e[1]||(e[1]=c=>a.reason=c),rows:"5",required:!1,name:"reason",error:a.reasonError},null,8,["modelValue","error"])])]),footer:i(()=>[o(g,{variation:"plain",onClick:t.handleClose,class:"ml-auto"},{default:i(()=>[r("Cancel")]),_:1},8,["onClick"]),o(g,{onClick:t.handleUpdateSeverity,"is-loading":a.isSaving},{default:i(()=>[r("Confirm")]),_:1},8,["onClick","is-loading"])]),_:1},8,["onClose"])}const O=C(R,[["render",M]]);export{O as default};
