import{_ as C,an as f,q as c,m as d,n as i,S as w,ah as L,F as x,t as y,u as B,x as M,H as P,a2 as $,B as U,al as N,e as R,d as E,f as j,z as D,ek as F,el as V,e0 as O,em as I,A as X,r as m,o as t,w as s,s as o,k as H,p as T,ai as G}from"./index-13ff96f4.js";import{R as q}from"./RuntimeNoTokenCallout-f395432e.js";import{X as W}from"./XPagination-8f16f099.js";import{I as K}from"./InputFilterDropdown-674351d9.js";import{a as S}from"./dateFns-a344cb79.js";import{B as Q}from"./BaseCard-471d3203.js";import{B as Z}from"./BaseLabel-a1c0ca00.js";import"./BaseCallout-aea0aba4.js";import"./FilterButton-bb5393a7.js";import"./ActionMenu-3e4470bf.js";import"./index-b87db690.js";const J={props:{service:{type:Object,required:!0},disabled:{type:Boolean,default:!1}},data(){return{activeButton:"",coverDimensions:{},isTransitionEnabled:!1}},async mounted(){await this.$nextTick(),document.fonts&&await document.fonts.ready,this.updateActiveButton(),this.highlightActiveButton(),setTimeout(()=>{this.isTransitionEnabled=!0},100)},watch:{activeButton(){this.highlightActiveButton()},service:{handler(){this.updateActiveButton()},deep:!0}},computed:{coverStyles(){return{width:`${this.coverDimensions.width??0}px`,left:`${this.coverDimensions.left??0}px`,backgroundColor:"#6551f3"}},coverTextStyles(){return{color:"#fff"}},blockingModeActions(){return[{key:"dry",label:"Detection-Only",onAction:async()=>{this.service.agent&&this.service.agent.serverless?await this.$modal.show("HowToDisableRuntimeProtectModal"):await this.$modal.show("DisableBlockingMode",{serviceId:this.service.id}),f.emit("runtime.service.updated")}},{key:"blocking",label:"Blocking-Mode",onAction:async()=>{this.service.agent&&this.service.agent.serverless?await this.$modal.show("HowToEnableRuntimeProtectModal"):await this.$modal.show("EnableBlockingMode",{serviceId:this.service.id}),f.emit("runtime.service.updated")}}]}},methods:{handleClick(e,a){a&&a()},highlightActiveButton(){var _;const e=(_=this.$refs[this.activeButton])==null?void 0:_[0];if(!e)return;const a=e.offsetLeft,v=e.offsetWidth;this.coverDimensions={width:v+8,left:a-4}},updateActiveButton(){if(!this.service)return;let e="dry";this.service.agent&&(e=this.service.agent.dry_mode?"dry":"blocking"),this.service.mode!=="unknown"&&(e=this.service.mode==="block"?"blocking":"dry"),this.activeButton=e}},components:{}},Y=["onClick","disabled"];function ee(e,a,v,_,h,l){return c(),d("div",{class:w(["sliding-button-group",{"sliding-button-group--disabled":v.disabled}])},[i("div",{class:w(["sliding-button-group--cover",{"transition-none":!h.isTransitionEnabled}]),style:L(l.coverStyles)},null,6),(c(!0),d(x,null,y(l.blockingModeActions,(u,r)=>(c(),d("button",{key:r,class:w(["sliding-button-group__button",{"sliding-button-group__button--active":h.activeButton===u.key}]),onClick:()=>l.handleClick(u.key,u.onAction),ref_for:!0,ref:u.key,disabled:v.disabled,style:L(h.activeButton===u.key?l.coverTextStyles:{})},B(u.label),15,Y))),128))],2)}const te=C(J,[["render",ee]]),se={components:{BaseIcon:M,BaseHeading:P,BaseLabel:Z,XTooltip:$,BaseParagraph:U,LoadingSpinner:N,BaseIconButton:R,InputFilterDropdown:K,RuntimeNoTokenCallout:q,BasePill:E,BaseButton:j,XPagination:W,InputSwitch:D,BaseCard:Q,SlidingBlockingModeButton:te},data(){return{ipLists:[],uaList:[],loading:!0,service:void 0}},computed:{serviceId(){return this.$route.params.serviceId},enrichedSubscribedGeoIpLists(){return this.ipLists.filter(e=>e.source==="geoip").filter(e=>e.subscribed).map(e=>({...e,name:e.code.split(";")[0],country_code:e.code.split(";")[1],status:e.subscribed?{label:"Blocked",color:"red"}:{label:"Not Blocked",color:"green"},subscribed_at_relative:S(e.subscribed_at)}))},enrichedSubscribedThreatActorsLists(){return this.ipLists.filter(e=>e.source==="known_threat_actors").filter(e=>e.subscribed).map(e=>({...e,status:e.subscribed?{label:"Blocked",color:"red"}:{label:"Not Blocked",color:"green"},subscribed_at_relative:S(e.subscribed_at)}))},subscribedUaLists(){return this.uaList.filter(e=>e.subscribed)},listParameters(){return{serviceId:this.serviceId}},isTorListActive(){return this.torExitNodeList&&this.torExitNodeList.subscribed},torExitNodeList(){return this.ipLists.find(e=>e.source==="tor"&&e.code==="exit_nodes")}},created(){f.on("runtime.lists.ip.updated",this.reloadIpLists),f.on("runtime.lists.ua.updated",this.reloadUaLists),f.on("runtime.service.updated",this.loadService)},beforeUnmount(){f.off("runtime.lists.ip.updated",this.reloadIpLists),f.off("runtime.lists.ua.updated",this.reloadUaLists),f.off("runtime.service.updated",this.loadService)},async mounted(){if(await this.$nextTick(),await Promise.all([this.loadIpLists(),this.loadService(),this.loadUaLists()]),!this.service){this.$router.push("/runtime/services");return}this.$breadcrumbs.show({breadcrumbs:[{label:this.$t("RUNTIME_PROTECTION"),href:"/runtime"},{label:this.service.name}]}),this.loading=!1},methods:{async reloadIpLists(){await this.loadIpLists()},async loadIpLists(){this.ipLists=await F(this.listParameters.serviceId)},async reloadUaLists(){await this.loadUaLists()},async loadUaLists(){this.uaList=await V(this.listParameters.serviceId)},async loadService(){this.service=await O(this.serviceId)},async toggleTorListActive(){const e=this.torExitNodeList;if(e&&e.subscribed)await I({serviceId:this.serviceId,subscriptions:[],type:"block",source:"tor"}),this.$toast.success("Successfully disabled tor blocking, it might take up to a minute to take effect.");else{if(X.hasExpiredFullTrial()){this.$modal.show("UpgradeAccountModal",{title:"Blocking tor traffic is available on all paid plans",msg:"Upgrade now to any paid plan to block tor traffic."});return}await I({serviceId:this.serviceId,subscriptions:[],subscribeToSource:"tor",type:"block",source:"tor"}),this.$toast.success("Successfully enabled tor blocking, it might take up to a minute to take effect.")}await this.reloadIpLists()}}},ie={class:"flex flex-column gap-16px"},oe={class:"flex justify-between"},ae={class:"flex gap-6px flex-column flex-1"},ne={class:"flex justify-between"},le={class:"flex gap-6px align-center"},re={class:"flex justify-between valign-middle"},ce={class:"flex gap-6px align-center"},de=i("hr",{class:"divider mb-16px mt-16px border-carbon-20 -mx-24px"},null,-1),ue={class:"flex align-center w-full gap-12px"},me={class:"flex justify-between"},fe={class:"flex gap-6px align-center"},he=i("hr",{class:"divider mb-16px mt-16px border-carbon-20 -mx-24px"},null,-1),pe={class:"flex align-center w-full gap-12px"},ve={class:"flex justify-between valign-middle"},be={class:"flex gap-6px align-center"},ge=i("hr",{class:"divider mb-16px mt-16px border-carbon-20 -mx-24px"},null,-1),_e={class:"flex align-center w-full gap-12px"},ke={key:0},xe=["src","alt"],ye={class:"flex justify-between valign-middle"},Be={class:"flex gap-6px align-center"};function we(e,a,v,_,h,l){const u=m("RuntimeNoTokenCallout"),r=m("BaseParagraph"),z=m("SlidingBlockingModeButton"),p=m("BaseCard"),b=m("BaseIcon"),g=m("XTooltip"),A=m("InputSwitch"),k=m("BaseButton");return c(),d("div",ie,[t(u,{serviceId:l.serviceId},null,8,["serviceId"]),t(p,null,{default:s(()=>[i("div",oe,[i("div",ae,[t(r,{size:"medium",semi:""},{default:s(()=>[o("Block Attacks")]),_:1}),t(r,{color:"subdued"},{default:s(()=>[o("Block (no)SQL injection, shell injection, path traversal, SSRF, ... ")]),_:1})]),h.service?(c(),H(z,{key:0,service:h.service},null,8,["service"])):T("",!0)])]),_:1}),t(p,null,{default:s(()=>[i("div",ne,[i("div",le,[t(r,{class:"flex-shrink-0",size:"medium",semi:""},{default:s(()=>[o("Block Tor Traffic")]),_:1}),i("div",null,[t(b,{icon:"icon-information",size:14,class:"text-carbon-60 flex align-center"}),t(g,null,{default:s(()=>[o("Prevent access from Tor exit nodes to protect against anonymous traffic that could be used maliciously. ")]),_:1})])]),t(A,{modelValue:l.isTorListActive,"onUpdate:modelValue":a[0]||(a[0]=n=>l.isTorListActive=n),onClick:a[1]||(a[1]=G(()=>{},["stop"])),onChange:l.toggleTorListActive},null,8,["modelValue","onChange"])])]),_:1}),t(p,null,{default:s(()=>[i("div",re,[i("div",ce,[t(r,{class:"flex-shrink-0",size:"medium",semi:""},{default:s(()=>[o("Block Bots")]),_:1}),i("div",null,[t(b,{icon:"icon-information",size:14,class:"text-carbon-60 flex align-center"}),t(g,null,{default:s(()=>[o("Filter out automated traffic from known bots and crawlers to reduce server load and potential scraping attempts. ")]),_:1})])]),t(k,{as:"button",variation:"link",style:{"font-size":"14px"},class:"text--capitalize",onClick:a[2]||(a[2]=n=>e.$modal.show("RuntimeBlockUaListModal",{serviceId:this.serviceId}))},{default:s(()=>[o(" Manage Bots ")]),_:1})]),(c(!0),d(x,null,y(l.subscribedUaLists,n=>(c(),d("div",{key:n.id},[de,i("div",ue,[t(r,{size:"medium"},{default:s(()=>[o(B(n.name),1)]),_:2},1024)])]))),128))]),_:1}),t(p,null,{default:s(()=>[i("div",me,[i("div",fe,[t(r,{class:"flex-shrink-0",size:"medium",semi:""},{default:s(()=>[o("Block IPs used by known threat actors")]),_:1}),i("div",null,[t(b,{icon:"icon-information",size:14,class:"text-carbon-60 flex align-center"}),t(g,null,{default:s(()=>[o("Automatically block connections from IP addresses associated with malicious activities and known cybercriminals. ")]),_:1})])]),t(k,{as:"button",variation:"link",style:{"font-size":"14px"},class:"text--capitalize",onClick:a[3]||(a[3]=n=>e.$modal.show("RuntimeBlockThreatActorsListModal",{serviceId:this.serviceId}))},{default:s(()=>[o(" Manage Threat Actors ")]),_:1})]),(c(!0),d(x,null,y(l.enrichedSubscribedThreatActorsLists,n=>(c(),d("div",{key:n.id},[he,i("div",pe,[t(r,{size:"medium"},{default:s(()=>[o(B(n.name),1)]),_:2},1024)])]))),128))]),_:1}),t(p,null,{default:s(()=>[i("div",ve,[i("div",be,[t(r,{class:"flex-shrink-0",size:"medium",semi:""},{default:s(()=>[o("Block Traffic by Countries")]),_:1}),i("div",null,[t(b,{icon:"icon-information",size:14,class:"text-carbon-60 flex align-center"}),t(g,null,{default:s(()=>[o("Control access to your site by allowing or denying traffic based on visitor's geographic location. ")]),_:1})])]),t(k,{as:"button",variation:"link",style:{"font-size":"14px"},class:"text--capitalize",onClick:a[4]||(a[4]=n=>e.$modal.show("RuntimeBlockGeoIpListModal",{serviceId:this.serviceId}))},{default:s(()=>[o(" Manage Countries ")]),_:1})]),(c(!0),d(x,null,y(l.enrichedSubscribedGeoIpLists,n=>(c(),d("div",{key:n.id},[ge,i("div",_e,[t(r,{size:"medium"},{default:s(()=>[o(B(n.name),1)]),_:2},1024),n.country_code?(c(),d("div",ke,[i("img",{class:"rounded-2px valign-top",src:`https://aikido-production-staticfiles-public.s3.eu-west-1.amazonaws.com/flags/${n.country_code.toLowerCase()}.svg`,height:"14",alt:n.name},null,8,xe)])):T("",!0)])]))),128))]),_:1}),t(p,null,{default:s(()=>[i("div",ye,[i("div",Be,[t(r,{class:"flex-shrink-0",size:"medium",semi:""},{default:s(()=>[o("Bypass list")]),_:1}),i("div",null,[t(b,{icon:"icon-information",size:14,class:"text-carbon-60 flex align-center"}),t(g,null,{default:s(()=>[o("The IPs in this list will bypass all Zen security features, including rate limiting and attack blocking. ")]),_:1})])]),t(k,{as:"button",variation:"link",style:{"font-size":"14px"},class:"text--capitalize",onClick:a[5]||(a[5]=n=>e.$modal.show("UpdateRuntimeServiceIPAllowlistModal",{service:this.service}))},{default:s(()=>[o(" Manage Bypass List ")]),_:1})])]),_:1})])}const Ne=C(se,[["render",we]]);export{Ne as default};
