import{_ as I,B as D,d as x,A,r as d,q as l,k as s,w as a,o,n as p,u as b,s as r,ai as m,p as S,S as M,f as P,x as B,I as E,an as k,m as v,a_ as G,F as w,t as L}from"./index-13ff96f4.js";import{I as N}from"./InputCheckbox-81cb3ca6.js";import{D as U,a as O}from"./DataTable-e31a825a.js";import{g as V}from"./repositoryPaths-dd3d5f8e.js";import{a as H,D as z}from"./DataTableCell-51c0104f.js";import{D as F}from"./DataTableActionsCell-bde7169b.js";import{D as j}from"./DataTableCellSelectable-71ffdbc4.js";import"./ActionMenu-3e4470bf.js";const K={props:{repository:Object,selectionMode:String,isSelected:Boolean},emits:["toggleSelected"],components:{DataTableRow:H,DataTableCell:z,DataTableActionsCell:F,DataTableCellSelectable:j,BaseParagraph:D,BasePill:x},computed:{isPayingAccount(){return A.isPaying()},isActive(){return!!this.repository.configuration},formattedMinimumSeverity(){return this.isActive?this.repository.configuration.minimum_severity:"-"},minimumSeverityTextColor(){if(!this.isActive)return"black";switch(this.repository.configuration.minimum_severity.toLowerCase()){case"critical":return"danger";case"high":return"warning";case"medium":return"blue";case"low":return"success";default:return"black"}},actionMenuSections(){return[{title:"Actions",items:[{label:"Manage configuration",icon:"icon-exception",useBaseIcon:!0,onClick:this.handleAddException},{hidden:!this.isActive,label:"Disable Configuration",onClick:this.handleRemoveException,icon:"icon-delete",iconColor:"red",useBaseIcon:!0,destructive:!0}]}]},repositoryPath(){return V(this.repository)}},methods:{getScanStatusLabelText(t){return t?"ON":"OFF"},getScanStatusLabelVariation(t){return t?"green":"gray-fill"},handleAddException(){this.$modal.show("ManageGitlabChecksConfigurationModal",{repositories:[this.repository]})},handleRemoveException(){this.$modal.show("DeleteGitlabChecksConfigurationModal",{repositories:[this.repository]})},handleToggleSelected(t){this.$emit("toggleSelected",{scmRepoId:this.repository.id,selected:t})},handleShowUpgradeModal(){return this.$modal.show("UpgradeAccountModal",{title:this.$t("SETTINGS.INTEGRATIONS.GITHUB_CHECKS.UPGRADE_MODAL.SAST_SCAN.TITLE"),msg:this.$t("SETTINGS.INTEGRATIONS.GITHUB_CHECKS.UPGRADE_MODAL.SAST_SCAN.DESCRIPTION")})}}},q={class:"flex flex-1 justify-between gap-8px"},Y={class:"text-carbon-60"};function J(t,n,i,f,y,e){const T=d("DataTableCellSelectable"),h=d("BaseParagraph"),c=d("BasePill"),g=d("DataTableCell"),u=d("DataTableActionsCell"),C=d("DataTableRow");return l(),s(C,{clickable:"",onClick:n[1]||(n[1]=()=>e.handleToggleSelected(!i.isSelected)),class:M([{"data-table__row--greyed-out":!e.isActive},"hover-trigger"])},{default:a(()=>[o(T,{mode:i.selectionMode,selected:i.isSelected,"show-on-parent-hover":!0,onSelect:n[0]||(n[0]=R=>e.handleToggleSelected(R))},null,8,["mode","selected"]),o(g,null,{default:a(()=>[p("div",q,[o(h,null,{default:a(()=>[p("span",Y,b(e.repositoryPath),1),r(" "+b(i.repository.scm_repo_name),1)]),_:1}),e.isActive?S("",!0):(l(),s(c,{key:0,class:"show-on-hover",title:"Configure",variation:"purple",onClick:m(e.handleAddException,["stop"])},null,8,["onClick"]))])]),_:1}),o(g,null,{default:a(()=>[o(h,{color:e.minimumSeverityTextColor,class:"text--capitalize"},{default:a(()=>[r(b(e.formattedMinimumSeverity),1)]),_:1},8,["color"])]),_:1}),o(g,null,{default:a(()=>[e.isActive?(l(),s(c,{key:0,title:e.getScanStatusLabelText(i.repository.configuration.fail_on_dependency_scan),variation:e.getScanStatusLabelVariation(i.repository.configuration.fail_on_dependency_scan)},null,8,["title","variation"])):(l(),s(h,{key:1,color:"gray"},{default:a(()=>[r("-")]),_:1}))]),_:1}),o(g,null,{default:a(()=>[!e.isPayingAccount&&e.isActive?(l(),s(c,{key:0,variation:"purple",title:"Upgrade",onClick:m(e.handleShowUpgradeModal,["stop"])},null,8,["onClick"])):e.isActive?(l(),s(c,{key:1,title:e.getScanStatusLabelText(i.repository.configuration.fail_on_sast_scan),variation:e.getScanStatusLabelVariation(i.repository.configuration.fail_on_sast_scan)},null,8,["title","variation"])):(l(),s(h,{key:2,color:"gray"},{default:a(()=>[r("-")]),_:1}))]),_:1}),o(g,null,{default:a(()=>[!e.isPayingAccount&&e.isActive?(l(),s(c,{key:0,variation:"purple",title:"Upgrade",onClick:m(e.handleShowUpgradeModal,["stop"])},null,8,["onClick"])):e.isActive?(l(),s(c,{key:1,title:e.getScanStatusLabelText(i.repository.configuration.fail_on_iac_scan),variation:e.getScanStatusLabelVariation(i.repository.configuration.fail_on_iac_scan)},null,8,["title","variation"])):(l(),s(h,{key:2,color:"gray"},{default:a(()=>[r("-")]),_:1}))]),_:1}),o(g,null,{default:a(()=>[!e.isPayingAccount&&e.isActive?(l(),s(c,{key:0,variation:"purple",title:"Upgrade",onClick:m(e.handleShowUpgradeModal,["stop"])},null,8,["onClick"])):e.isActive?(l(),s(c,{key:1,title:e.getScanStatusLabelText(i.repository.configuration.fail_on_secrets_scan),variation:e.getScanStatusLabelVariation(i.repository.configuration.fail_on_secrets_scan)},null,8,["title","variation"])):(l(),s(h,{key:2,color:"gray"},{default:a(()=>[r("-")]),_:1}))]),_:1}),t.$featureflags.enable_ci_malware_scan?(l(),s(g,{key:0},{default:a(()=>[!e.isPayingAccount&&e.isActive?(l(),s(c,{key:0,variation:"purple",title:"Upgrade",onClick:m(e.handleShowUpgradeModal,["stop"])},null,8,["onClick"])):e.isActive?(l(),s(c,{key:1,title:e.getScanStatusLabelText(i.repository.configuration.fail_on_malware_scan),variation:e.getScanStatusLabelVariation(i.repository.configuration.fail_on_malware_scan)},null,8,["title","variation"])):(l(),s(h,{key:2,color:"gray"},{default:a(()=>[r("-")]),_:1}))]),_:1})):S("",!0),o(u,{sections:e.actionMenuSections},null,8,["sections"])]),_:1},8,["class"])}const Q=I(K,[["render",J]]),W={components:{BaseButton:P,BaseIcon:B,DataTable:U,DataTableHeader:O,ConfigurationOverviewTableRow:Q,InputSearch:E,InputCheckbox:N},emits:["reloadRepositories"],inject:["repositories","isFetchingRepositories"],data(){return{searchTerm:"",selectedRepositories:[]}},async mounted(){k.on("gitlabChecksConfigurationUpdated",this.clearSelectedRepositories)},beforeUnmount(){k.off("gitlabChecksConfigurationUpdated",this.clearSelectedRepositories)},watch:{isFetchingRepositories(t){t?this.$globalLoadingIndicator.show():this.$globalLoadingIndicator.hide()},repositories(){const t=[];for(const n of this.selectedRepositories){const i=this.repositories.find(f=>f.id===n.id);if(!i){t.push(n);continue}t.push(i)}this.selectedRepositories=t}},computed:{isPayingAccount(){return A.isPayingAndNoProTrial()},hasSelectedSomeRepos(){return this.selectedRepositories.length>0},hasSelectedAllRepos(){return this.repositories.every(t=>this.selectedRepositoryIds.includes(t.id))},selectionMode(){return this.hasSelectedSomeRepos?"edit":"display"},selectedRepositoryIds(){return this.selectedRepositories.map(t=>t.id)},allSelectedReposHaveConfiguration(){return this.selectedRepositories.length<1?!1:this.selectedRepositories.every(t=>!!t.configuration)}},methods:{handleReloadRepositories(){this.$emit("reloadRepositories",{searchTerm:this.searchTerm})},handleConfigureScans(){if(!this.isPayingAccount&&this.selectedRepositories.length>1){let t="";return A.isPaying()?t=this.$t("SETTINGS.INTEGRATIONS.GITLAB.UPGRADE_MODAL.TITLE_PRO_TRIAL"):t=this.$t("SETTINGS.INTEGRATIONS.GITLAB.UPGRADE_MODAL.TITLE"),this.$modal.show("UpgradeAccountModal",{title:t,msg:this.$t("SETTINGS.INTEGRATIONS.GITLAB.UPGRADE_MODAL.DESCRIPTION")})}this.selectedRepositories.length>15&&this.$toast.error({title:"Invalid operation",description:"You can configure at most 15 repos at the same time"}),this.$modal.show("ManageGitlabChecksConfigurationModal",{repositories:this.selectedRepositories})},handleShowDeleteConfigurationModal(){this.$modal.show("DeleteGitlabChecksConfigurationModal",{repositories:this.selectedRepositories})},handleToggleSelectAllrepos(t){if(t){let n=[];for(const i of this.repositories)this.selectedRepositoryIds.includes(i.id)||n.push(i);this.selectedRepositories=[...this.selectedRepositories,...n]}else{const n=this.repositories.map(i=>i.id);this.selectedRepositories=[...this.selectedRepositories.filter(i=>!n.includes(i.id))]}},handleToggleRepo({scmRepoId:t,selected:n}){if(n){if(this.selectedRepositoryIds.includes(t))return;const i=this.repositories.find(f=>f.id===t);if(!i)return;this.selectedRepositories.push(i)}else{const i=this.selectedRepositories.filter(f=>f.id!==t);this.selectedRepositories=[...i]}},clearSelectedRepositories(){this.selectedRepositories=[]},openDefaultCiConfigModal(){this.$modal.show("ManageGitlabChecksGlobalConfigurationModal")}}},X={class:"mb-16px flex align-center justify-between gap-12px"},Z={class:"flex align-center gap-12px"},$={key:0,class:"overflow-hidden p-1px"},ee=p("i",{class:"icon icon-settings inherit-font"},null,-1),te=p("i",{class:"icon icon-add inherit-font"},null,-1);function ie(t,n,i,f,y,e){const T=d("InputSearch"),h=d("BaseIcon"),c=d("BaseButton"),g=d("InputCheckbox"),u=d("DataTableHeader"),C=d("ConfigurationOverviewTableRow"),R=d("DataTable");return l(),v(w,null,[p("div",X,[o(T,{modelValue:y.searchTerm,"onUpdate:modelValue":[n[0]||(n[0]=_=>y.searchTerm=_),e.handleReloadRepositories],spacing:"compact"},null,8,["modelValue","onUpdate:modelValue"]),p("div",Z,[o(G,{name:"expand-horizontal-"},{default:a(()=>[e.allSelectedReposHaveConfiguration?(l(),v("div",$,[o(c,{onClick:e.handleShowDeleteConfigurationModal,variation:"filter",size:"small",class:"ws-nowrap"},{default:a(()=>[o(h,{icon:"icon-delete"}),r(" Disable Configuration ")]),_:1},8,["onClick"])])):S("",!0)]),_:1}),o(c,{onClick:e.openDefaultCiConfigModal,size:"small",variation:"filter"},{default:a(()=>[ee,r(" Settings ")]),_:1},8,["onClick"]),o(c,{onClick:e.handleConfigureScans,disabled:!e.hasSelectedSomeRepos,size:"small"},{default:a(()=>[te,r(" Configure Scans ")]),_:1},8,["onClick","disabled"])])]),o(R,null,{header:a(()=>[o(u,{width:"48px",alignment:"center",spacing:"compact"},{default:a(()=>[o(g,{"semi-checked":e.hasSelectedSomeRepos,modelValue:e.hasSelectedAllRepos,"onUpdate:modelValue":e.handleToggleSelectAllrepos},null,8,["semi-checked","modelValue","onUpdate:modelValue"])]),_:1}),o(u,{width:"auto"},{default:a(()=>[r("Repository")]),_:1}),o(u,{width:"160px"},{default:a(()=>[r("Minimum severity")]),_:1}),o(u,{width:"140px"},{default:a(()=>[r("Dependencies")]),_:1}),o(u,{width:"90px"},{default:a(()=>[r("SAST")]),_:1}),o(u,{width:"90px"},{default:a(()=>[r("IaC")]),_:1}),o(u,{width:"90px"},{default:a(()=>[r("Secrets")]),_:1}),t.$featureflags.enable_ci_malware_scan?(l(),s(u,{key:0,width:"90px"},{default:a(()=>[r("Malware")]),_:1})):S("",!0),o(u,{width:"48px",alignment:"center"})]),body:a(()=>[(l(!0),v(w,null,L(e.repositories,_=>(l(),s(C,{repository:_,selectionMode:e.selectionMode,isSelected:e.selectedRepositoryIds.includes(_.id),key:_.id,onToggleSelected:e.handleToggleRepo},null,8,["repository","selectionMode","isSelected","onToggleSelected"]))),128))]),_:1})],64)}const ue=I(W,[["render",ie]]);export{ue as default};
