import{_ as P,g as v,a2 as w,H as C,M as b,B as x,V,f as S,gy as T,gA as N,an as q,r as u,q as t,k as h,w as n,n as e,o as _,s as o,m as l,u as r,p as M,F as H,t as R}from"./index-13ff96f4.js";import{S as U}from"./SelectRepoSearchable-f2be202e.js";import{B as E}from"./BaseCodeBlock-cec75629.js";import{i as f}from"./isIP-d5cb9e58.js";import"./repoName-872812ed.js";import"./InputSearchDropdown-02988f6b.js";import"./ActionMenu-3e4470bf.js";const F={emits:["close"],components:{BaseLink:v,XTooltip:w,BaseCodeBlock:E,BaseHeading:C,BaseModal:b,SelectRepoSearchable:U,BaseParagraph:x,InputText:V,BaseButton:S},props:{endpoint:{type:Object,required:!0}},data(){var s;return{confirmed:!1,loading:!1,myIpAddress:void 0,ipAddresses:((s=this.endpoint.allowed_ip_addresses)==null?void 0:s.length)>0?this.endpoint.allowed_ip_addresses:[""]}},async mounted(){this.myIpAddress=await T()},methods:{async onSubmit(){if(!this.confirmed){this.confirmed=!0;return}await N({serviceId:this.endpoint.service_id,method:this.endpoint.method,route:this.endpoint.route,ipAddresses:this.ipAddresses.filter(f)}),this.$toast.success("Updated IP Allowlist for route. It might take a while to reflect on your instances."),q.emit("runtime.endpoint.updated",this.endpoint),this.$emit("close")},handleAddIPAddress(){this.ipAddresses.push("")},handleRemoveIPAddress(s){this.ipAddresses.splice(s,1),this.ipAddresses.length===0&&this.ipAddresses.push("")},handleTypingIPAddress(s,i){this.ipAddresses[s]=i},handleBlur(s){f(this.ipAddresses[s])||(this.ipAddresses[s]="")}}},L=e("div",null,null,-1),Y={class:"flex flex-column gap-12px w-full"},z={key:0},O={key:0},j={key:1},D={key:1},X={class:"text--capitalize"},G=e("strong",null,"only",-1),J=e("strong",null,"Note",-1),K={key:0},Q=e("label",{class:"text-primary-aik-140 text--semi body--normal block mb-12px"}," IP Addresses ",-1),W={class:"flex flex-column gap-8px mb-12px"},Z=e("i",{class:"icon icon-add"},null,-1);function $(s,i,d,ee,c,a){const y=u("BaseHeading"),I=u("BaseParagraph"),B=u("InputText"),m=u("BaseButton"),g=u("BaseModal");return t(),h(g,{width:800,onClose:i[1]||(i[1]=A=>this.$emit("close")),allowBackgroundClose:!1},{header:n(()=>[L]),content:n(()=>[e("div",null,[e("div",Y,[_(y,{as:"h3"},{default:n(()=>[o(" IP Allowlist For "),d.endpoint.graphql?(t(),l("strong",D,[o(r(d.endpoint.route)+" · "+r(d.endpoint.graphql.name)+" · ",1),e("span",X,r(d.endpoint.graphql.type),1)])):(t(),l("strong",z,[d.endpoint.method==="*"?(t(),l("span",O,"ANY")):(t(),l("span",j,r(d.endpoint.method),1)),o(" "+r(d.endpoint.route),1)]))]),_:1}),_(I,null,{default:n(()=>[o(" Limit access to this API endpoint to specific IPs "),G,o(". This helps to ensure admin APIs are only accessible from your office or company VPN. "),J,o(": All other IPs will be blocked. "),c.myIpAddress?(t(),l("span",K,"Your IP: "+r(c.myIpAddress),1)):M("",!0)]),_:1})])]),e("div",null,[Q,e("div",W,[(t(!0),l(H,null,R(c.ipAddresses,(A,p)=>(t(),h(B,{key:p,placeholder:"IP Address",modelValue:c.ipAddresses[p],"onUpdate:modelValue":k=>a.handleTypingIPAddress(p,k),name:"ipAddress",type:"text",onClear:()=>a.handleRemoveIPAddress(p),clearable:!0,onBlur:()=>a.handleBlur(p)},null,8,["modelValue","onUpdate:modelValue","onClear","onBlur"]))),128))]),e("div",null,[_(m,{variation:"plain",size:"small",onClick:a.handleAddIPAddress},{default:n(()=>[Z,o(" Add IP Address ")]),_:1},8,["onClick"])])])]),footer:n(()=>[_(m,{onClicked:i[0]||(i[0]=A=>this.$emit("close")),variation:"tertiary",class:"ml-auto"},{default:n(()=>[o("Cancel")]),_:1}),c.confirmed?(t(),h(m,{key:1,onClicked:a.onSubmit,variation:"destructive"},{default:n(()=>[o("Are You Sure?")]),_:1},8,["onClicked"])):(t(),h(m,{key:0,onClicked:a.onSubmit,variation:"destructive"},{default:n(()=>[o("Allow Select IPs Only")]),_:1},8,["onClicked"]))]),_:1})}const le=P(F,[["render",$]]);export{le as default};
