import{_ as a,N as n,K as r,r as d,q as p,k as c}from"./index-13ff96f4.js";import{g as u}from"./repoName-872812ed.js";const m={components:{BaseSelect:n},emits:["update:selectedRepoId","repositorySelected"],props:{selectedRepoId:Number,filterRepoIds:{type:Array,default:null},label:{type:String,default:"Select a repository"},includeNoneOption:{type:Boolean,default:!1}},data(){return{scmRepositories:[],isLoadingSCMRepositories:!0}},mounted(){this.fetchScmRepos()},computed:{options(){return this.includeNoneOption?[{title:"None",id:-1},...this.scmRepositories]:this.scmRepositories}},methods:{async fetchScmRepos(){this.isLoadingSCMRepositories=!0;let e=await r(null,!0,!0);e=e.filter(t=>t.active),this.filterRepoIds!=null&&(e=e.filter(t=>this.filterRepoIds.includes(t.id))),this.scmRepositories=e.map(t=>({title:u(t),id:t.id})),this.isLoadingSCMRepositories=!1},handleSelectValue(e){const t=this.scmRepositories.find(s=>s.id==e);this.$emit("update:selectedRepoId",e),this.$emit("repositorySelected",t)}}};function R(e,t,s,f,i,o){const l=d("BaseSelect");return p(),c(l,{label:s.label,options:o.options,"is-loading":i.isLoadingSCMRepositories,modelValue:s.selectedRepoId,"onUpdate:modelValue":o.handleSelectValue},null,8,["label","options","is-loading","modelValue","onUpdate:modelValue"])}const _=a(m,[["render",R]]);export{_ as S};
