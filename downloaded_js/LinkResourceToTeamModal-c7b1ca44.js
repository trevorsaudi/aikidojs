import{_ as L,H as T,B,M as R,f as V,X as x,aR as S,K as v,f_ as M,f$ as b,g0 as D,a$ as P,aw as N,r as i,q as r,k as c,w as a,o as u,s as m,n as h,p,u as _}from"./index-13ff96f4.js";import{g as H}from"./repoName-872812ed.js";import{B as U}from"./ButtonMultiOption-12e505fb.js";import{I as X}from"./InputSearchDropdown-02988f6b.js";import{M as A}from"./ManualInputSearchDropdown-6a7ece3e.js";import"./ActionMenu-3e4470bf.js";const q={props:{team:Object,linkedClouds:Array,linkedRepositories:Array,linkedImages:Array},emits:["close","saved"],components:{ButtonMultiOption:U,BaseHeading:T,BaseParagraph:B,BaseModal:R,BaseButton:V,XPreloader:x,InputSearchDropdown:X,ManualInputSearchDropdown:A},data(){return{selectedConnectOption:"scm_repo",clouds:[],repositories:[],selectedRepository:null,selectedCloud:null,isLoading:!0,selectedImage:null,hasImages:!1,images:[],isLoadingImages:!1}},async mounted(){await Promise.allSettled([this.loadClouds(),this.loadRepositories(),this.loadInitialImages()]),this.connectOptions.length>0&&(this.selectedConnectOption=this.connectOptions[0].id),this.isLoading=!1},watch:{selectedConnectOption(){this.selectedConnectOption==="scm_repo"&&(this.selectedCloud=null,this.selectedImage=null),this.selectedConnectOption==="cloud"&&(this.selectedRepository=null,this.selectedImage=null),this.selectedConnectOption==="image"&&(this.selectedCloud=null,this.selectedRepository=null)}},computed:{description(){return this.connectOptions.length>1?`First, select which kind of resource you'd like to link to this team, then select the resource and select "Link".`:"Select the resource you'd like to link to this team below."},connectOptions(){let t=[];return this.repositoryOptions.length>0&&t.push({id:"scm_repo",title:"Repository"}),this.cloudOptions.length>0&&t.push({id:"cloud",title:"Cloud"}),this.hasImages&&t.push({id:"image",title:"Container"}),t},repositoryOptions(){const t=this.linkedRepositories.map(e=>e.id);return this.repositories.filter(e=>!t.includes(e.id)).map(e=>({value:e.id,label:H(e,!0)}))},cloudOptions(){const t=this.linkedClouds.map(e=>e.id);return this.clouds.filter(e=>!t.includes(e.id)).map(e=>({value:e.id,label:e.name}))},imageOptions(){const t=this.linkedImages.map(e=>e.id);return this.images.filter(e=>!t.includes(e.id)).map(e=>{let d=e.name;return e.cloud_name&&(d=`${e.cloud_name} - ${e.name}`),e.registry_name&&(d=`${e.registry_name} - ${e.name}`),["aws"].includes(e.registry_source)&&(d=`${e.registry_username} - ${e.name}`),e.tag&&(d+=`:${e.tag}`),{value:e.id,label:d}})}},methods:{handleClose(){this.$emit("close")},async loadClouds(){this.clouds=await S(void 0,void 0,{dont_pass_team_context:!0})},async loadRepositories(){const t=await v(null,!0,!0,void 0,void 0,void 0,void 0,{dont_pass_team_context:!0});this.repositories=t.filter(s=>s.active>0)},async handleLinkResourceToTeam(){this.selectedConnectOption==="scm_repo"?await this.handleLinkTeamToRepository():this.selectedConnectOption==="cloud"?await this.handleLinkTeamToCloud():this.selectedConnectOption==="image"&&await this.handleLinkTeamToImage(),this.$emit("saved")},async handleLinkTeamToCloud(){this.selectedCloud&&await M(this.team.id,this.selectedCloud)},async handleLinkTeamToRepository(){this.selectedRepository&&await b(this.team.id,this.selectedRepository)},async handleLinkTeamToImage(){this.selectedImage&&await D(this.team.id,this.selectedImage)},async loadInitialImages(){await this.loadImages(),this.hasImages=this.images.length>0},async loadImages(t=null){this.isLoadingImages=!0,this.images=await P({activeOnly:!0,search:t}),this.isLoadingImages=!1},onImageSearchChanged:N(async function(t){await this.loadImages(t)},200)}},z={class:"flex flex-column gap-12px relative"},j={class:"text--semi-bold"},F={class:"flex flex-column gap-12px relative"};function K(t,s,e,d,o,n){const g=i("BaseParagraph"),y=i("XPreloader"),k=i("BaseHeading"),I=i("ButtonMultiOption"),f=i("InputSearchDropdown"),O=i("ManualInputSearchDropdown"),C=i("BaseButton"),w=i("BaseModal");return r(),c(w,{width:600,onClose:n.handleClose,allowBackgroundClose:!1},{header:a(()=>[u(g,{color:"gray"},{default:a(()=>[m("Link resource to team")]),_:1})]),content:a(()=>[h("div",z,[o.isLoading?(r(),c(y,{key:0,class:"supercenter",size:"medium"})):p("",!0),u(k,{as:"h3"},{default:a(()=>[m("Lets link a resource to "),h("span",j,_(e.team.name),1)]),_:1}),u(g,{size:"medium"},{default:a(()=>[m(_(n.description),1)]),_:1}),h("div",F,[n.connectOptions.length>1?(r(),c(I,{key:0,class:"issue-detail__card__questionaire__answer",options:n.connectOptions,modelValue:o.selectedConnectOption,"onUpdate:modelValue":s[0]||(s[0]=l=>o.selectedConnectOption=l)},null,8,["options","modelValue"])):p("",!0),o.selectedConnectOption==="scm_repo"?(r(),c(f,{key:1,options:n.repositoryOptions,modelValue:o.selectedRepository,"onUpdate:modelValue":s[1]||(s[1]=l=>o.selectedRepository=l),label:"Repositories"},null,8,["options","modelValue"])):p("",!0),o.selectedConnectOption==="cloud"?(r(),c(f,{key:2,options:n.cloudOptions,modelValue:o.selectedCloud,"onUpdate:modelValue":s[2]||(s[2]=l=>o.selectedCloud=l),label:"Clouds"},null,8,["options","modelValue"])):p("",!0),o.selectedConnectOption==="image"?(r(),c(O,{key:3,options:n.imageOptions,modelValue:o.selectedImage,"onUpdate:modelValue":s[3]||(s[3]=l=>o.selectedImage=l),onSearchChanged:n.onImageSearchChanged,isLoading:o.isLoadingImages,label:"Containers"},null,8,["options","modelValue","onSearchChanged","isLoading"])):p("",!0)])])]),footer:a(()=>[u(C,{onClicked:n.handleClose,variation:"plain",class:"ml-auto"},{default:a(()=>[m("Cancel")]),_:1},8,["onClicked"]),u(C,{onClicked:n.handleLinkResourceToTeam},{default:a(()=>[m("Link")]),_:1},8,["onClicked"])]),_:1},8,["onClose"])}const Z=L(q,[["render",K]]);export{Z as default};
