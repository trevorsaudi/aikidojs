import{_ as w,B as I,d as M,A,r as d,q as l,k as s,w as i,o as a,n as p,u as b,s as n,ai as _,p as m,S as U,f as B,x as P,I as E,a2 as G,an as v,m as R,a_ as L,U as N,aQ as O,F as k,t as V}from"./index-13ff96f4.js";import{I as H}from"./InputCheckbox-81cb3ca6.js";import{D as z,a as F}from"./DataTable-e31a825a.js";import{g as j}from"./repositoryPaths-dd3d5f8e.js";import{a as K,D as X}from"./DataTableCell-51c0104f.js";import{D as q}from"./DataTableActionsCell-bde7169b.js";import{D as Q}from"./DataTableCellSelectable-71ffdbc4.js";import"./ActionMenu-3e4470bf.js";const J={props:{repository:Object,selectionMode:String,isSelected:Boolean,defaultConfig:[Object,null]},emits:["toggleSelected"],components:{DataTableRow:K,DataTableCell:X,DataTableActionsCell:q,DataTableCellSelectable:Q,BaseParagraph:I,BasePill:M},computed:{isPayingAccount(){return A.isPaying()},configuration(){return this.repository.configuration?this.repository.configuration:this.defaultConfig?this.defaultConfig:null},isAllDisabled(){return!this.configuration.fail_on_dependency_scan&&!this.configuration.fail_on_sast_scan&&!this.configuration.fail_on_iac_scan&&!this.configuration.fail_on_secrets_scan},isActive(){return!!this.configuration},formattedMinimumSeverity(){return!this.isActive||this.isAllDisabled?"-":this.configuration.minimum_severity},minimumSeverityTextColor(){var t;if(!this.isActive||this.isAllDisabled)return"black";switch((t=this.configuration.minimum_severity)==null?void 0:t.toLowerCase()){case"critical":return"danger";case"high":return"warning";case"medium":return"blue";case"low":return"success";default:return"black"}},actionMenuSections(){return[{title:"Actions",items:[{label:"Manage configuration",icon:"icon-exception",useBaseIcon:!0,onClick:this.handleAddException},{hidden:!this.repository.configuration,label:"Disable Configuration",onClick:this.handleRemoveException,icon:"icon-delete",iconColor:"red",useBaseIcon:!0,destructive:!0}]}]},repositoryPath(){return j(this.repository)}},methods:{getScanStatusLabelText(t){return t?"ON":"OFF"},getScanStatusLabelVariation(t){return t?"green":"gray-fill"},handleAddException(){this.$modal.show("ManageGitHubChecksConfigurationModal",{repositories:[this.repository]})},handleRemoveException(){this.$modal.show("DeleteGitHubChecksConfigurationModal",{repositories:[this.repository]})},handleToggleSelected(t){this.$emit("toggleSelected",{scmRepoId:this.repository.id,selected:t})},handleShowUpgradeModal(){return this.$modal.show("UpgradeAccountModal",{title:this.$t("SETTINGS.INTEGRATIONS.GITHUB_CHECKS.UPGRADE_MODAL.SAST_SCAN.TITLE"),msg:this.$t("SETTINGS.INTEGRATIONS.GITHUB_CHECKS.UPGRADE_MODAL.SAST_SCAN.DESCRIPTION")})}}},W={class:"flex flex-1 justify-between gap-8px"},Y={class:"text-carbon-60"};function Z(t,r,o,g,D,e){const S=d("DataTableCellSelectable"),h=d("BaseParagraph"),c=d("BasePill"),f=d("DataTableCell"),C=d("DataTableActionsCell"),u=d("DataTableRow");return l(),s(u,{clickable:"",onClick:r[1]||(r[1]=()=>e.handleToggleSelected(!o.isSelected)),class:U([{"data-table__row--greyed-out":!o.repository.configuration},"hover-trigger"])},{default:i(()=>[a(S,{mode:o.selectionMode,selected:o.isSelected,"show-on-parent-hover":!0,onSelect:r[0]||(r[0]=y=>e.handleToggleSelected(y))},null,8,["mode","selected"]),a(f,null,{default:i(()=>[p("div",W,[a(h,null,{default:i(()=>[p("span",Y,b(e.repositoryPath),1),n(" "+b(o.repository.scm_repo_name),1)]),_:1}),o.repository.configuration?m("",!0):(l(),s(c,{key:0,class:"show-on-hover",title:"Configure",variation:"purple",onClick:_(e.handleAddException,["stop"])},null,8,["onClick"]))])]),_:1}),a(f,null,{default:i(()=>[a(h,{color:e.minimumSeverityTextColor,class:"text--capitalize"},{default:i(()=>[n(b(e.formattedMinimumSeverity),1)]),_:1},8,["color"])]),_:1}),a(f,null,{default:i(()=>[e.isActive?(l(),s(c,{key:0,title:e.getScanStatusLabelText(e.configuration.fail_on_dependency_scan),variation:e.getScanStatusLabelVariation(e.configuration.fail_on_dependency_scan)},null,8,["title","variation"])):(l(),s(h,{key:1,color:"gray"},{default:i(()=>[n("-")]),_:1}))]),_:1}),a(f,null,{default:i(()=>[!e.isPayingAccount&&e.isActive?(l(),s(c,{key:0,variation:"purple",title:"Upgrade",onClick:_(e.handleShowUpgradeModal,["stop"])},null,8,["onClick"])):e.isActive?(l(),s(c,{key:1,title:e.getScanStatusLabelText(e.configuration.fail_on_sast_scan),variation:e.getScanStatusLabelVariation(e.configuration.fail_on_sast_scan)},null,8,["title","variation"])):(l(),s(h,{key:2,color:"gray"},{default:i(()=>[n("-")]),_:1}))]),_:1}),a(f,null,{default:i(()=>[!e.isPayingAccount&&e.isActive?(l(),s(c,{key:0,variation:"purple",title:"Upgrade",onClick:_(e.handleShowUpgradeModal,["stop"])},null,8,["onClick"])):e.isActive?(l(),s(c,{key:1,title:e.getScanStatusLabelText(e.configuration.fail_on_iac_scan),variation:e.getScanStatusLabelVariation(e.configuration.fail_on_iac_scan)},null,8,["title","variation"])):(l(),s(h,{key:2,color:"gray"},{default:i(()=>[n("-")]),_:1}))]),_:1}),a(f,null,{default:i(()=>[!e.isPayingAccount&&e.isActive?(l(),s(c,{key:0,variation:"purple",title:"Upgrade",onClick:_(e.handleShowUpgradeModal,["stop"])},null,8,["onClick"])):e.isActive?(l(),s(c,{key:1,title:e.getScanStatusLabelText(e.configuration.fail_on_secrets_scan),variation:e.getScanStatusLabelVariation(e.configuration.fail_on_secrets_scan)},null,8,["title","variation"])):(l(),s(h,{key:2,color:"gray"},{default:i(()=>[n("-")]),_:1}))]),_:1}),t.$featureflags.enable_ci_malware_scan?(l(),s(f,{key:0},{default:i(()=>[!e.isPayingAccount&&e.isActive?(l(),s(c,{key:0,variation:"purple",title:"Upgrade",onClick:_(e.handleShowUpgradeModal,["stop"])},null,8,["onClick"])):e.isActive?(l(),s(c,{key:1,title:e.getScanStatusLabelText(e.configuration.fail_on_malware_scan),variation:e.getScanStatusLabelVariation(e.configuration.fail_on_malware_scan)},null,8,["title","variation"])):(l(),s(h,{key:2,color:"gray"},{default:i(()=>[n("-")]),_:1}))]),_:1})):m("",!0),a(C,{sections:e.actionMenuSections},null,8,["sections"])]),_:1},8,["class"])}const $=w(J,[["render",Z]]),ee={components:{BaseButton:B,BaseIcon:P,DataTable:z,DataTableHeader:F,ConfigurationOverviewTableRow:$,InputSearch:E,InputCheckbox:H,XTooltip:G},props:{searchTerm:{type:String,default:""}},emits:["update:searchTerm"],inject:["repositories","isFetchingRepositories"],data(){return{selectedRepositories:[]}},async mounted(){v.on("githubChecksConfigurationUpdated",this.clearSelectedRepositories)},beforeUnmount(){v.off("githubChecksConfigurationUpdated",this.clearSelectedRepositories)},watch:{isFetchingRepositories(t){t?this.$globalLoadingIndicator.show():this.$globalLoadingIndicator.hide()},repositories(){const t=[];for(const r of this.selectedRepositories){const o=this.repositories.find(g=>g.id===r.id);if(!o){t.push(r);continue}t.push(o)}this.selectedRepositories=t}},computed:{isPayingAccount(){return A.isPayingAndNoProTrial()},hasSelectedSomeRepos(){return this.selectedRepositories.length>0},hasSelectedAllRepos(){return this.repositories.every(t=>this.selectedRepositoryIds.includes(t.id))},selectionMode(){return this.hasSelectedSomeRepos?"edit":"display"},selectedRepositoryIds(){return this.selectedRepositories.map(t=>t.id)},allSelectedReposHaveConfiguration(){return this.selectedRepositories.length<1?!1:this.selectedRepositories.every(t=>!!t.configuration)}},methods:{handleUpdateSearch(t){this.$emit("update:searchTerm",t)},handleConfigureScans(){const t=this.$featureflags.increased_pr_check_configurations?10:2;if(!this.isPayingAccount&&this.selectedRepositories.length>=t)return this.$modal.show("UpgradeAccountModal",{title:this.$t("SETTINGS.INTEGRATIONS.GITHUB_CHECKS.UPGRADE_MODAL.TITLE"),msg:this.$t("SETTINGS.INTEGRATIONS.GITHUB_CHECKS.UPGRADE_MODAL.DESCRIPTION")});this.$modal.show("ManageGitHubChecksConfigurationModal",{repositories:this.selectedRepositories})},handleShowDeleteConfigurationModal(){this.$modal.show("DeleteGitHubChecksConfigurationModal",{repositories:this.selectedRepositories})},handleToggleSelectAllrepos(t){if(t){let r=[];for(const o of this.repositories)this.selectedRepositoryIds.includes(o.id)||r.push(o);this.selectedRepositories=[...this.selectedRepositories,...r]}else{const r=this.repositories.map(o=>o.id);this.selectedRepositories=[...this.selectedRepositories.filter(o=>!r.includes(o.id))]}},handleToggleRepo({scmRepoId:t,selected:r}){if(r){if(this.selectedRepositoryIds.includes(t))return;const o=this.repositories.find(g=>g.id===t);if(!o)return;this.selectedRepositories.push(o)}else{const o=this.selectedRepositories.filter(g=>g.id!==t);this.selectedRepositories=[...o]}},clearSelectedRepositories(){this.selectedRepositories=[]},openDefaultCiConfigModal(){this.$modal.show("ManageDefaultCiConfigurationModal")}}},te={class:"mb-16px flex align-center justify-between gap-12px"},ie={class:"flex align-center gap-12px"},ae={key:0,class:"overflow-hidden p-1px"},oe=p("i",{class:"icon icon-settings inherit-font"},null,-1),le=p("i",{class:"icon icon-add inherit-font"},null,-1);function se(t,r,o,g,D,e){const S=d("InputSearch"),h=d("BaseIcon"),c=d("BaseButton"),f=d("XTooltip"),C=d("InputCheckbox"),u=d("DataTableHeader"),y=d("ConfigurationOverviewTableRow"),x=d("DataTable");return l(),R(k,null,[p("div",te,[a(S,{modelValue:o.searchTerm,"onUpdate:modelValue":e.handleUpdateSearch,spacing:"compact"},null,8,["modelValue","onUpdate:modelValue"]),p("div",ie,[a(L,{name:"expand-horizontal-"},{default:i(()=>[e.allSelectedReposHaveConfiguration?(l(),R("div",ae,[a(c,{onClick:e.handleShowDeleteConfigurationModal,variation:"filter",size:"small",class:"ws-nowrap"},{default:i(()=>[a(h,{icon:"icon-delete"}),n(" Disable Configuration ")]),_:1},8,["onClick"])])):m("",!0)]),_:1}),a(c,{onClick:e.openDefaultCiConfigModal,size:"small",variation:"filter"},{default:i(()=>[oe,n(" Settings ")]),_:1},8,["onClick"]),p("span",null,[a(c,{onClick:e.handleConfigureScans,disabled:!e.hasSelectedSomeRepos,size:"small"},{default:i(()=>[le,n(" Configure Scans ")]),_:1},8,["onClick","disabled"]),N(a(f,null,{default:i(()=>[n("Please select a repository first")]),_:1},512),[[O,!e.hasSelectedSomeRepos]])])])]),a(x,null,{header:i(()=>[a(u,{width:"48px",alignment:"center",spacing:"compact"},{default:i(()=>[a(C,{"semi-checked":e.hasSelectedSomeRepos,modelValue:e.hasSelectedAllRepos,"onUpdate:modelValue":e.handleToggleSelectAllrepos},null,8,["semi-checked","modelValue","onUpdate:modelValue"])]),_:1}),a(u,{width:"auto"},{default:i(()=>[n("Repository")]),_:1}),a(u,{width:"160px"},{default:i(()=>[n("Minimum severity")]),_:1}),a(u,{width:"140px"},{default:i(()=>[n("Dependencies")]),_:1}),a(u,{width:"90px"},{default:i(()=>[n("SAST")]),_:1}),a(u,{width:"90px"},{default:i(()=>[n("IaC")]),_:1}),a(u,{width:"90px"},{default:i(()=>[n("Secrets")]),_:1}),t.$featureflags.enable_ci_malware_scan?(l(),s(u,{key:0,width:"90px"},{default:i(()=>[n("Malware")]),_:1})):m("",!0),a(u,{width:"48px",alignment:"center"})]),body:i(()=>[(l(!0),R(k,null,V(e.repositories,T=>(l(),s(y,{repository:T,selectionMode:e.selectionMode,isSelected:e.selectedRepositoryIds.includes(T.id),key:T.id,onToggleSelected:e.handleToggleRepo},null,8,["repository","selectionMode","isSelected","onToggleSelected"]))),128))]),_:1})],64)}const pe=w(ee,[["render",se]]);export{pe as default};
