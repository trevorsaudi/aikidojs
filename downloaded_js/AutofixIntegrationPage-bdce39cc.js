import{_ as I,z,A as T,r as l,q as a,m as p,n as u,o as r,w as t,s as o,k as c,u as w,p as g,f as E,H as U,g as R,B as L,X as V,d as G,aj as M,aF as W,a as d,aG as N,ak as k,aE as A,aH as O,Q as D,aI as H,F as C}from"./index-13ff96f4.js";import{P as F}from"./PageHeader-46c38a32.js";import{I as X}from"./IntegrationSection-5494c480.js";import{g as $,u as q,s as j,d as Y,a as Z}from"./autofix-68b65188.js";const J={components:{InputSwitch:z},data(){return{autoCreationEnabled:!1,autofixSettings:{}}},async mounted(){await this.loadAutofixSettings()},methods:{async loadAutofixSettings(){this.autofixSettings=await $(),this.autoCreationEnabled=this.autofixSettings.is_enabled},async handleToggleActive(e){if(e&&!T.isPayingAndNoProTrial())return this.$modal.show("UpgradeAccountModal",{msg:"Upgrade now to start using this feature."});await q({enabled:e,upgrade_type:"upgrade_all_packages",repo_ids:[]}),await this.loadAutofixSettings();const n=e?"enabled":"disabled";this.$toast.success({title:"Setting updated",description:`You have successfully ${n} automatic pull request creation.`}),e&&this.manageAutofixAutocreation()},async manageAutofixAutocreation(){(await this.$modal.show("ManageAutofixAutocreationModal")).type==="saved"&&await this.loadAutofixSettings()},async startAutofixAutocreation(){await j(),this.$toast.success({title:"Autofix job started",description:"Aikido has started the autofix job for the selected repositories."})}}},K={class:"bg-white rounded-8px border-1 border-gray-table flex flex-column gap-16px p-32px w-calc-50p-12px wide-tablet_max-w-full"},Q={class:"flex justify-between"},ee={key:0},te={key:1},ae={key:2,class:"flex align-center gap-12px"};function ie(e,n,f,S,i,s){const _=l("BaseParagraph"),x=l("InputSwitch"),b=l("BaseButton");return a(),p("div",K,[u("div",Q,[r(_,{size:"medium"},{default:t(()=>[o("Automatic Creation of Pull Requests")]),_:1}),r(x,{labelRight:i.autoCreationEnabled?"On":"Off",modelValue:i.autoCreationEnabled,"onUpdate:modelValue":s.handleToggleActive},null,8,["labelRight","modelValue","onUpdate:modelValue"])]),i.autoCreationEnabled?(a(),c(_,{key:0,size:"small",color:"subdued"},{default:t(()=>[i.autofixSettings.repo_ids.length==0?(a(),p("span",ee,"No repos selected yet. Please select to continue with automatic autofix.")):(a(),p("span",te,[o(" Aikido will automatically open PRs for "),u("strong",null,w(e.$t("AUTOFIX_"+i.autofixSettings.upgrade_type)),1),o(" version upgrades in "),u("strong",null,w(e.$t("X_REPOS",i.autofixSettings.repo_ids.length)),1),o(". This happens maximum once a day. ")]))]),_:1})):(a(),c(_,{key:1,size:"small",color:"subdued"},{default:t(()=>[o(" Aikido can automatically create pull requests with bulk upgrades on a daily basis. ")]),_:1})),i.autoCreationEnabled?(a(),p("div",ae,[r(b,{onClicked:s.manageAutofixAutocreation,variation:"plain",size:"small"},{default:t(()=>[o(" Manage Autofix Autocreation ")]),_:1},8,["onClicked"]),i.autofixSettings.repo_ids.length>0?(a(),c(b,{key:0,onClicked:s.startAutofixAutocreation,variation:"",size:"small"},{default:t(()=>[o(" Test Autocreation ")]),_:1},8,["onClicked"])):g("",!0)])):g("",!0)])}const oe=I(J,[["render",ie]]),ne={components:{BaseButton:E,BaseHeading:U,BaseLink:R,BaseParagraph:L,IntegrationSection:X,PageHeader:F,XPreloader:V,BasePill:G,AutomaticCreationOfPrSection:oe},data(){return{loaded:!1,organization:void 0,applicationConfigurationUrl:void 0,hasPat:!1}},async mounted(){this.organization=await M(),await this.loadWriteableConfigurationUrl(),this.loaded=!0},computed:{breadcrumbs(){return[{label:"Autofix",href:W()},{label:"Autofix Settings"}]},integrationName(){return d()==="staging"?"aikido-staging-writecapable":d()==="production"?"aikido-autofix":"aikido-localdev-writecapable"},isAutofixActive(){return!!this.applicationConfigurationUrl},autofixStatus(){return this.isAutofixActive?"Active":"Inactive"},autofixStatusVariation(){return this.isAutofixActive?"green":"gray-fill"},showRevokeInstallationButton(){return this.applicationConfigurationUrl&&["bitbucket","gitlab","azure_devops"].includes(this.$group.scm_type)},supportsAutomaticCreation(){return!!this.applicationConfigurationUrl},autofixWriteAccessTitle(){return this.isAutofixActive?"Write Access Enabled":this.$t("SETTINGS.AUTO_FIX.OVERVIEW.WRITE_ACCESS.TITLE")}},methods:{async handleManageIntegration(){var e,n;if((this.$user.auth_type==="github"||((e=this.$group)==null?void 0:e.scm_type)=="github")&&await N()!=="installed"){Toast.error({title:"Invalid installation status",description:"Your installation of this integration is no longer active, please authorize it again."}),this.applicationConfigurationUrl=void 0;return}switch((n=this.$group)==null?void 0:n.scm_type){case"gitlab_server":return await this.handleInstallGitLabServerIntegration()}window.open(this.applicationConfigurationUrl,"_blank")},async handleInstallIntegration(){var e;switch((e=this.$group)==null?void 0:e.scm_type){case"github":return this.handleInstallGitHubIntegration();case"gitlab":return this.handleInstallGitLabIntegration();case"bitbucket":return this.handleInstallBitBucketIntegration();case"gitlab_server":return await this.handleInstallGitLabServerIntegration();case"azure_devops":return this.handleInstallAzureDevopsIntegration()}},handleInstallGitHubIntegration(){const e={target_id:this.organization.scm_org_id};window.location=`https://github.com/apps/${this.integrationName}/installations/new/permissions?${k(e)}`},handleInstallGitLabIntegration(){let e="bd8b70b9f68ac710ff16086f3b1f5beae9dd0c64c4c036ebe1e0c518ee332c3e",n="http://app.local.aikido.io/callback/gitlab-writeable";d()==="staging"?(e="bd8b70b9f68ac710ff16086f3b1f5beae9dd0c64c4c036ebe1e0c518ee332c3e",n="https://app.test.aikido.dev/callback/gitlab-writeable"):d()==="production"&&(e="c8b9648f7417344324c7a81e7aa7c94c1ca559fc6840e419754a3d013f6a18af",n="https://app.aikido.dev/callback/gitlab-writeable");const f={state:A("gitlab_writeable_auth"),response_type:"code",client_id:e,redirect_uri:n};window.location=`https://gitlab.com/oauth/authorize?${k(f)}`},handleInstallBitBucketIntegration(){let e="WKUZaq6kT6rLk6HV35";d()==="staging"?e="4efBxHLHj9ZSSvCtky":d()==="production"&&(e="3bfYzxNBNNeyG4xGDb");const n={state:A("bitbucket_writeable_auth"),response_type:"code",client_id:e};window.location=`https://bitbucket.org/site/oauth2/authorize?${k(n)}`},handleInstallAzureDevopsIntegration(){let e="72FDA1FD-1177-4ED7-B72E-A51654A5B637",n="https://a471e21a3742.ngrok.app/callback/azure_devops/writeable";d()==="staging"?(e="2B7603E5-E6EE-483B-A354-B6F36740855E",n="https://app.test.aikido.dev/callback/azure_devops/writeable"):d()==="production"&&(e="B88FE2A6-AB11-44AB-AEE9-57D7875E14B4",n="https://app.aikido.dev/callback/azure_devops/writeable");const f={state:A("azure_devops_writeable_auth"),client_id:e,redirect_uri:n,response_type:"Assertion",scope:"vso.code_write vso.graph"};window.location=`https://app.vssps.visualstudio.com/oauth2/authorize?${k(f)}`},async loadWriteableConfigurationUrl(){try{const e=await O({disable_toasts:!0});this.applicationConfigurationUrl=e.configuration_url,this.hasPat=e.has_pat??!1}catch{this.applicationConfigurationUrl=void 0}},async handleInstallGitLabServerIntegration(){(await this.$modal.show("UpdatePersonalAccessTokenModal")).type!="closed"&&await this.loadWriteableConfigurationUrl()},handleManagePrivatePackageRegistry(){return this.$modal.show("UpdatePrivatePackageRegistryModal",{})},async handleRevokeClicked(){await D({headerText:"Remove token",description:"Do you want to remove the write access token?",buttonSubmitText:"Yes, remove"})&&(this.hasPat&&this.$group.scm_type==="azure_devops"?await Y():this.hasPat&&this.$group.scm_type==="gitlab"?await Z():await H(),this.$toast.success("Token successfully removed"),this.loadWriteableConfigurationUrl())}}},se={key:0,class:"page-content flex flex-column gap-24px"},re={class:"bg-white rounded-8px border-1 border-gray-table flex flex-column gap-16px p-32px w-calc-50p-12px wide-tablet_max-w-full"},le={class:"flex align-center gap-12px"},ce=u("i",{class:"icon icon-12px icon-openLink"},null,-1),ue=u("i",{class:"icon icon-12px icon-openLink"},null,-1),de=u("i",{class:"icon icon-12px icon-openLink"},null,-1),pe=u("i",{class:"icon icon-12px icon-openLink"},null,-1),ge={key:0,class:"bg-white rounded-8px border-1 border-gray-table flex flex-column gap-16px p-32px w-calc-50p-12px wide-tablet_max-w-full"},fe={class:"flex align-center gap-12px"};function he(e,n,f,S,i,s){const _=l("XPreloader"),x=l("BasePill"),b=l("PageHeader"),m=l("BaseParagraph"),v=l("BaseLink"),P=l("i18n-t"),h=l("BaseButton"),B=l("AutomaticCreationOfPrSection"),y=l("IntegrationSection");return i.loaded?(a(),p(C,{key:1},[r(b,{title:"Aikido autofix",breadcrumbs:s.breadcrumbs},{subTitle:t(()=>[r(x,{title:s.autofixStatus,variation:s.autofixStatusVariation},null,8,["title","variation"])]),_:1},8,["breadcrumbs"]),i.loaded?(a(),p("div",se,[r(y,{class:"flex gap-24px wide-tablet_flex-column",title:"General"},{default:t(()=>[u("div",re,[r(m,{size:"medium"},{default:t(()=>[o(w(s.autofixWriteAccessTitle),1)]),_:1}),r(m,{size:"small",color:"subdued"},{default:t(()=>[s.isAutofixActive?(a(),p(C,{key:0},[o("Aikido has write access to your repos. You can always change these settings by managing your permissions.")],64)):(a(),c(P,{key:1,keypath:"SETTINGS.AUTO_FIX.OVERVIEW.WRITE_ACCESS.DESCRIPTION"},{trust:t(()=>[r(v,{href:"https://www.aikido.dev/trust-center",inline:"",target:"_blank"},{default:t(()=>[o(" trust center")]),_:1})]),docs:t(()=>[r(v,{href:"https://help.aikido.dev/en/articles/7002915-aikido-autofix-for-3rd-party-dependencies",inline:"",target:"_blank"},{default:t(()=>[o(" docs")]),_:1})]),_:1}))]),_:1}),u("div",le,[i.applicationConfigurationUrl&&!i.hasPat?(a(),c(h,{key:0,onClick:s.handleManageIntegration,size:"small"},{default:t(()=>[o(" Manage permissions "),ce]),_:1},8,["onClick"])):i.applicationConfigurationUrl&&i.hasPat&&e.$group.scm_type==="azure_devops"?(a(),c(h,{key:1,as:"link",to:"/settings/integrations/azure-devops/autofix/personal-access-token",size:"small"},{default:t(()=>[o(" Manage Personal Access Token "),ue]),_:1})):i.applicationConfigurationUrl&&i.hasPat&&e.$group.scm_type==="gitlab"?(a(),c(h,{key:2,as:"link",to:"/settings/integrations/gitlab/autofix/personal-access-token",size:"small"},{default:t(()=>[o(" Manage Personal Access Token "),de]),_:1})):(a(),c(h,{key:3,onClicked:s.handleInstallIntegration,size:"small"},{default:t(()=>[o(" Authorize "),pe]),_:1},8,["onClicked"])),s.showRevokeInstallationButton?(a(),c(h,{key:4,onClicked:s.handleRevokeClicked,variation:"plain",size:"small"},{default:t(()=>[o(" Remove Token ")]),_:1},8,["onClicked"])):g("",!0)])]),s.supportsAutomaticCreation?(a(),c(B,{key:0})):g("",!0)]),_:1}),i.applicationConfigurationUrl?(a(),c(y,{key:0,class:"flex gap-24px wide-tablet_flex-column",title:"Advanced"},{default:t(()=>[i.applicationConfigurationUrl?(a(),p("div",ge,[r(m,{size:"medium"},{default:t(()=>[o(" Private Registry Connection ")]),_:1}),r(m,{size:"small",color:"subdued"},{default:t(()=>[o(" Are you hosting private internal packages? Configure access to these private packages for Aikido’s Autofix service so that the service can update repositories which require those private packages. ")]),_:1}),u("div",fe,[r(h,{onClicked:s.handleManagePrivatePackageRegistry,variation:"plain",size:"small"},{default:t(()=>[o(" Manage private registry connection ")]),_:1},8,["onClicked"])])])):g("",!0)]),_:1})):g("",!0)])):g("",!0)],64)):(a(),c(_,{key:0,class:"supercenter",theme:"transparent"}))}const xe=I(ne,[["render",he]]);export{xe as default};
