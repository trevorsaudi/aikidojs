import{_ as x,H as w,g as P,V,f as N,B as R,N as B,bj as A,r as i,m,o as n,n as a,w as u,k as y,p as c,F as U,q as o,s as l,u as S}from"./index-13ff96f4.js";import{P as v}from"./PageHeader-46c38a32.js";import{U as C}from"./UploadJsonFileInput-be53818c.js";import{g as K}from"./containerRegistryHelpdocs-76d76ec3.js";const I={components:{PageHeader:v,BaseHeading:w,BaseLink:P,InputText:V,BaseButton:N,BaseParagraph:R,BaseSelect:B,UploadJsonFileInput:C},data(){return{username:"",accesstoken:"",registryName:"",registryApiurl:"",robotAccountToken:"",isSaving:!1,registryType:this.$route.params.registryType,scaleWayOptionRegions:[{title:"France - Paris",id:"fr-par"},{title:"Netherlands - Amsterdam",id:"nl-ams"},{title:"Poland - Warsaw",id:"pl-waw"}]}},computed:{registryApiurlPlaceholder(){switch(this.registryType){case"gitlab-self":return"https://gitlab.example.com";case"harbor":return"myharbor.example.com";case"artifactory":return"https://your-org.jfrog.io";case"sonatype-nexus":return"https://my-custom-nexus:1234";default:return"my-instance.example.com"}},registryApiurlVisible(){return["gitlab-self","harbor","artifactory","sonatype-nexus"].includes(this.registryType)},showUsername(){return!0},showAccessToken(){return!["gcp-container-registry"].includes(this.registryType)},showRegistryName(){return!["digitalocean","scaleway","harbor","artifactory","gcp-container-registry"].includes(this.registryType)},showScaleWayRegistryRegion(){return["scaleway"].includes(this.registryType)},accessTokenTitle(){switch(this.registryType){case"cloudsmith":return"API Key";case"harbor":return"Password";case"sonatype-nexus":return"User token pass code";default:return"Access token"}},accesstokenPlaceholder(){return"******"},registrynameTitle(){switch(this.registryType){case"docker-hub":case"github":return"Organization name";case"gitlab":case"gitlab-self":return"Group ID";case"cloudsmith":return"Organization Namespace";case"quay":return"Organization name";case"acr":return"Login Server";default:return"Registry name"}},usernameTitle(){return["digitalocean","scaleway"].includes(this.registryType)?"Nickname":this.registryType==="quay"?"Robot account name":this.registryType==="gcp-container-registry"?"GCP Project ID":this.registryType==="sonatype-nexus"?"User token name code":"Username"},usernamePlaceholder(){return["digitalocean","scaleway"].includes(this.registryType)?"My Registry":this.registryType==="gcp-container-registry"?"my-gcp-project":"richard_hendriks"},registrynamePlaceholder(){switch(this.registryType){case"docker-hub":case"cloudsmith":case"github":return"organizationname";case"gitlab":case"gitlab-self":return"12345678";case"sonatype-nexus":return"docker-hosted";default:return"name.example.com"}},registryNameInputType(){switch(this.registryType){case"gitlab":case"gitlab-self":return"number";default:return"text"}},registryTypeName(){return this.$t(`REGISTRY_TYPE_${this.registryType}`)},breadcrumbs(){return[{label:"Connect registry"},{label:this.registryTypeName}]},hasRequiredRegistryNameInput(){return["acr","gitlab","gitlab-self","scaleway","cloudsmith","github","sonatype-nexus"].includes(this.registryType)},isFormValid(){return!(this.username.trim()===""||this.accesstoken.trim()===""||this.hasRequiredRegistryNameInput&&this.registryName.trim()==="")},isSubmitButtonDisabled(){return!this.isFormValid},docsUrl(){return K(this.registryType)}},methods:{handleCancel(){this.$router.back()},handleKeyDown(){this.isFormValid&&this.handleSubmit()},async handleSubmit(){this.isSaving=!0;try{await A({kind:this.registryType,username:this.username,accesstoken:this.accesstoken,registry_name:this.registryName,api_url:this.registryApiurl,robot_account_token:this.robotAccountToken}),Toast.success({title:"Container registry connected",description:"We will scan this registry and show the repositories we found on the settings page"}),this.$router.push("/settings/container-image-registry")}finally{this.isSaving=!1}}}},q={class:"page-content bg-white"},E={class:"flex flex-column gap-32px"},D={class:"flex flex-column gap-8px"},F={class:"flex flex-column gap-32px"},H={class:"flex flex-column gap-24px"},j={key:4,class:"flex flex-column gap-12px"},L={key:5,class:"field"},M=["for"],O=a("span",null,"Region : ",-1),W=a("span",{class:"text-surface-red-100"},"*",-1),z=[O,W],J=a("hr",{class:"divider my-24px"},null,-1),G={class:"flex flex-end gap-16px mt-12px justify-end"};function Y(h,t,Q,X,r,e){const f=i("PageHeader"),b=i("BaseHeading"),k=i("BaseLink"),g=i("BaseParagraph"),d=i("InputText"),T=i("UploadJsonFileInput"),_=i("BaseSelect"),p=i("BaseButton");return o(),m(U,null,[n(f,{breadcrumbs:e.breadcrumbs,title:"Container image registry connection"},null,8,["breadcrumbs"]),a("div",q,[a("div",E,[a("div",D,[n(b,{as:"h3"},{default:u(()=>[l("Connect "+S(e.registryTypeName)+" container image registry",1)]),_:1}),n(g,{size:"medium",loose:""},{default:u(()=>[l(" Read our documentation on "),n(k,{href:e.docsUrl,target:"_blank"},{default:u(()=>[l("How to connect your container image registry")]),_:1},8,["href"]),l(". ")]),_:1})]),a("div",F,[a("div",H,[e.showUsername?(o(),y(d,{key:0,title:e.usernameTitle,placeholder:e.usernamePlaceholder,modelValue:r.username,"onUpdate:modelValue":t[0]||(t[0]=s=>r.username=s),modelModifiers:{trim:!0},name:"username",onEnterKeyPress:e.handleKeyDown,required:!0},null,8,["title","placeholder","modelValue","onEnterKeyPress"])):c("",!0),r.registryType==="quay"?(o(),y(d,{key:1,title:"Robot account token",placeholder:"*********",modelValue:r.robotAccountToken,"onUpdate:modelValue":t[1]||(t[1]=s=>r.robotAccountToken=s),modelModifiers:{trim:!0},name:"robotAccountToken",onEnterKeyPress:e.handleKeyDown,required:!0},null,8,["modelValue","onEnterKeyPress"])):c("",!0),e.showAccessToken?(o(),y(d,{key:2,title:e.accessTokenTitle,placeholder:e.accesstokenPlaceholder,modelValue:r.accesstoken,"onUpdate:modelValue":t[2]||(t[2]=s=>r.accesstoken=s),modelModifiers:{trim:!0},name:"accesstoken",onEnterKeyPress:e.handleKeyDown,required:!0},null,8,["title","placeholder","modelValue","onEnterKeyPress"])):c("",!0),e.showRegistryName?(o(),y(d,{key:3,title:e.registrynameTitle,placeholder:e.registrynamePlaceholder,modelValue:r.registryName,"onUpdate:modelValue":t[3]||(t[3]=s=>r.registryName=s),modelModifiers:{trim:!0},name:"registryName",onEnterKeyPress:e.handleKeyDown,required:e.hasRequiredRegistryNameInput,type:e.registryNameInputType},null,8,["title","placeholder","modelValue","onEnterKeyPress","required","type"])):c("",!0),r.registryType==="gcp-container-registry"?(o(),m("div",j,[n(g,null,{default:u(()=>[l("Finally, just upload the JSON key file")]),_:1}),n(T,{onUpload:t[4]||(t[4]=s=>this.accesstoken=s)})])):e.showScaleWayRegistryRegion?(o(),m("div",L,[a("label",{for:h.region},z,8,M),n(_,{modelValue:r.registryName,"onUpdate:modelValue":t[5]||(t[5]=s=>r.registryName=s),id:"region",name:"region",options:r.scaleWayOptionRegions,title:"Region"},null,8,["modelValue","options"])])):c("",!0),e.registryApiurlVisible?(o(),y(d,{key:6,title:"Instance Url",placeholder:e.registryApiurlPlaceholder,modelValue:r.registryApiurl,"onUpdate:modelValue":t[6]||(t[6]=s=>r.registryApiurl=s),modelModifiers:{trim:!0},name:"registryApiurl",onEnterKeyPress:e.handleKeyDown,required:!0,type:"url"},null,8,["placeholder","modelValue","onEnterKeyPress"])):c("",!0)])])]),a("div",null,[J,a("div",G,[n(p,{variation:"plain",onClicked:e.handleCancel},{default:u(()=>[l("Cancel")]),_:1},8,["onClicked"]),n(p,{disabled:e.isSubmitButtonDisabled,onClicked:e.handleSubmit,isLoading:r.isSaving},{default:u(()=>[l("Save")]),_:1},8,["disabled","onClicked","isLoading"])])])])],64)}const te=x(I,[["render",Y]]);export{te as default};
