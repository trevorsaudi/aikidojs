import{_ as S,K as R,r as n,q as a,m as r,aa as g,n as y,u,p as m,o as c,au as I,N as A,A as _,k,w as x}from"./index-13ff96f4.js";import{g as C}from"./repoName-872812ed.js";import{I as v}from"./InputMultiSelect-21584437.js";import{g as M,u as T}from"./autofix-68b65188.js";import"./ActionMenu-3e4470bf.js";import"./InputCheckbox-81cb3ca6.js";const U={components:{InputMultiSelect:v},emits:["update:selectedRepoIds"],props:{selectedRepoIds:{type:Array,required:!0},label:String,sublabel:String,enableCheckAll:{type:Boolean,default:!0},maxSelectableItems:{type:Number,default:-1}},data(){return{scmRepositories:[],isLoadingSCMRepositories:!0,isAllRepositoriesSelected:!1}},mounted(){this.fetchScmRepos()},computed:{options(){return this.scmRepositories}},methods:{async fetchScmRepos(){this.isLoadingSCMRepositories=!0;let t=await R(null,!0,!0);t=t.filter(e=>e.active),this.scmRepositories=t.map(e=>({label:C(e),value:e.id})),this.isLoadingSCMRepositories=!1},async onUpdateSelectedRepositories(t){this.$emit("update:selectedRepoIds",t)},checkAllRepositories(t){if(t){const e=this.scmRepositories.map(l=>l.value);this.$emit("update:selectedRepoIds",e)}else this.$emit("update:selectedRepoIds",[])}}},B={class:"select-input"},P={key:0,class:"select-input__label"},w={key:0,class:"select-input__label__sub-label"};function N(t,e,l,h,s,o){const d=n("InputMultiSelect");return a(),r("div",B,[l.label||t.$slots.label?(a(),r("label",P,[g(t.$slots,"label"),y("span",null,u(l.label),1),l.sublabel?(a(),r("span",w,u(l.sublabel),1)):m("",!0)])):m("",!0),c(d,{ref:"repoMultiSelect",selectedItems:l.selectedRepoIds,"onUpdate:selectedItems":o.onUpdateSelectedRepositories,isAllChecked:s.isAllRepositoriesSelected,"onUpdate:isAllChecked":[e[0]||(e[0]=p=>s.isAllRepositoriesSelected=p),o.checkAllRepositories],options:s.scmRepositories,selectAllText:"All Repositories",width:"unset",enableCheckAll:l.enableCheckAll,maxSelectableItems:l.maxSelectableItems,enableSearch:!0,useFilterStyling:!1,shouldTruncateOptions:!0,truncateOptionsWidth:225,showTooltipForOptions:!0,isLoading:s.isLoadingSCMRepositories,maxHeight:200},null,8,["selectedItems","onUpdate:selectedItems","isAllChecked","onUpdate:isAllChecked","options","enableCheckAll","maxSelectableItems","isLoading"])])}const L=S(U,[["render",N]]),O={emits:["cancel","saved"],components:{BaseConfirmModal:I,BaseSelect:A,SelectRepoMultiSearchable:L},data(){return{selectedUpgradeType:"upgrade_all_packages",upgradeTypes:[{id:"upgrade_all_packages",title:this.$t("AUTOFIX_upgrade_all_packages")},{id:"minor_and_patch_versions_only",title:this.$t("AUTOFIX_minor_and_patch_versions_only")},{id:"critical_issues_only",title:this.$t("AUTOFIX_critical_issues_only")}],selectedRepoIds:[],loaded:!1}},async mounted(){const t=await M();this.selectedUpgradeType=t.upgrade_type,this.selectedRepoIds=t.repo_ids,this.loaded=!0},computed:{maxSelectableItems(){return _.isPayingProAndNotTrial()||this.$featureflags.enable_unlimited_autofix_autocreation?-1:10},canSelectAll(){return!!(_.isPayingProAndNotTrial()||this.$featureflags.enable_unlimited_autofix_autocreation)}},methods:{async handleSave(){await T({enabled:1,upgrade_type:this.selectedUpgradeType,repo_ids:this.selectedRepoIds}),this.$emit("saved")}}},V={key:0,class:"h-160px relative"},F={key:1,class:"flex flex-column gap-32px mb-8px"};function X(t,e,l,h,s,o){const d=n("XPreloader"),p=n("BaseSelect"),f=n("SelectRepoMultiSearchable"),b=n("BaseConfirmModal");return a(),k(b,{title:"Manage Autofix PR Creation",description:"Select type and repos that Aikido should automatically create PRs for. PRs are created and re-evaluated every day.",width:600,onClose:e[2]||(e[2]=i=>t.$emit("cancel")),onSecondaryButtonClicked:e[3]||(e[3]=i=>t.$emit("cancel")),onSubmit:o.handleSave,buttonSubmitText:"Save Settings"},{default:x(()=>[s.loaded?(a(),r("div",F,[c(p,{label:"Select types for automatic PR creation",options:s.upgradeTypes,modelValue:s.selectedUpgradeType,"onUpdate:modelValue":e[0]||(e[0]=i=>s.selectedUpgradeType=i)},null,8,["options","modelValue"]),c(f,{label:"Select repositories for automatic PR creation",selectedRepoIds:s.selectedRepoIds,"onUpdate:selectedRepoIds":e[1]||(e[1]=i=>s.selectedRepoIds=i),enableCheckAll:o.canSelectAll,maxSelectableItems:o.maxSelectableItems},null,8,["selectedRepoIds","enableCheckAll","maxSelectableItems"])])):(a(),r("div",V,[c(d,{class:"absolute-centered",size:"medium"})]))]),_:1},8,["onSubmit"])}const K=S(O,[["render",X]]);export{K as default};
