import{_ as m,M as f,B as _,f as R,H as y,N as g,dM as C,fI as B,K as k,r as o,q as v,k as w,w as e,o as s,s as a}from"./index-13ff96f4.js";import{g as S}from"./repoName-872812ed.js";import{I as b}from"./InputSearchDropdown-02988f6b.js";import"./ActionMenu-3e4470bf.js";const I={props:{cloudRepository:Object},emits:[],components:{BaseModal:f,BaseParagraph:_,BaseButton:R,BaseHeading:y,BaseSelect:g,InputSearchDropdown:b},data(){return{selectedRepository:null,repositories:[],isLoading:!0,isSaving:!1}},async mounted(){this.handleGetRepositories()},computed:{codeRepositoryOptions(){return this.repositories.map(i=>({value:i.id,label:S(i)}))}},methods:{handleCancel(){this.$emit("close")},async handleConfirm(){if(this.validate())try{this.isSaving=!0,this.cloudRepository.cloud_id>0?await C(this.cloudRepository.cloud_id,this.cloudRepository.id,this.selectedRepository,{no_disable_buttons:!0}):await B(this.cloudRepository.id,this.selectedRepository,{no_disable_buttons:!0}),Toast.success({title:"Repositories linked successfully",description:"We succesfully linked the image to the code repo. We'll immediately check for any related issues."}),this.$emit("saved")}finally{this.isSaving=!1}},async handleGetRepositories(){this.repositories=await k(null,!1,!0,{skip:null,limit:null},null,null,null,{},!0),this.isLoading=!1},validate(){return this.selectedRepository?!0:(this.$toast.error("Please select a code repo"),!1)}}};function M(i,n,x,L,l,t){const d=o("BaseParagraph"),c=o("BaseHeading"),p=o("InputSearchDropdown"),r=o("BaseButton"),u=o("BaseModal");return v(),w(u,{onClose:t.handleCancel,allowBackgroundClose:!1},{header:e(()=>[s(d,{color:"gray"},{default:e(()=>[a("Link to code repo")]),_:1})]),content:e(()=>[s(c,{as:"h3"},{default:e(()=>[a("Link cloud image to code repo")]),_:1}),s(p,{label:"Code repo",options:t.codeRepositoryOptions,modelValue:l.selectedRepository,"onUpdate:modelValue":n[0]||(n[0]=h=>l.selectedRepository=h),theme:"light"},null,8,["options","modelValue"])]),footer:e(()=>[s(r,{onClicked:t.handleCancel,variation:"plain",class:"ml-auto"},{default:e(()=>[a("Cancel")]),_:1},8,["onClicked"]),s(r,{onClicked:t.handleConfirm,"is-loading":l.isSaving},{default:e(()=>[a("Confirm")]),_:1},8,["onClicked","is-loading"])]),_:1},8,["onClose"])}const P=m(I,[["render",M]]);export{P as default};
