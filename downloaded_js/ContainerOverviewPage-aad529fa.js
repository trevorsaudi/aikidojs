import{_ as S,e as Q,Q as X,ba as J,an as b,A as F,bh as K,bc as N,r as o,q as s,k as m,w as r,o as t,ai as D,B as E,d as V,b9 as B,bA as L,m as u,ah as Z,n as f,a2 as ee,z as te,i as ie,a8 as G,bb as ne,S as I,s as h,p as C,u as k,ag as M,a1 as re,t as A,F as R,bt as oe,N as se,I as ae,f as le}from"./index-13ff96f4.js";import{u as ce}from"./useTableSorting-22e45d25.js";import{D as H,a as z}from"./DataTable-e31a825a.js";import{D as O,a as $}from"./DataTableCell-51c0104f.js";import{A as P}from"./ActionMenu-3e4470bf.js";import{R as de}from"./RepostioryDomainCell-e75ba707.js";import{L as ue,A as pe}from"./AikidoScannerForRegistriesCallout-2e5e8ee4.js";import{D as he}from"./DataTableSeverityIndicator-48ffb8dc.js";import{g as ge}from"./dateFns-a344cb79.js";import{D as me}from"./DataTableLastScanColumn-e155b78a.js";import{C as ye}from"./ContainersIllustration-8126771c.js";import{O as j}from"./OverviewEmptyState-c8440b9c.js";import{G as _e}from"./GenericIllustration-4aca88e5.js";import{F as q}from"./FilterButton-bb5393a7.js";import{d as fe}from"./export-427c6d83.js";import"./tableSortingCache-ca369cac.js";import"./BaseStatusLabel-0ccd2806.js";import"./BaseCallout-aea0aba4.js";import"./index-b87db690.js";const be={props:{repository:Object},components:{DataTableCell:O,BaseIconButton:Q,ActionMenu:P},computed:{isSbomImage(){return!(this.isPublic||this.repository.cloud_type||this.repository.registry_source)},isPublic(){return this.repository.is_public===1},isActive(){return this.repository.active===1},isDeleteHidden(){return!this.isPublic&&!this.isSbomImage},isDeactivateHidden(){return this.isDeleteHidden?!this.isActive:!0},actionMenuItems(){const e=[{items:[{hidden:!this.isActive,label:"Start scan",onClick:this.handleStartScan,icon:"icon-arrow-right",iconColor:"green"},{hidden:this.isPublic,label:"Edit tag filter",onClick:this.handleEditTagFilter,icon:"icon-edit"},{label:this.$t("REPOSITORY_ACTION_MENU.CONFIGURE_ARCHITECTURE"),onClick:this.handleConfigureArchitecture,icon:"icon-settings"},{hidden:this.isDeactivateHidden,label:"Deactivate",onClick:this.handleDeactivateContainer,destructive:!0},{hidden:this.isDeleteHidden,label:"Delete",onClick:this.handleDeleteRepository,destructive:!0}]}];return e[0].items.filter(n=>!n.hidden).length==0?[{title:"No actions available",items:[]}]:e}},methods:{async handleDeleteRepository(){await X({headerText:"Delete container image",description:"Do you want to remove this container image? This will also remove all associated issues.",buttonSubmitText:"Yes, delete"})&&(await J(this.repository.id),this.$toast.success({title:"Container image successfully deleted"}),b.emit("cloudRepository.updated"))},async handleEditTagFilter(){(await this.$modal.show("EditCloudRepoTagFilterModal",{cloudRepoId:this.repository.id,currentTag:this.repository.tag})).type=="saved"&&b.emit("cloudRepository.updated")},async handleConfigureArchitecture(){(await this.$modal.show("RepositoryArchitectureConfigurationModal",{image:this.repository})).type=="saved"&&b.emit("cloudRepository.updated")},async handleStartScan(){if(F.hasExpiredFullTrial()&&this.repository.last_scanned_at>0)return this.$modal.show("UpgradeAccountModal",{title:"Upgrade to scan whenever you want",msg:"In our free plan, scans are performed automatically every night. Step up to instant scanning when it suits you, across all your repositories, clouds and containers."});await K({cloud_repo_id:this.repository.id},{no_disable_buttons:!0}),this.$toast.success({title:this.$t("SUCCESS"),description:"Scan successfully started"})},async handleDeactivateContainer(){const{was_already_deactivated:e}=await N(this.repository.id);e||(this.$toast.success("Container image successfully deactivated"),b.emit("cloudRepository.deactivated"))}}};function Ce(e,n,a,d,p,i){const l=o("BaseIconButton"),c=o("ActionMenu"),y=o("DataTableCell");return s(),m(y,{spacing:"compact",alignment:"center",class:"data-table__cell--action",onClick:n[0]||(n[0]=D(()=>e.$refs.trigger.click(),["prevent","stop"]))},{default:r(()=>[t(c,{sections:i.actionMenuItems,placement:"bottom-end"},{trigger:r(v=>[t(l,{icon:"icon-actions",class:"data-table__row__action",onClick:D(v.toggle,["prevent"]),ref:"trigger"},null,8,["onClick"])]),_:1},8,["sections"])]),_:1})}const ve=S(be,[["render",Ce]]),we={props:{repository:Object},components:{DataTableCell:O,BaseParagraph:E,BasePill:V,DataTableLastScanColumn:me},data(){return{scanningProgress:0}},created(){b.on(B,this.handleScanEvent),b.on(L,this.handleCloudScanEvent)},beforeDestroy(){b.off(B,this.handleScanEvent),b.on(L,this.handleCloudScanEvent)},computed:{isScanningInProgress(){return!!this.scanningProgress&&this.scanningProgress>0&&this.scanningProgress<100},isFreeAccount(){return F.hasExpiredFullTrial(!1)},shouldShowUpgradePlanButton(){if(!this.isFreeAccount||this.repository.last_scanned_at<1)return!1;const e=ge(23);return this.repository.last_scanned_at<e}},methods:{async handleScanEvent(e){const{type:n,progress:a,cloudRepoId:d}=e;if(d==this.repository.id)if(n==="progress_update"){if(this.scanningProgress>a)return;this.scanningProgress=a}else n==="completed"?(this.scanningProgress=100,b.emit("cloudRepository.updated",{containerId:this.repository.id}),await this.$nextTick(),this.scanningProgress=0):n==="failure"&&(this.scanningProgress=0,b.emit("cloudRepository.updated",{containerId:this.repository.id}),Toast.error({title:this.$t("ERROR"),description:"We were unable to complete the scan for this repository"}))},async handleCloudScanEvent(e){const{type:n,progress:a,cloudId:d}=e;if(d==this.repository.cloud_id)if(n==="progress_update"){if(this.scanningProgress>a)return;this.scanningProgress=a}else n==="completed"?(this.scanningProgress=100,b.emit("cloudRepository.updated"),await this.$nextTick(),this.scanningProgress=0):n==="failure"&&delete this.scanningProgress},showUpgradePlanModal(){this.$modal.show("UpgradeAccountModal",{title:"Upgrade to scan all containers",msg:"Our free plan includes nightly scans of up to two containers. Upgrade now to any paid plan to automatically scan all containers and manually trigger a scan anytime."})}}},Te=f("div",{class:"shimmer shimmer--blue"},null,-1),Se=[Te],ke={key:1,class:"w-full"};function xe(e,n,a,d,p,i){const l=o("BasePill"),c=o("DataTableLastScanColumn"),y=o("DataTableCell");return s(),m(y,null,{default:r(()=>[i.isScanningInProgress?(s(),u("div",{key:0,class:"loading-bar",style:Z({width:`${p.scanningProgress}%`})},Se,4)):i.shouldShowUpgradePlanButton?(s(),u("div",ke,[t(l,{class:"mx-auto",variation:"orange",title:"Upgrade",onClick:D(i.showUpgradePlanModal,["prevent"])},null,8,["onClick"])])):(s(),m(c,{key:2,"last-scanned-at":a.repository.last_scanned_at},null,8,["last-scanned-at"]))]),_:1})}const Re=S(we,[["render",xe]]),Fe={props:{repository:Object},components:{DataTable:H,DataTableHeader:z,DataTableRow:$,DataTableCell:O,BaseParagraph:E,ActionMenu:P,XTooltip:ee,InputSwitch:te,RepositoryDomainCell:de,LinkCloudRepo:ue,ContainerOverviewTableColumnActionMenu:ve,ContainerOverviewTableColumnScanningProgress:Re,DataTableSeverityIndicator:he,BasePill:V},computed:{isSbomImage(){return!(this.repository.is_public||this.repository.cloud_type||this.repository.registry_source)},formattedSensitivity(){return this.repository.internet_exposed?ie.global.te(`SENSITIVITY_${this.repository.sensitivity}`)?this.$t(`SENSITIVITY_${this.repository.sensitivity}`):this.repository.sensitivity:"N/A"},canDisableRepository(){return!this.isSbomImage},isSvgIcon(){const e=this.repository.cloud_type??this.repository.registry_source;return["digitalocean","scaleway","cloudsmith","harbor","quay","artifactory","sonatype-nexus"].includes(e)},sourceIcon(){if(this.repository.is_public==1)return"icon-docker";const e=this.repository.cloud_type??this.repository.registry_source;return e=="docker-hub"?"icon-docker":e=="github"?"icon-github":e=="gitlab"||e=="gitlab-self"?"icon-Gitlab":e=="aws"?"icon-location_aws":e=="gcp"?"icon-gcp":e=="azure"||e=="acr"?"icon-azure":e=="digitalocean"?"digitalocean-black":e=="scaleway"?"scaleway-black":e=="cloudsmith"?"cloudsmith-black":e=="artifactory"?"artifactory-black":e=="harbor"?"harbor-black":e=="quay"?"quay-black":e=="gcp-container-registry"||e=="gcp-artifact-registry"?"icon-gcp":e=="sonatype-nexus"?"sonatype-nexus":"icon-group"},registryName(){return this.repository.cloud_name&&this.repository.cloud_name!==""?this.repository.cloud_name:["docker-hub","cloudsmith","acr"].includes(this.repository.registry_source)?this.repository.registry_name||this.repository.registry_username:["aws"].includes(this.repository.registry_source)?this.repository.registry_username||this.repository.registry_name:this.repository.registry_url?new URL(this.repository.registry_url).hostname:this.isSbomImage?"Self-reported SBOM":this.repository.is_public&&!this.repository.cloud_id&&!this.repository.registry_id?"Public Docker image":this.repository.registry_name||this.repository.registry_username},scannedTag(){var d,p,i;const e=((d=this.repository)==null?void 0:d.latest_digest_scanned)??null;if(!e)return this.repository.tag;const n=((p=this.repository)==null?void 0:p.latest_digest)??null;if(e!=n)return this.repository.tag;const a=((i=this.repository)==null?void 0:i.latest_tag)??null;return a||this.repository.tag},shouldShowTag(){return!this.scannedTag||this.scannedTag=="latest"?!1:this.scannedTag.length<=15}},methods:{async toggleActive(e){if(e){if(this.repository.code_repository_name==null&&!await G({headerText:"Activate container",description:"Do you want to activate scanning for this container without linking a code repository first?",buttonSubmitText:"Yes, activate"})){this.toggleActiveButton(this.repository.id);return}await ne(this.repository.id),this.$toast.success("Container successfully activated")}else{const{was_already_deactivated:n}=await N(this.repository.id);n||this.$toast.success("Container successfully deactivated")}},toggleActiveButton(){this.$refs.activeSwitch.toggleManually()},handleEmitUpdateEvent(){b.emit("cloudRepository.updated")}}},De=["src"],Ie={class:"flex align-center gap-8px flex-wrap"},Ae={key:0,class:"text-carbon-60"};function Oe(e,n,a,d,p,i){const l=o("XTooltip"),c=o("DataTableCell"),y=o("BaseParagraph"),v=o("BasePill"),x=o("RepositoryDomainCell"),T=o("DataTableSeverityIndicator"),g=o("ContainerOverviewTableColumnScanningProgress"),_=o("ContainerOverviewTableColumnActionMenu"),w=o("DataTableRow");return s(),m(w,{clickable:"",href:`/container/${a.repository.id}`},{default:r(()=>[t(c,null,{default:r(()=>[i.isSvgIcon?(s(),u("img",{key:0,src:`/assets/icons/${i.sourceIcon}.svg`,height:"14",class:"rounded-2px"},null,8,De)):(s(),u("i",{key:1,class:I(["icon text-carbon-60",i.sourceIcon])},null,2)),i.sourceIcon=="icon-group"?(s(),m(l,{key:2},{default:r(()=>[h("Container scanned via self-reported SBOM")]),_:1})):C("",!0)]),_:1}),t(c,null,{default:r(()=>[f("div",Ie,[t(y,{class:"text-break-word"},{default:r(()=>[h(k(a.repository.name),1),i.shouldShowTag?(s(),u("span",Ae,":"+k(i.scannedTag),1)):C("",!0)]),_:1}),a.repository.region&&a.repository.region!=="global"?(s(),m(v,{key:0,title:a.repository.region,variation:"gray-fill"},null,8,["title"])):C("",!0)])]),_:1}),t(c,null,{default:r(()=>[t(y,{class:"truncate"},{default:r(()=>[h(k(i.registryName),1)]),_:1})]),_:1}),t(x,{image:a.repository,onRepositoryUpdated:i.handleEmitUpdateEvent},null,8,["image","onRepositoryUpdated"]),t(T,{priority:a.repository.max_issue_severity},null,8,["priority"]),t(c,null,{default:r(()=>[t(y,null,{default:r(()=>[h(k(a.repository.open_issue_count),1)]),_:1})]),_:1}),t(g,{repository:a.repository},null,8,["repository"]),t(_,{repository:a.repository},null,8,["repository"])]),_:1},8,["href"])}const Pe=S(Fe,[["render",Oe]]),Ee={components:{OverviewEmptyState:j,ContainersIllustration:ye},computed:{title(){return this.$teamContext?"No containers connected to this team":"No container connected yet."},description(){return this.$teamContext?`No containers added to this team (${M.teamName}). Reset team filter to see all containers.`:"Get your containers under a security microscope. Hook up your registries, and we'll scan for vulnerabilities to keep your deployment tight and right."},actionLabel(){return this.$teamContext?"Reset Team Filter":"Connect Registry"}},methods:{handleConnectRegistry(){if(!this.$groupUser.can_manage_containers){this.$modal.show("InfoModal",{headerText:"Connect Container Registry",title:"You do not have permission to manage container registries.",description:"Contact your admin to manage container registries",buttonSubmitText:"Got It!"});return}if(this.$teamContext){M.clearTeamId();return}this.$modal.show("ConnectContainerRegistryModal")}}};function $e(e,n,a,d,p,i){const l=o("ContainersIllustration"),c=o("OverviewEmptyState");return s(),m(c,{title:i.title,description:i.description,actionLabel:i.actionLabel,variation:"empty",onOnAction:i.handleConnectRegistry},{default:r(()=>[t(l)]),_:1},8,["title","description","actionLabel","onOnAction"])}const Be=S(Ee,[["render",$e]]),Le={components:{OverviewEmptyState:j,GenericIllustration:_e}};function Me(e,n,a,d,p,i){const l=o("GenericIllustration"),c=o("OverviewEmptyState");return s(),m(c,{title:"No containers found",description:"We were unable to find any containers matching your search criteria",variation:"empty"},{default:r(()=>[t(l)]),_:1})}const Ue=S(Le,[["render",Me]]),Ne={components:{DataTableRow:$,DataTableCell:O,LoadingSkeleton:re}};function Ve(e,n,a,d,p,i){const l=o("LoadingSkeleton"),c=o("DataTableCell"),y=o("DataTableRow");return s(),m(y,null,{default:r(()=>[t(c,null,{default:r(()=>[t(l,{height:"16px"})]),_:1}),t(c,null,{default:r(()=>[t(l,{height:"16px"})]),_:1}),t(c,null,{default:r(()=>[t(l,{height:"16px"})]),_:1}),t(c,null,{default:r(()=>[t(l,{height:"16px"})]),_:1}),t(c,null,{default:r(()=>[t(l,{height:"16px"})]),_:1}),t(c,null,{default:r(()=>[t(l,{height:"16px"})]),_:1}),t(c,null,{default:r(()=>[t(l,{height:"16px"})]),_:1}),t(c,null,{default:r(()=>[t(l,{height:"16px"})]),_:1})]),_:1})}const Ge=S(Ne,[["render",Ve]]),He={props:{searchTerm:String},emits:["sort"],components:{DataTable:H,DataTableHeader:z,ContainerOverviewTableRow:Pe,ContainerOverviewTableEmptyState:Be,DataTableRow:$,ContainerOverviewTableEmptyStateFiltering:Ue,ContainerOverviewTableRowLoading:Ge},inject:["repositories","registryTypeFilter","registryFilter","isLoading"],setup(){const{sorting:e,handleChangeSorting:n}=ce();return{sorting:e,handleChangeSorting:n}},watch:{sorting(e){this.$emit("sort",e)}},computed:{filteredRepositories(){return this.searchTerm?this.repositories.filter(e=>e.name.toLowerCase().includes(this.searchTerm.toLowerCase())):this.repositories},tableStyle(){return this.fullHeight<=0?"":{height:`${this.fullHeight}px`}},showEmptyState(){return this.filteredRepositories.length===0&&this.isLoading===!1},isFiltering(){return!!this.searchTerm||!!this.registryTypeFilter||!!this.registryFilter}}},ze={colspan:"8"};function je(e,n,a,d,p,i){const l=o("DataTableHeader"),c=o("ContainerOverviewTableRowLoading"),y=o("ContainerOverviewTableRow"),v=o("ContainerOverviewTableEmptyStateFiltering"),x=o("ContainerOverviewTableEmptyState"),T=o("DataTableRow"),g=o("DataTable");return s(),m(g,null,{header:r(()=>[t(l,{width:"48px",alignment:"center"},{default:r(()=>[h("Type")]),_:1}),t(l,{width:"auto","sort-by":"name",sorted:d.sorting.column==="name",onSort:d.handleChangeSorting},{default:r(()=>[h("Name")]),_:1},8,["sorted","onSort"]),t(l,{width:"15%"},{default:r(()=>[h("Registry")]),_:1}),t(l,{width:"200px",class:"wide-tablet_hidden"},{default:r(()=>[h("Domain")]),_:1}),t(l,{width:"120px","sort-by":"max_issue_severity",sorted:d.sorting.column==="max_issue_severity",onSort:d.handleChangeSorting,"inverted-sorting":""},{default:r(()=>[h(" Severity ")]),_:1},8,["sorted","onSort"]),t(l,{width:"90px","sort-by":"open_issue_count",sorted:d.sorting.column==="open_issue_count",onSort:d.handleChangeSorting,spacing:"compact","inverted-sorting":""},{default:r(()=>[h(" Open ")]),_:1},8,["sorted","onSort"]),t(l,{width:"115px"},{default:r(()=>[h("Last scan")]),_:1}),t(l,{width:"48px",alignment:"center"})]),body:r(()=>[i.isLoading?(s(),u(R,{key:0},A(5,_=>t(c,{key:_})),64)):(s(!0),u(R,{key:1},A(i.filteredRepositories,_=>(s(),m(y,{key:_.id,repository:_},null,8,["repository"]))),128)),i.showEmptyState?(s(),m(T,{key:2},{default:r(()=>[f("td",ze,[i.isFiltering?(s(),m(v,{key:0})):(s(),m(x,{key:1}))])]),_:1})):C("",!0)]),_:1})}const qe=S(He,[["render",je]]),U={"docker-hub":{icon:"icon-docker",name:"Docker hub"},gitlab:{icon:"icon-Gitlab",name:"Gitlab"},"gitlab-self":{icon:"icon-Gitlab",name:"Gitlab self-managed"},aws:{icon:"icon-location_aws",name:"AWS ECR"},gcp:{icon:"icon-gcp",name:"GCP Artifact registry"},"gcp-artifact-registry":{icon:"icon-gcp",name:"GCP Artifact registry Aikido"},"gcp-container-registry":{icon:"icon-gcp",name:"GCP Container registry"},acr:{icon:"icon-azure",name:"Azure ACR"},digitalocean:{icon:"digitalocean-black",name:"DigitalOcean"},scaleway:{icon:"scaleway-black",name:"Scaleway containers"},cloudsmith:{icon:"cloudsmith-black",name:"Cloudsmith"},artifactory:{icon:"artifactory-black",name:"JFrog Artifactory"},harbor:{icon:"harbor-black",name:"Harbor"},quay:{icon:"quay-black",name:"Quay.io"},github:{icon:"icon-github",name:"Github"},"sonatype-nexus":{icon:"sonatype-nexus",name:"Sonatype Nexus"},"sbom-upload":{icon:"icon-group",name:"Self-reported SBOM"}},Ye={props:{},components:{ActionMenu:P,FilterButton:q,BasePopover:oe,BaseParagraph:E,BaseSelect:se},data(){return{registryTypeFilter:null,registryFilter:null,regionFilter:null}},emits:["filterSelected"],inject:["registryTypes","registryOptions","containerRegions"],computed:{isFiltering(){return!!this.registryTypeFilter||!!this.registryFilter||!!this.regionFilter},filter(){let e=[];if(this.registryTypeFilterLabel!==""&&e.push(this.registryTypeFilterLabel),this.registryFilter){const n=this.registryOptions.find(a=>a.id===this.registryFilter);e.push(n.name)}return this.regionFilter&&e.push(this.regionFilter),e.join(", ")},registryTypeFilterLabel(){return this.registryTypeFilter?U[this.registryTypeFilter].name:""},registryOptionsList(){return this.registryOptions.map(e=>({id:e.id,title:e.name}))},actions(){let e=[];for(const[n,a]of Object.entries(U)){if(this.registryTypes.includes(n)===!1)continue;const d={label:a.name,active:this.isActive(n),onClick:()=>this.handleToggleRegistryTypeFilter(n),type:n,icon:a.icon};e.push(d)}return[{title:"Registry types",action:{label:"Clear filter",onClick:()=>this.handleClearFilter()},items:e}]},hasFilter(){return!!this.registryTypeFilter},containerRegionOptions(){return this.containerRegions.filter(e=>!!e).map(e=>({id:e,title:e}))},shouldShowAdditionalFilters(){return this.registryOptionsList.length>0&&this.containerRegions.length>0}},methods:{isActive(e){return this.registryTypeFilter===e},isSvgIcon(e){return["digitalocean","scaleway","cloudsmith","harbor","quay","artifactory","sonatype-nexus"].includes(e)},handleClearFilter(){this.registryTypeFilter=void 0,this.registryFilter=void 0,this.regionFilter=null,this.emitSelectedFilter()},handleToggleRegistryTypeFilter(e){this.registryTypeFilter===e?this.registryTypeFilter=void 0:this.registryTypeFilter=e,this.emitSelectedFilter()},handleChangeRegistry(e){this.registryFilter=e,this.emitSelectedFilter()},handleChangeRegion(e){this.regionFilter=e,this.emitSelectedFilter()},emitSelectedFilter(){this.$emit("filterSelected",{registryFilter:this.registryFilter,registryTypeFilter:this.registryTypeFilter,regionFilter:this.regionFilter})}}},We=f("i",{class:"icon icon-caret_down icon-12px"},null,-1),Qe={key:0},Xe={class:"text-primary-aik-100"},Je={class:"action-menu w-224px"},Ke={key:0,class:"action-menu__section-title"},Ze=["disabled","onClick"],et={class:"action-menu__section-items"},tt=["onClick","disabled"],it=["src"],nt={key:1,class:"divider"},rt={key:0,class:"action-menu__section"},ot={key:0,class:"flex justify-between align-center px-16px py-8px"},st={key:1,class:"flex justify-between align-center px-16px py-8px"};function at(e,n,a,d,p,i){const l=o("i18n-t"),c=o("FilterButton"),y=o("BaseParagraph"),v=o("BaseSelect"),x=o("BasePopover");return s(),m(x,{placement:"bottom-start"},{trigger:r(T=>[t(c,{onClick:T.toggle,class:I({"filter-button--active":i.hasFilter})},{default:r(()=>[We,i.isFiltering?(s(),u("span",Qe,[t(l,{keypath:"QUEUE.QUICK_FILTER.LABEL"},{filter:r(()=>[f("span",Xe,k(i.filter),1)]),_:1})])):(s(),u(R,{key:1},[h(" All types ")],64))]),_:2},1032,["onClick","class"])]),content:r(T=>[f("div",Je,[(s(!0),u(R,null,A(i.actions,(g,_)=>(s(),u("div",{key:_,class:"action-menu__section"},[g.title?(s(),u("div",Ke,[f("p",null,k(g.title),1),g.action?(s(),u("button",{key:0,disabled:g.action.disabled,class:"button-brand button--as-link",onClick:g.action.onClick},k(g.action.label),9,Ze)):C("",!0)])):C("",!0),f("ul",et,[(s(!0),u(R,null,A(g.items,(w,Y)=>(s(),u("li",{key:Y,class:I(["action-menu__section__item",[w.active&&"action-menu__section__item--active",w.destructive&&"action-menu__section__item--destructive"]])},[f("button",{onClick:W=>w.onClick(W),disabled:w.disabled,class:"action-menu__section__item-button"},[i.isSvgIcon(w.type)?(s(),u("img",{key:0,src:`/assets/icons/${w.icon}.svg`,height:"14",class:"rounded-2px mr-12px"},null,8,it)):w.icon?(s(),u("i",{key:1,class:I(["icon icon-14px mr-12px",[w.icon]])},null,2)):C("",!0),h(" "+k(w.label),1)],8,tt)],2))),128))]),i.shouldShowAdditionalFilters?(s(),u("hr",nt)):C("",!0)]))),128)),i.shouldShowAdditionalFilters?(s(),u("div",rt,[i.registryOptionsList.length>0?(s(),u("div",ot,[t(y,{size:"small"},{default:r(()=>[h("Registry")]),_:1}),t(v,{class:"w-125px",id:"registry",modelValue:p.registryFilter,"onUpdate:modelValue":g=>{T.close(),this.handleChangeRegistry(g)},options:i.registryOptionsList,onClick:n[0]||(n[0]=D(()=>{},["stop"])),placeholder:"All"},null,8,["modelValue","onUpdate:modelValue","options"])])):C("",!0),i.containerRegions.length>0?(s(),u("div",st,[t(y,{size:"small"},{default:r(()=>[h("Region")]),_:1}),t(v,{class:"w-125px",id:"region",modelValue:p.regionFilter,"onUpdate:modelValue":g=>{T.close(),this.handleChangeRegion(g)},options:i.containerRegionOptions,onClick:n[1]||(n[1]=D(()=>{},["stop"])),placeholder:"All"},null,8,["modelValue","onUpdate:modelValue","options"])])):C("",!0)])):C("",!0)])]),_:1})}const lt=S(Ye,[["render",at]]),ct={emits:["filterSelected","sort"],components:{ContainerOverviewTable:qe,InputSearch:ae,BaseButton:le,ContainerOverviewFilter:lt,ActionMenu:P,FilterButton:q,AikidoScannerForRegistriesCallout:pe},data(){return{searchTerm:"",filters:{},canManageContainers:this.$groupUser.can_manage_containers}},mounted(){this.$route.query.connect_registry&&this.handleConnectRegistry()},computed:{actions(){return[{title:"Actions",items:[{visible:!this.$groupUser.only_team_related_issues,label:"Download CSV",onClick:this.downloadCsv,icon:"icon-download"}].filter(n=>n.visible)}]}},methods:{handleConnectRegistry(){if(!this.canManageContainers){this.$modal.show("InfoModal",{headerText:"Connect Container Registry",title:"You do not have permission to manage container registries.",description:"Contact your admin to manage container registries",buttonSubmitText:"Got It!"});return}if(F.data.group.is_demo_group===1)return this.$modal.show("AddWorkspaceRedirectModal");this.$modal.show("ConnectContainerRegistryModal")},async handleConnectPublicImage(){if(F.data.group.is_demo_group===1)return this.$modal.show("AddWorkspaceRedirectModal");(await this.$modal.show("AddPublicCloudRepoModal")).type=="saved"&&b.emit("cloudRepository.created")},onFilterChanged(e){this.filters={...this.filters,...e},this.$emit("filterSelected",this.filters)},async downloadCsv(){if(F.hasExpiredFullTrial())return this.$modal.show("UpgradeAccountModal");await G({headerText:"Export containers",description:"This will export all active containers to a CSV file. Do you want to continue?",buttonSubmitText:"Export"})&&await fe("/api/containers/export/csv",{})}}},dt={class:"flex align-center mb-24px gap-12px tablet_flex-column justify-between"},ut={class:"flex align-center gap-12px tablet_w-full"},pt={class:"flex align-center gap-12px tablet_w-full ml-auto"},ht=f("i",{class:"icon icon-add"},null,-1),gt=f("i",{class:"icon icon-add"},null,-1),mt=f("i",{class:"icon icon-caret_down icon-12px"},null,-1),yt=f("div",{id:"containerTableBottom"},null,-1);function _t(e,n,a,d,p,i){const l=o("AikidoScannerForRegistriesCallout"),c=o("InputSearch"),y=o("ContainerOverviewFilter"),v=o("BaseButton"),x=o("FilterButton"),T=o("ActionMenu"),g=o("ContainerOverviewTable");return s(),u(R,null,[t(l),f("div",dt,[f("div",ut,[t(c,{modelValue:p.searchTerm,"onUpdate:modelValue":[n[0]||(n[0]=_=>p.searchTerm=_),n[1]||(n[1]=_=>i.onFilterChanged({search:_}))],spacing:"compact"},null,8,["modelValue"]),t(y,{onFilterSelected:i.onFilterChanged},null,8,["onFilterSelected"])]),f("div",pt,[t(v,{onClick:i.handleConnectRegistry,size:"small"},{default:r(()=>[ht,h(" Connect registry ")]),_:1},8,["onClick"]),p.canManageContainers?(s(),m(v,{key:0,onClick:i.handleConnectPublicImage,size:"small"},{default:r(()=>[gt,h(" Add public docker image ")]),_:1},8,["onClick"])):C("",!0),i.actions[0].items.length>0?(s(),m(T,{key:1,sections:i.actions,placement:"bottom-end",useBaseIcon:!0},{trigger:r(_=>[t(x,{onClick:()=>_.toggle()},{default:r(()=>[h(" Actions "),mt]),_:2},1032,["onClick"])]),_:1},8,["sections"])):C("",!0)])]),t(g,{searchTerm:p.searchTerm,onSort:n[2]||(n[2]=_=>e.$emit("sort",_))},null,8,["searchTerm"]),yt],64)}const Lt=S(ct,[["render",_t]]);export{Lt as default};
