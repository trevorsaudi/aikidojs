import{bK as g,_ as P,au as m,gN as x,an as y,d7 as k,c6 as C,r as d,q as h,k as p,w as f,n as _,m as I,o as S,s as A,u as v}from"./index-13ff96f4.js";import{g as E}from"./repoName-872812ed.js";import{R as B}from"./RadioButtonList-1d4cdaad.js";function u(e,t="all",n=!1){const s=[];for(const i of e){const o=i.sorted_patch_versions_asc,c=O(i,t,o);if(!c)continue;const l=[];for(const r of i.related_issues)o.indexOf(r.patch.to_version)<=o.indexOf(c)&&l.push(r);l.length!=0&&s.push({single_issue_ids:l.map(r=>r.id),package:i.package_name,upgrade_type:b(l.map(r=>r.patch.upgrade)),version:c})}return{action:t==="update_parent"?"update_parent":"patch",repo_id:e[0].repo_id,fixes:s,preview:n}}function b(e){return e.includes("major")?"major":e.includes("minor")?"minor":(e.includes("patch"),"patch")}function O(e,t,n){let s=null;for(const a of e.related_issues)t=="minor_and_patch_versions_only"&&!["patch","minor"].includes(a.patch.upgrade)||t=="critical_issues_only"&&g(a.aikido_priority)!="CRITICAL"||n.indexOf(a.patch.to_version)>n.indexOf(s)&&(s=a.patch.to_version);return s}const F={emits:["saved","cancel"],components:{RadioButtonList:B,BaseConfirmModal:m},props:{fixablePackages:{type:Array,required:!0},preview:{type:Boolean,required:!1,default:!1}},data(){let e="upgrade_all_packages";return this.updateParentAvailable()&&(e="update_parent"),{selectedSolutionId:e,error:null,isConfirming:!1}},computed:{prOrPreview(){return this.preview?"preview":"PR"},repoName(){return E(this.fixablePackages[0])},language(){return this.fixablePackages[0].language},options(){const e=this.allPackagesPayload.fixes,t=this.minorAndPatchFixesOnlyPayload.fixes,n=this.criticalIssuesOnlyPayload.fixes,s=this.getCountSingleIssues(this.allPackagesPayload),a=this.getCountSingleIssues(this.minorAndPatchFixesOnlyPayload),i=this.getCountSingleIssues(this.criticalIssuesOnlyPayload),o=[{id:"upgrade_all_packages",title:"Upgrade All Packages",titlePillText:this.$t("X_FIXES",s),description:this.$t("X_PACKAGES_WILL_RECEIVE_UPGRADES",e.length)+" "+this.getMajorMinorPatchCounts(this.allPackagesPayload)}];return this.updateParentAvailable()&&o.unshift({id:"update_parent",title:"Upgrade direct dependencies",titlePillText:"beta",description:"Aikido will figure out which direct dependencies should be updated."}),t.length>0&&s>a&&o.push({id:"minor_and_patch_versions_only",title:"Minor And Patch Version Upgrades Only",titlePillText:this.$t("X_FIXES",a),description:this.$t("X_PACKAGES_WILL_RECEIVE_UPGRADES",t.length)+" "+this.getMajorMinorPatchCounts(this.minorAndPatchFixesOnlyPayload)}),n.length>0&&s>i&&o.push({id:"critical_issues_only",title:"Fix Critical Issues Only",titlePillText:this.$t("X_FIXES",i),description:this.$t("X_PACKAGES_WILL_RECEIVE_UPGRADES",n.length)+" "+this.getMajorMinorPatchCounts(this.criticalIssuesOnlyPayload)}),o},allPackagesPayload(){return u(this.fixablePackages,"all",this.preview)},upgradeParentPayload(){return u(this.fixablePackages,"update_parent",this.preview)},minorAndPatchFixesOnlyPayload(){return u(this.fixablePackages,"minor_and_patch_versions_only",this.preview)},criticalIssuesOnlyPayload(){return u(this.fixablePackages,"critical_issues_only",this.preview)},selectedPayload(){return this.selectedSolutionId==="upgrade_all_packages"?this.allPackagesPayload:this.selectedSolutionId==="update_parent"?this.upgradeParentPayload:this.selectedSolutionId==="minor_and_patch_versions_only"?this.minorAndPatchFixesOnlyPayload:this.selectedSolutionId==="critical_issues_only"?this.criticalIssuesOnlyPayload:null}},methods:{handleCancel(){this.$emit("cancel")},async handleStartAutoFix(){this.isConfirming=!0;try{const t=(await x(this.selectedPayload)).task_id;y.emit(k,{task_id:t,type:"started",message:"Creating isolated sandbox for this Autofix. This can take a few seconds",event:0,metadata:{isBulk:!0}}),this.$emit("saved")}catch(e){e instanceof C.AxiosError&&e.response.status===403&&this.$toast.error("An admin must enable the PR creation in Autofix > Enable PR creation")}finally{this.isConfirming=!1}},getMajorMinorPatchCounts(e){let t=0,n=0,s=0;for(const i of e.fixes)i.upgrade_type==="patch"&&t++,i.upgrade_type==="minor"&&n++,i.upgrade_type==="major"&&s++;const a=[];return s>0&&a.push(`${s} major`),n>0&&a.push(`${n} minor`),t>0&&a.push(`${t} patch`),a.length==0?"":"("+a.join(", ")+")"},getCountSingleIssues(e){let t=0;for(const n of e.fixes)t+=n.single_issue_ids.length;return t},updateParentAvailable(){return this.fixablePackages[0].language=="JS"}}},w={class:"flex flex-column gap-16px"},R={key:0,class:"flex align-center flex-column text-center justify-center flex-1 py-32px gap-8px"},M=_("i",{class:"icon icon icon-critical text-34px text-color-danger"},null,-1);function N(e,t,n,s,a,i){const o=d("BaseParagraph"),c=d("RadioButtonList"),l=d("BaseConfirmModal");return h(),p(l,{width:800,headerText:" ",title:`Create autofix ${i.prOrPreview} for ${e.$t("PROGRAMMING_LANGUAGE_"+i.language)} in ${i.repoName}`,description:`Below you can find the different ways that Aikido can automatically upgrade packages in ${i.repoName}.`,buttonSubmitText:"Create Autofix",onSubmit:i.handleStartAutoFix,onClose:i.handleCancel,onSecondaryButtonClicked:i.handleCancel},{default:f(()=>[_("div",w,[a.error?(h(),I("div",R,[M,S(o,{color:"danger"},{default:f(()=>[A(v(a.error),1)]),_:1})])):(h(),p(c,{key:1,class:"max-h-300px scroll-y-auto",modelValue:a.selectedSolutionId,"onUpdate:modelValue":t[0]||(t[0]=r=>a.selectedSolutionId=r),options:i.options},null,8,["modelValue","options"]))])]),_:1},8,["title","description","onSubmit","onClose","onSecondaryButtonClicked"])}const U=P(F,[["render",N]]);export{U as default};
