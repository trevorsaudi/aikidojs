import{_ as S,N as B,M as k,B as v,f as w,V as x,H as C,fL as y,fM as V,r as n,q as d,k as g,w as s,o,n as c,s as l,m as E,ai as F,p as I}from"./index-13ff96f4.js";const M={emits:["close"],components:{BaseSelect:B,BaseModal:k,BaseParagraph:v,BaseButton:w,InputText:x,BaseHeading:C},props:{cloudRepoId:Number,currentTag:String},data(){let a="latest";return this.currentTag==="semver-production"?a="semver_tag_filter":this.currentTag&&(a="custom_tag_filter"),{tagfilter:this.currentTag||"",secondTag:"",showSecondTagField:!1,secondTagError:"",containerScanTarget:a}},watch:{containerScanTarget(a,e){e==="semver_tag_filter"&&a==="custom_tag_filter"&&(this.tagfilter="")}},computed:{containerScanTargetOptions(){return[{id:"latest",title:"Scan newest image"},{id:"custom_tag_filter",title:"Scan newest image that matches tag"},{id:"semver_tag_filter",title:"Scan newest image that has a valid semver version"}]},normalizedTagFilter(){return this.containerScanTarget==="custom_tag_filter"?this.tagfilter:this.containerScanTarget==="semver_tag_filter"?"semver-production":""}},methods:{close(){this.$emit("close")},async save(){if(this.showSecondTagField){if(this.secondTag==this.tagfilter){this.secondTagError="The second tag cannot be the same as the current tag";return}const a=await y({image_id:this.cloudRepoId,tag:this.secondTag});this.$toast.success("Container successfully cloned with selected tag"),this.$router.push(`/container/${a}`),this.close();return}await V(this.cloudRepoId,this.normalizedTagFilter),this.$toast.success({title:"Success",description:"Token successfully updated"}),this.$emit("saved")},multipleTagsScanClicked(){this.secondTag=this.tagfilter,this.tagfilter=this.currentTag,this.showSecondTagField=!0}}},b={class:"flex flex-column gap-12px"},P={class:"flex flex-column gap-12px"},N={key:0},z={class:"flex flex-column gap-8px"},K=c("p",{class:"text-underline"},"Scan multiple tags",-1);function R(a,e,H,U,t,r){const u=n("BaseParagraph"),p=n("BaseHeading"),f=n("BaseSelect"),m=n("InputText"),_=n("BaseLink"),h=n("BaseButton"),T=n("BaseModal");return d(),g(T,{width:600,onClose:r.close},{header:s(()=>[o(u,{color:"gray"})]),content:s(()=>[c("div",b,[o(p,{as:"h3"},{default:s(()=>[l("Update tag filter")]),_:1}),o(u,{loose:!0,size:"medium"},{default:s(()=>[l(" Select which container image in the repository Aikido should target to scan. ")]),_:1})]),c("div",P,[o(f,{label:"Container Scan Target",modelValue:t.containerScanTarget,"onUpdate:modelValue":e[0]||(e[0]=i=>t.containerScanTarget=i),options:r.containerScanTargetOptions},null,8,["modelValue","options"]),t.containerScanTarget==="custom_tag_filter"?(d(),E("div",N,[c("div",z,[o(u,{loose:!0,size:"small"},{default:s(()=>[l(" Entering a tag filter will make Aikido scan the latest tag that match your filter. You can use wildcards with the asterisk char (*). ")]),_:1}),o(m,{placeholder:"production-*",modelValue:t.tagfilter,"onUpdate:modelValue":e[1]||(e[1]=i=>t.tagfilter=i),modelModifiers:{trim:!0},name:"tagfilter",onEnterKeyPress:a.handleKeyDown,disabled:t.showSecondTagField},null,8,["modelValue","onEnterKeyPress","disabled"])]),c("div",{onClick:e[4]||(e[4]=F(()=>{},["stop"]))},[t.showSecondTagField?(d(),g(m,{key:1,class:"mt-24px",title:"Second tag to scan",placeholder:"production-*",modelValue:t.secondTag,"onUpdate:modelValue":[e[2]||(e[2]=i=>t.secondTag=i),e[3]||(e[3]=i=>t.secondTagError="")],modelModifiers:{trim:!0},error:t.secondTagError,name:"secondTag",onEnterKeyPress:r.save},null,8,["modelValue","error","onEnterKeyPress"])):(d(),g(_,{key:0,as:"button",class:"mt-8px block text--normal text-carbon-60",size:"small",onClick:r.multipleTagsScanClicked},{default:s(()=>[K]),_:1},8,["onClick"]))])])):I("",!0)])]),footer:s(()=>[o(h,{onClicked:r.close,variation:"tertiary",class:"ml-auto"},{default:s(()=>[l("Cancel")]),_:1},8,["onClicked"]),o(h,{onClicked:r.save},{default:s(()=>[l("Save")]),_:1},8,["onClicked"])]),_:1},8,["onClose"])}const A=S(M,[["render",R]]);export{A as default};
