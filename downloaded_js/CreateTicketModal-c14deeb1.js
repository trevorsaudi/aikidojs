import{_ as y,q as d,m as f,F as R,t as M,S as F,u as k,N as L,K as G,aR as q,bN as x,r as a,k as I,p as g,Z as m,d8 as E,aw as K,o as u,w as r,s as h,M as W,B as H,f as z,cF as J,V as X,H as Y,aD as Q,bU as Z,d9 as $,an as _,az as ee,da as se,ax as te,ay as ie,c$ as oe,db as ne,dc as ae,dd as re,c7 as de,n as w}from"./index-13ff96f4.js";import{M as le}from"./ManualInputSearchDropdown-6a7ece3e.js";import{I as P}from"./InputSearchDropdown-02988f6b.js";import{g as ue}from"./repoName-872812ed.js";import{g as O}from"./taskTrackerNaming-55adac3e.js";import"./ActionMenu-3e4470bf.js";const ce={emits:["update:modelValue"],props:{modelValue:{type:[String,Number,null],required:!0},tabs:{type:Array,required:!0}},methods:{getClasses(e){return this.modelValue==e.value?"active":""}}},pe={class:"button-tabs-wrapper"},he=["onClick"];function Ie(e,s,o,l,t,i){return d(),f("div",pe,[(d(!0),f(R,null,M(o.tabs,p=>(d(),f("div",{class:F([i.getClasses(p),"button-tab"]),onClick:()=>e.$emit("update:modelValue",p.value)},k(p.label),11,he))),256))])}const me=y(ce,[["render",Ie]]),fe={components:{BaseSelect:L},emits:["update:selectedScopeType","update:selectedRepoId","update:selectedCloudId","update:selectedDomainId"],props:{groupedIssue:{type:Object,required:!0},selectedScopeType:String,selectedRepoId:Number,selectedCloudId:Number,selectedDomainId:Number,filterRepoIds:{type:Array,default:null},filterCloudIds:{type:Array,default:null},filterDomainIds:{type:Array,default:null}},data(){return{scmRepositories:[],isLoadingSCMRepositories:!0,clouds:[],isLoadingClouds:!0,domains:[],isLoadingDomains:!0}},mounted(){this.fetchAll()},computed:{currentValue(){return this.selectedRepoId>0?"repo|"+this.selectedRepoId:this.selectedCloudId>0?"cloud|"+this.selectedCloudId:this.selectedDomainId>0?"domain|"+this.selectedDomainId:"group"},issueScopeOptions(){const e=[{id:"group",title:"All findings in group"}];return this.shouldShowRepoOption&&e.push({title:"Repo",options:this.scmRepositories}),this.shouldShowCloudOption&&e.push({title:"Cloud",options:this.clouds}),this.shouldShowDomainOption&&e.push({title:"Domain",options:this.domains}),e},shouldShowRepoOption(){return this.groupedIssue.issues.some(e=>e.repo_id&&e.repo_id>0)},shouldShowCloudOption(){return this.groupedIssue.type==="cloud"},shouldShowDomainOption(){return this.groupedIssue.issues.some(e=>e.domain_id&&e.domain_id>0)},isLoading(){return this.isLoadingSCMRepositories||this.isLoadingClouds||this.isLoadingDomains},hasScopeSpecificOptions(){return this.issueScopeOptions.filter(s=>!!s.options).map(s=>s.options).flat(1).length>0}},methods:{async fetchAll(){await Promise.all([this.fetchScmRepos(),this.fetchClouds(),this.fetchDomains()])},async fetchScmRepos(){if(!this.shouldShowRepoOption){this.isLoadingSCMRepositories=!1;return}this.isLoadingSCMRepositories=!0;let e=await G(null,!0,!0);e=e.filter(s=>s.active),this.filterRepoIds!=null&&(e=e.filter(s=>this.filterRepoIds.includes(s.id))),this.scmRepositories=e.map(s=>({title:ue(s),id:"repo|"+s.id})),this.isLoadingSCMRepositories=!1},async fetchClouds(){if(!this.shouldShowCloudOption){this.isLoadingClouds=!1;return}this.isLoadingClouds=!0;let e=await q();this.filterCloudIds!=null&&(e=e.filter(s=>this.filterCloudIds.includes(s.id))),this.clouds=e.map(s=>({title:s.name,id:"cloud|"+s.id})),this.isLoadingClouds=!1},async fetchDomains(){if(!this.shouldShowDomainOption){this.isLoadingDomains=!1;return}this.isLoadingDomains=!0;let e=await x();e=e.filter(s=>s.domain_id>0),this.filterDomainIds!=null&&(e=e.filter(s=>this.filterDomainIds.includes(s.domain_id))),this.domains=e.map(s=>({title:s.domain_name,id:"domain|"+s.domain_id})),this.isLoadingDomains=!1},handleSelectValue(e){const[s,o]=e.split("|");this.$emit("update:selectedScopeType",s),s==="group"&&(this.$emit("update:selectedRepoId",null),this.$emit("update:selectedCloudId",null),this.$emit("update:selectedDomainId",null)),s==="repo"&&(this.$emit("update:selectedRepoId",o),this.$emit("update:selectedCloudId",null),this.$emit("update:selectedDomainId",null)),s==="cloud"&&(this.$emit("update:selectedRepoId",null),this.$emit("update:selectedCloudId",o),this.$emit("update:selectedDomainId",null)),s==="domain"&&(this.$emit("update:selectedRepoId",null),this.$emit("update:selectedCloudId",null),this.$emit("update:selectedDomainId",o))}}};function ge(e,s,o,l,t,i){const p=a("BaseSelect");return i.hasScopeSpecificOptions?(d(),I(p,{key:0,label:"Select a scope",optionGroups:i.issueScopeOptions,"is-loading":i.isLoading,modelValue:i.currentValue,"onUpdate:modelValue":i.handleSelectValue},null,8,["optionGroups","is-loading","modelValue","onUpdate:modelValue"])):g("",!0)}const v=y(fe,[["render",ge]]),V=()=>!["linear"].includes(m.data.issueTracker),ke={components:{BaseSelect:L,ManualInputSearchDropdown:le,InputSearchDropdown:P,SelectScope:v},emits:["update:project","update:task","updateScope"],props:{issueGroupId:{type:Number,required:!0},issueGroup:{type:Object,required:!0},projectOptions:{type:Array,required:!0},projectsIsLoading:{type:Boolean,default:!1},integrationInstanceOptions:{type:Array,required:!0},selectedInstance:{type:Number,required:!0},isForSingleIssue:{type:Boolean,default:!1},filterRepoIds:{type:Array,required:!0},filterCloudIds:{type:Array,required:!0},filterDomainIds:{type:Array,required:!0}},data(){return{selectedTask:null,tasks:[],search:"",isLoadingTasks:!1,latestLoadTaskJobId:0,project:null,isSubmitLoading:!1,selectedIssueScope:"group",selectedIssueScopeRepoId:null,selectedIssueScopeCloudId:null,selectedIssueScopeDomainId:null}},mounted(){this.isForSingleIssue&&(this.selectedIssueScope="single_issue"),this.shouldShowProjectDropdown||this.loadTasks(this.latestLoadTaskJobId)},computed:{taskTrackerName(){return this.$t("TASK_TRACKER_"+m.data.issueTracker)},taskOptions(){return this.tasks.map(e=>({label:this.getLabelForTask(e),value:e.id}))},projectLabel(){return O()},selectedInstanceApideckConsumerIdentifier(){const e=this.integrationInstanceOptions.find(s=>s.id==this.selectedInstance);return e?e.apideck_consumer_identifier:null},scopeValues(){return{selectedIssueScope:this.selectedIssueScope,selectedIssueScopeRepoId:this.selectedIssueScopeRepoId,selectedIssueScopeCloudId:this.selectedIssueScopeCloudId,selectedIssueScopeDomainId:this.selectedIssueScopeDomainId}},shouldShowProjectDropdown(){return V()}},watch:{projectOptions:{async handler(){await this.fillProjectsIfPossible()},immediate:!0},scopeValues:{handler(){this.$emit("updateScope",this.scopeValues)},deep:!0}},methods:{async fillProjectsIfPossible(){this.projectOptions.length==1&&await this.onProjectChanged(this.projectOptions[0].value)},async loadTasks(e){if(!this.project&&this.shouldShowProjectDropdown){this.tasks=[];return}this.isLoadingTasks=!0;const s=await E(this.project,this.search,this.selectedInstanceApideckConsumerIdentifier);e==this.latestLoadTaskJobId&&(this.tasks=s.tasks,this.isLoadingTasks=!1)},async onProjectChanged(e){this.project=e,this.search="",this.$emit("update:project",e),this.$emit("update:task",null),e?await this.loadTasks(this.latestLoadTaskJobId):this.tasks=[]},onsearchChanged:K(async function(e){this.search=e,++this.latestLoadTaskJobId,await this.loadTasks(this.latestLoadTaskJobId)},400),getAssigneeNameForTask(e){return e.assignees.length!=1?"":e.assignees[0].username},getLabelForTask(e){const s=`[${e.key}] ${e.subject}`,o=this.getAssigneeNameForTask(e);return o?s+` - Assignee: ${o}`:s},handleSelectedInstance(e){this.onProjectChanged(null),this.$emit("update:selectedInstance",e)}}},Se={key:0,class:"mb-16px"},Te={key:2,class:"mt-16px"};function _e(e,s,o,l,t,i){const p=a("BaseParagraph"),C=a("BaseSelect"),b=a("InputSearchDropdown"),j=a("ManualInputSearchDropdown"),S=a("SelectScope");return d(),f("div",null,[u(p,{size:"medium",semiBold:!0},{default:r(()=>[h(k(e.$t("LINK_TASK.MODAL.BODY.TITLE",{taskTracker:i.taskTrackerName})),1)]),_:1}),u(p,{color:"subdued",class:"mt-2px mb-16px"},{default:r(()=>[h(k(e.$t("LINK_TASK.MODAL.BODY.SUBTITLE",{taskTracker:i.taskTrackerName})),1)]),_:1}),o.integrationInstanceOptions.length>1?(d(),f("div",Se,[u(C,{label:"Instance",options:o.integrationInstanceOptions,modelValue:o.selectedInstance,"onUpdate:modelValue":i.handleSelectedInstance},null,8,["options","modelValue","onUpdate:modelValue"])])):g("",!0),i.shouldShowProjectDropdown?(d(),I(b,{key:o.selectedInstance,label:i.projectLabel,options:o.projectOptions,modelValue:t.project,"onUpdate:modelValue":i.onProjectChanged,"is-loading":o.projectsIsLoading,ignoreSearchFilterWhenValueIsSelected:!0},null,8,["label","options","modelValue","onUpdate:modelValue","is-loading"])):g("",!0),(d(),I(j,{key:t.project,class:"mt-16px",label:"Task",options:i.taskOptions,modelValue:t.selectedTask,"onUpdate:modelValue":[s[0]||(s[0]=c=>t.selectedTask=c),s[1]||(s[1]=c=>e.$emit("update:task",c))],onSearchChanged:i.onsearchChanged,isLoading:t.isLoadingTasks},null,8,["options","modelValue","onSearchChanged","isLoading"])),t.selectedIssueScope!=="single_issue"?(d(),f("div",Te,[u(S,{groupedIssue:o.issueGroup,selectedScopeType:t.selectedIssueScope,"onUpdate:selectedScopeType":s[2]||(s[2]=c=>t.selectedIssueScope=c),selectedRepoId:t.selectedIssueScopeRepoId,"onUpdate:selectedRepoId":s[3]||(s[3]=c=>t.selectedIssueScopeRepoId=c),selectedCloudId:t.selectedIssueScopeCloudId,"onUpdate:selectedCloudId":s[4]||(s[4]=c=>t.selectedIssueScopeCloudId=c),selectedDomainId:t.selectedIssueScopeDomainId,"onUpdate:selectedDomainId":s[5]||(s[5]=c=>t.selectedIssueScopeDomainId=c),filterRepoIds:o.filterRepoIds,filterCloudIds:o.filterCloudIds,filterDomainIds:o.filterDomainIds},null,8,["groupedIssue","selectedScopeType","selectedRepoId","selectedCloudId","selectedDomainId","filterRepoIds","filterCloudIds","filterDomainIds"])])):g("",!0)])}const ye=y(ke,[["render",_e]]),Ce={props:{issueGroupId:Number,issue:{type:Object,default:()=>({})},isForSingleIssue:{type:Boolean,default:!1},initialTab:{type:String,default:"create"}},components:{BaseModal:W,BaseParagraph:H,BaseButton:z,InputTextArea:J,BaseSelect:L,InputText:X,BaseHeading:Y,SelectScope:v,BaseButtonTabs:me,LinkTicketSection:ye,InputSearchDropdown:P},emits:["cancel","created","saved"],data(){return{description:void 0,summary:void 0,project:void 0,projectOptions:[],projectsIsLoading:!0,assignee:void 0,userOptions:[],usersIsLoading:!1,isCreating:!1,selectedIssueScope:"group",selectedIssueScopeRepoId:null,selectedIssueScopeCloudId:null,selectedIssueScopeDomainId:null,issueGroup:null,projectReposMap:{},defaultProjectId:-1,loaded:!1,tab:"create",projectToLinkTask:null,taskToLink:null,isLinkingTask:!1,selectedIssueScopeToLinkTask:"group",selectedIssueScopeToLinkTaskRepoId:null,selectedIssueScopeToLinkTaskCloudId:null,selectedIssueScopeToLinkTaskDomainId:null,hasSelectedProjectManually:!1,selectedInstance:null}},async mounted(){this.tab=this.initialTab,this.isForSingleIssue&&(this.selectedIssueScope="single_issue",this.selectedIssueScopeToLinkTask="single_issue"),this.integrationInstanceOptions.length>0&&(this.selectedInstance=this.integrationInstanceOptions[0].id),await Promise.allSettled([this.fetchIssueGroupDetails(),this.fetchDefaultTaskDescription()]),this.loaded=!0,this.hasIssueTrackerIntegrationEnabled&&(await Promise.allSettled([this.handleFetchProjects(),this.loadProjectReposMap(),this.loadIssueTrackerSettings()]),this.prefillScopeWhenPossible(),(this.selectedIssueScope=="group"||this.selectedIssueScope=="single_issue")&&await this.prefillProjectWhenPossible()),Q({},{no_disable_buttons:!0,disable_toasts:!0})},watch:{async project(){this.assignee=void 0,this.project&&await Promise.allSettled([this.handleFetchUsers()])},selectedIssueScope(){this.fetchDefaultTaskDescription()},selectedIssueScopeRepoId(){this.fetchDefaultTaskDescription(),this.prefillProjectWhenPossible()},selectedIssueScopeCloudId(){this.fetchDefaultTaskDescription(),this.prefillProjectWhenPossible()},selectedIssueScopeDomainId(){this.fetchDefaultTaskDescription(),this.prefillProjectWhenPossible()}},computed:{issueLink(){return this.isForSingleIssue?`${window.location.origin}/queue?sidebarIssue=${this.groupedIssueId}&groupId=${this.$group.id}`:this.issueGroup?`${window.location.origin}/queue?sidebarIssue=${this.issueGroup.id}&groupId=${this.$group.id}`:""},formattedUserOptions(){return this.userOptions.filter(({name:e})=>e!=null&&e!="").map(({id:e,name:s,email:o})=>({value:e,label:s,email:o})).sort((e,s)=>{if(e.value==-1)return-1;if(s.value==-1)return 1;const o=e.label.toLowerCase(),l=s.label.toLowerCase();return o==l?0:o>l?1:-1})},hasSelectedProject(){return this.project!==void 0&&this.project!==null},hasEnteredSummary(){return this.summary!==void 0&&this.summary.trim()!==""},isValid(){return this.loaded?this.tab=="link"?this.requiredProjectWhenLinking&&!this.projectToLinkTask?!1:this.taskToLink:this.hasEnteredSummary&&this.hasSelectedProject:!1},hasIssueTrackerIntegrationEnabled(){return!!m.data.issueTracker},integration(){return m.data.issueTracker},activeIssueTrackerIntegrations(){return m.data.activeIssueTrackerIntegrations},integrationInstanceOptions(){return this.activeIssueTrackerIntegrations.map(e=>({id:e.id,title:e.name,apideck_consumer_identifier:e.apideck_consumer_identifier}))},selectedInstanceIntegration(){return this.activeIssueTrackerIntegrations.find(e=>e.id==this.selectedInstance)},groupedIssueId(){if(this.isForSingleIssue){const{sidebarIssue:e}=Z();return this.$route.params.groupedIssueId??e}return this.issueGroupId},activeIssues(){return this.issueGroup.issues.filter(e=>e.status==="open"||e.status==="snoozed")},shouldShowTabs(){return["jira","clickup","linear","azure-devops","jira-data-center","github","gitlab-server"].includes(m.data.issueTracker)},taskTrackerName(){return this.$t("TASK_TRACKER_"+m.data.issueTracker)},tabs(){return[{value:"create",label:this.$t("CREATE_TASK.TEXT",{taskTracker:this.taskTrackerName})},{value:"link",label:this.$t("LINK_TASK.TEXT",{taskTracker:this.taskTrackerName})}]},buttonSubmitText(){return this.tab=="link"?this.$t("LINK_TASK.MODAL.BUTTON.SUBMIT",{taskTracker:this.taskTrackerName}):"Create task"},formattedProjectOptions(){return this.projectOptions.map(e=>({value:e.id,label:e.title}))},projectName(){return O(this.integration)},requiredProjectWhenLinking(){return V()}},methods:{handleCancel(){this.$emit("cancel"),this.$emit("close")},async handleConfirm(){var s;if(this.tab=="link"){await this.handleLinkTask();return}this.isCreating=!0;let e=this.userOptions.find(o=>o.id==this.assignee);e||(e={id:-1,name:"Unassigned",email:null});try{const o=this.isForSingleIssue?this.issue.id:-1;let l=null;this.selectedInstanceIntegration&&(l=this.selectedInstanceIntegration.apideck_consumer_identifier);const t=await $(this.groupedIssueId,this.summary,this.description,this.project,e,this.selectedIssueScope,this.selectedIssueScopeRepoId,this.selectedIssueScopeCloudId,this.selectedIssueScopeDomainId,"",o,l,{disable_toasts:!0}),i={title:"Task created",description:"We successfully created a task for this issue",...t.task_url?{actionLabel:"View task",onAction:()=>this.handleNavigateToIssue(t.task_url),pauseOnHover:!0}:{}};_.emit("issueUpdated",this.groupedIssueId),_.emit("taskCreated",{issueGroupId:this.groupedIssueId}),Toast.success(i),this.$emit("created"),this.$emit("saved"),this.$route.name!=="groupedIssueDetail"&&this.$router.push({path:this.$route.path,query:{...this.$route.query,sidebarIssue:this.issueGroup.id,sidebarTab:"tasks",sidebarIssueTask:t.task_id}}),this.isCreating=!1}catch(o){const l=((s=o.response.data)==null?void 0:s.reason_phrase)||o.response.statusText;let t={};throw this.shouldIncludeHelpDocForError(l)&&(t={actionLabel:"Help",onAction:()=>this.handleNavigateToIssueTypeHelpdocs(),pauseOnHover:!0}),this.$toast.error({title:this.$t("SOMETHING_WENT_WRONG"),description:l,...t}),this.isCreating=!1,o}},handleNavigateToIssue(e){window.open(e,"_blank")},handleIntegrate(){this.$router.push("/settings/integrations"),this.$emit("cancel")},async handleFetchProjects(){this.projectsIsLoading=!0;let e=null;this.selectedInstanceIntegration&&(e=this.selectedInstanceIntegration.apideck_consumer_identifier),this.projectOptions=await ee(e),this.projectOptions.length===1&&(this.project=this.projectOptions[0].id),this.projectsIsLoading=!1},async handleFetchUsers(){if(!this.project){this.userOptions=[];return}this.usersIsLoading=!0,this.userOptions=[];let e=null;this.selectedInstanceIntegration&&(e=this.selectedInstanceIntegration.apideck_consumer_identifier),this.userOptions=await se(this.project,e),this.userOptions.unshift({id:-1,name:"Unassigned",email:null}),this.usersIsLoading=!1},async loadProjectReposMap(){const{project_repo_map:e}=await te(this.selectedInstance);this.projectReposMap=e},async loadIssueTrackerSettings(){let e=null;this.selectedInstanceIntegration&&(e=this.selectedInstanceIntegration.apideck_consumer_identifier);const{auto_create_project_id:s}=await ie(e);this.defaultProjectId=s},async fetchIssueGroupDetails(){this.issueGroup=await oe(this.groupedIssueId)},async fetchDefaultTaskDescription(){let e=this.selectedIssueScopeRepoId||this.selectedIssueScopeCloudId||this.selectedIssueScopeDomainId;this.isForSingleIssue&&(e=this.issue.id);const s=await ne(this.groupedIssueId,this.selectedIssueScope,e);this.description=s.default_description,this.summary=s.default_summary},async handleLinkTask(){if(!this.taskToLink)return;this.isLinkingTask=!0;const e=this.isForSingleIssue?this.issue.id:-1;let s="";this.selectedInstanceIntegration&&(s=this.selectedInstanceIntegration.apideck_consumer_identifier);try{await ae(this.groupedIssueId,this.projectToLinkTask,this.taskToLink,this.selectedIssueScopeToLinkTask,e,s,this.selectedIssueScopeToLinkTaskRepoId,this.selectedIssueScopeToLinkTaskCloudId,this.selectedIssueScopeToLinkTaskDomainId)}catch{this.handleCancel();return}_.emit("issueUpdated",this.groupedIssueId),_.emit("taskCreated",{issueGroupId:this.groupedIssueId}),Toast.success({title:"Task linked",description:"We successfully linked a task for this issue"}),this.isLinkingTask=!1,this.$emit("created"),this.$emit("saved")},async prefillProjectWhenPossible(){if(this.hasSelectedProjectManually)return;const e=this.isForSingleIssue?this.issue.id:-1;let s="";this.selectedInstanceIntegration&&(s=this.selectedInstanceIntegration.apideck_consumer_identifier);const{project_id:o}=await re(this.groupedIssueId,this.selectedIssueScope,this.selectedIssueScopeRepoId,this.selectedIssueScopeCloudId,this.selectedIssueScopeDomainId,e,s),l=this.projectOptions.find(t=>t.id==o);l&&(this.project=l.id)},prefillScopeWhenPossible(){if(this.$route.path!="/queue"&&this.selectedIssueScope!="single_issue"){if(this.$route.path.includes("/repositories")){const e=this.$route.params.id;this.selectedIssueScope="repo",this.selectedIssueScopeRepoId=e;return}if(this.$route.path.includes("/clouds")){const e=this.$route.params.id;this.selectedIssueScope="cloud",this.selectedIssueScopeCloudId=e;return}if(this.$route.path.includes("/domain")){const e=this.$route.params.domainId;this.selectedIssueScope="domain",this.selectedIssueScopeDomainId=e;return}}},onManuallySelectedProject(){this.hasSelectedProjectManually=!0},async handleSelectInstance(e){this.selectedInstance=e,this.project=void 0,await Promise.allSettled([this.handleFetchProjects(),this.loadProjectReposMap(),this.loadIssueTrackerSettings()]),await this.prefillProjectWhenPossible()},async handleSelectInstanceForLinking(e){this.selectedInstance=e,this.project=void 0,this.assignee=void 0,await Promise.allSettled([this.handleFetchProjects()])},onUpdateScope(e){this.selectedIssueScopeToLinkTask=e.selectedIssueScope,this.selectedIssueScopeToLinkTaskRepoId=e.selectedIssueScopeRepoId,this.selectedIssueScopeToLinkTaskCloudId=e.selectedIssueScopeCloudId,this.selectedIssueScopeToLinkTaskDomainId=e.selectedIssueScopeDomainId},handleNavigateToIssueTypeHelpdocs(){const e="https://help.aikido.dev/doc/set-up-default-issue-types-in-aikido-to-eliminate-jira-sync-errors/docazwOv2sWG";window.open(e,"_blank")},shouldIncludeHelpDocForError(e){return!(!["jira","jira-data-center"].includes(m.data.issueTracker)||!["assignee","issue type","field","is required"].some(t=>e.toLowerCase().includes(t)))}}},be={class:"h-104px relative"},je={class:"flex flex-column gap-12px"};function Le(e,s,o,l,t,i){const p=a("BaseParagraph"),C=a("XPreloader"),b=a("BaseButtonTabs"),j=a("BaseSelect"),S=a("InputSearchDropdown"),c=a("SelectScope"),A=a("InputText"),U=a("InputTextArea"),B=a("LinkTicketSection"),T=a("BaseButton"),D=a("BaseModal"),N=a("BaseHeading");return i.hasIssueTrackerIntegrationEnabled?(d(),I(D,{key:0,width:600,onClose:i.handleCancel,"allow-background-close":!1,topMargin:0},de({header:r(()=>[u(p,{color:"gray"},{default:r(()=>[h("Add "+k(e.$t("TASK_TRACKER_"+i.integration))+" Task",1)]),_:1})]),footer:r(()=>[u(T,{variation:"plain",onClicked:i.handleCancel,class:"ml-auto"},{default:r(()=>[h("Cancel")]),_:1},8,["onClicked"]),u(T,{variation:"primary",disabled:!i.isValid,onClicked:i.handleConfirm,"is-loading":t.isCreating||t.isLinkingTask},{default:r(()=>[h(k(i.buttonSubmitText),1)]),_:1},8,["disabled","onClicked","is-loading"])]),_:2},[t.loaded?{name:"content",fn:r(()=>[i.shouldShowTabs?(d(),I(b,{key:0,modelValue:t.tab,"onUpdate:modelValue":s[0]||(s[0]=n=>t.tab=n),tabs:i.tabs},null,8,["modelValue","tabs"])):g("",!0),t.tab=="create"?(d(),f(R,{key:1},[i.integrationInstanceOptions.length>1?(d(),I(j,{key:0,label:"Instance",options:i.integrationInstanceOptions,modelValue:t.selectedInstance,"onUpdate:modelValue":i.handleSelectInstance},null,8,["options","modelValue","onUpdate:modelValue"])):g("",!0),u(S,{label:i.projectName,options:i.formattedProjectOptions,modelValue:t.project,"onUpdate:modelValue":[s[1]||(s[1]=n=>t.project=n),i.onManuallySelectedProject],"is-loading":t.projectsIsLoading,ignoreSearchFilterWhenValueIsSelected:!0},null,8,["label","options","modelValue","onUpdate:modelValue","is-loading"]),(d(),I(S,{key:t.project,label:"Assignee",options:i.formattedUserOptions,modelValue:t.assignee,"onUpdate:modelValue":s[2]||(s[2]=n=>t.assignee=n),"is-loading":t.usersIsLoading},null,8,["options","modelValue","is-loading"])),t.selectedIssueScope!=="single_issue"?(d(),I(c,{key:1,groupedIssue:t.issueGroup,selectedScopeType:t.selectedIssueScope,"onUpdate:selectedScopeType":s[3]||(s[3]=n=>t.selectedIssueScope=n),selectedRepoId:t.selectedIssueScopeRepoId,"onUpdate:selectedRepoId":s[4]||(s[4]=n=>t.selectedIssueScopeRepoId=n),selectedCloudId:t.selectedIssueScopeCloudId,"onUpdate:selectedCloudId":s[5]||(s[5]=n=>t.selectedIssueScopeCloudId=n),selectedDomainId:t.selectedIssueScopeDomainId,"onUpdate:selectedDomainId":s[6]||(s[6]=n=>t.selectedIssueScopeDomainId=n),filterRepoIds:i.activeIssues.map(n=>n.repo_id),filterCloudIds:i.activeIssues.map(n=>n.cloud_id),filterDomainIds:i.activeIssues.map(n=>n.domain_id)},null,8,["groupedIssue","selectedScopeType","selectedRepoId","selectedCloudId","selectedDomainId","filterRepoIds","filterCloudIds","filterDomainIds"])):g("",!0),u(A,{placeholder:"summary",modelValue:t.summary,"onUpdate:modelValue":s[7]||(s[7]=n=>t.summary=n),name:"ticketSummary",title:"Summary"},null,8,["modelValue"]),u(U,{title:"Description",placeholder:"Description...",modelValue:t.description,"onUpdate:modelValue":s[8]||(s[8]=n=>t.description=n),rows:"10",required:!1,name:"ticketDescription","allow-resize":!0},null,8,["modelValue"])],64)):(d(),I(B,{key:2,issueGroupId:o.issueGroupId,projectOptions:i.formattedProjectOptions,integrationInstanceOptions:i.integrationInstanceOptions,selectedInstance:t.selectedInstance,"onUpdate:selectedInstance":i.handleSelectInstanceForLinking,projectsIsLoading:t.projectsIsLoading,"onUpdate:project":s[9]||(s[9]=n=>t.projectToLinkTask=n),"onUpdate:task":s[10]||(s[10]=n=>t.taskToLink=n),isForSingleIssue:o.isForSingleIssue,groupedIssue:t.issueGroup,filterRepoIds:i.activeIssues.map(n=>n.repo_id),filterCloudIds:i.activeIssues.map(n=>n.cloud_id),filterDomainIds:i.activeIssues.map(n=>n.domain_id),issueGroup:t.issueGroup,onUpdateScope:i.onUpdateScope},null,8,["issueGroupId","projectOptions","integrationInstanceOptions","selectedInstance","onUpdate:selectedInstance","projectsIsLoading","isForSingleIssue","groupedIssue","filterRepoIds","filterCloudIds","filterDomainIds","issueGroup","onUpdateScope"]))]),key:"1"}:{name:"content",fn:r(()=>[w("div",be,[u(C,{class:"absolute-centered",size:"medium"})])]),key:"0"}]),1032,["onClose"])):(d(),I(D,{key:1,width:600,onClose:i.handleCancel},{header:r(()=>[u(p,{color:"gray"},{default:r(()=>[h("Enable task tracker integration")]),_:1})]),content:r(()=>[w("div",je,[u(N,{as:"h3"},{default:r(()=>[h("It looks like you have not yet enabled an integration to track tasks.")]),_:1}),u(p,{size:"medium",loose:""},{default:r(()=>[h("Connect your favourite task tracker like Jira, GitHub issues or GitLab issues from our integrations page to start creating issues right from Aikido.")]),_:1})])]),footer:r(()=>[u(T,{variation:"plain",onClicked:i.handleCancel,class:"ml-auto"},{default:r(()=>[h("Cancel")]),_:1},8,["onClicked"]),u(T,{variation:"primary",onClicked:i.handleIntegrate},{default:r(()=>[h("Add integration")]),_:1},8,["onClicked"])]),_:1},8,["onClose"]))}const Ve=y(Ce,[["render",Le]]);export{Ve as default};
