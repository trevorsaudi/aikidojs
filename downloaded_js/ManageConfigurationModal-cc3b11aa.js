import{_ as x,H as B,f as M,B as V,M as P,N as F,z as R,x as H,bk as D,d as O,a2 as T,A as v,a3 as C,gH as U,an as A,r as m,q as o,k as f,w as c,o as t,m as d,u as g,p as j,n as r,s as u,U as N,aQ as L}from"./index-13ff96f4.js";const E={emits:["close"],components:{BaseHeading:B,BaseButton:M,BaseParagraph:V,BaseModal:P,BaseSelect:F,InputSwitch:R,BaseIcon:H,BaseBody:D,BasePill:O,XTooltip:T},props:{repositories:Array},data(){const e=this.getDefaultConfig();return{isSaving:!1,minimumSeverity:e.minimum_severity,enableDependencyScan:!!e.fail_on_dependency_scan,enableSastScan:!!e.fail_on_sast_scan,enableIacScan:!!e.fail_on_iac_scan,enableSecretsScan:!!e.fail_on_secrets_scan,enableMalwareScan:!!e.fail_on_malware_scan,enablePostInlineComments:!!e.post_inline_comments}},watch:{enableSecretsScan(){this.disableInlineCommentOption&&(this.enablePostInlineComments=!1)},enableSastScan(){this.disableInlineCommentOption&&(this.enablePostInlineComments=!1)},enableIacScan(){this.disableInlineCommentOption&&(this.enablePostInlineComments=!1)}},computed:{isPayingAccount(){return v.isPaying()},isEditingConfigurationForMultipleRepos(){return this.repositories.length>1},singleRepositoryHasConfiguration(){return this.isEditingConfigurationForMultipleRepos?!1:!!this.repositories[0].configuration},scmRepoName(){return this.isEditingConfigurationForMultipleRepos?null:this.repositories[0].scm_repo_name},modalTitle(){if(this.repositories.length>1)return null;const e=this.repositories[0].configuration;return!e||e.updated_by<1||this.scmRepoId!=e.scm_repo_id?null:`Updated on ${C.fromUnix(e.updated_at).format(C.US_FRIENDLY_SHORT_DATE)} by ${e.updated_by_name}`},minimumSeverityOptions(){return[{id:"critical",title:"Critical",disabled:this.minimumSeverity==="critical"},{id:"high",title:"High",disabled:this.minimumSeverity==="high"},{id:"medium",title:"Medium",disabled:this.minimumSeverity==="medium"},{id:"low",title:"Low",disabled:this.minimumSeverity==="low"}]},disableInlineCommentOption(){return!this.enableSastScan&&!this.enableSecretsScan&&!this.enableIacScan}},methods:{handleClose(){this.$emit("close")},async handleSaveConfiguration(){if(!this.enableDependencyScan&&!this.enableSastScan&&!this.enableIacScan&&!this.enableSecretsScan&&!this.enableMalwareScan){this.$toast.error({title:"Invalid Configuration",description:"You must enable at least one of the scans to enable scanning."});return}this.isSaving=!0;const e={scm_repo_ids:this.repositories.map(n=>n.id),minimum_severity:this.minimumSeverity,fail_on_dependency_scan:this.enableDependencyScan,fail_on_sast_scan:this.enableSastScan,fail_on_iac_scan:this.enableIacScan,fail_on_secrets_scan:this.enableSecretsScan,fail_on_malware_scan:this.enableMalwareScan,post_inline_comments:this.enablePostInlineComments};try{await U(e),A.emit("azureDevopsChecksConfigurationUpdated"),this.handleClose()}finally{this.isSaving=!1}},getDefaultConfig(){const e=this.repositories.map(a=>a.configuration),n=e[0];return n?this.repositories.length===1?n??this.getFallbackConfig():e.every(a=>!!a&&a.minimum_severity===n.minimum_severity)?e.every(a=>!!a&&a.fail_on_dependency_scan===n.fail_on_dependency_scan)?e.every(a=>!!a&&a.fail_on_sast_scan===n.fail_on_sast_scan)?e.every(a=>!!a&&a.fail_on_iac_scan===n.fail_on_iac_scan)?e.every(a=>!!a&&a.post_inline_comments===n.post_inline_comments)?n:this.getFallbackConfig():this.getFallbackConfig():this.getFallbackConfig():this.getFallbackConfig():this.getFallbackConfig():this.getFallbackConfig()},getFallbackConfig(){return v.isPaying()?{minimum_severity:"critical",fail_on_dependency_scan:!0,fail_on_sast_scan:!0,fail_on_iac_scan:!0,fail_on_secrets_scan:!0,fail_on_malware_scan:!1,post_inline_comments:!0}:{minimum_severity:"critical",fail_on_dependency_scan:!0,fail_on_sast_scan:!1,fail_on_iac_scan:!1,fail_on_secrets_scan:!1,fail_on_malware_scan:!1,post_inline_comments:!1}},requestCiMalwareScan(){const e="Hi, I would like to request malware in CI scanning.";window.Intercom("showNewMessage",e)}}},q={key:0},z={class:"flex flex-column gap-8px"},X={key:0,class:"text-gray-900 text-24px"},G={key:1,class:"text-gray-900 text-24px"},Y=r("div",{class:"text-gray-200 text-14px"},"This configuration will be applied to selected repos.",-1),Q=r("hr",{class:"divider w-full my-16px"},null,-1),J={class:"flex flex-column gap-16px"},K={class:"flex justify-between align-center"},W=r("div",{class:"text-14px text-primary-aik-140"},"Scan Failure For Minimum Severity",-1),Z={key:1,class:"flex align-center justify-between"},$={key:3,class:"flex align-center justify-between"},ee={key:5,class:"flex align-center justify-between"},ne={key:7,class:"flex align-center justify-between"},ae=r("hr",{class:"divider w-full"},null,-1),ie={class:"flex"},te={class:"flex align-center ml-auto gap-8px"};function se(e,n,h,w,i,s){const b=m("BaseParagraph"),a=m("BaseSelect"),_=m("InputSwitch"),p=m("BaseBody"),S=m("BasePill"),I=m("XTooltip"),y=m("BaseButton"),k=m("BaseModal");return o(),f(k,{width:530,onClose:s.handleClose,canClose:!0},{header:c(()=>[t(b,{color:"gray"},{default:c(()=>[s.modalTitle?(o(),d("span",q,g(s.modalTitle),1)):j("",!0)]),_:1})]),content:c(()=>[r("div",z,[s.isEditingConfigurationForMultipleRepos?(o(),d("h3",X,"Manage Configuration for "+g(h.repositories.length)+" repos",1)):(o(),d("h3",G,[u("Manage configuration for "),r("strong",null,g(this.scmRepoName),1)])),Y]),Q,r("div",J,[r("label",K,[W,t(a,{modelValue:i.minimumSeverity,"onUpdate:modelValue":n[0]||(n[0]=l=>i.minimumSeverity=l),options:s.minimumSeverityOptions,class:"min-w-116px"},null,8,["modelValue","options"])]),t(_,{modelValue:i.enableDependencyScan,"onUpdate:modelValue":n[1]||(n[1]=l=>i.enableDependencyScan=l),class:"justify-between",labelLeft:"Dependency Scan"},null,8,["modelValue"]),s.isPayingAccount?(o(),f(_,{key:0,modelValue:i.enableSastScan,"onUpdate:modelValue":n[2]||(n[2]=l=>i.enableSastScan=l),class:"justify-between",labelLeft:"SAST Scan"},null,8,["modelValue"])):(o(),d("div",Z,[t(p,null,{default:c(()=>[u("SAST Scan")]),_:1}),t(S,{variation:"purple",title:"Upgrade"})])),s.isPayingAccount?(o(),f(_,{key:2,modelValue:i.enableIacScan,"onUpdate:modelValue":n[3]||(n[3]=l=>i.enableIacScan=l),class:"justify-between",labelLeft:"IaC Scan"},null,8,["modelValue"])):(o(),d("div",$,[t(p,null,{default:c(()=>[u("SAST Scan")]),_:1}),t(S,{variation:"purple",title:"Upgrade"})])),s.isPayingAccount?(o(),f(_,{key:4,modelValue:i.enableSecretsScan,"onUpdate:modelValue":n[4]||(n[4]=l=>i.enableSecretsScan=l),class:"justify-between",labelLeft:"Secrets Scan"},null,8,["modelValue"])):(o(),d("div",ee,[t(p,null,{default:c(()=>[u("Secrets Scan")]),_:1}),t(S,{variation:"purple",title:"Upgrade"})])),e.$featureflags.enable_ci_malware_scan?(o(),f(_,{key:6,modelValue:i.enableMalwareScan,"onUpdate:modelValue":n[5]||(n[5]=l=>i.enableMalwareScan=l),class:"justify-between",labelLeft:"Malware Scan"},null,8,["modelValue"])):(o(),d("div",ne,[t(p,null,{default:c(()=>[u("Malware Scan")]),_:1}),t(S,{variation:"green",title:"Get in touch",class:"cursor-pointer",onClick:s.requestCiMalwareScan},null,8,["onClick"])])),ae,r("span",ie,[t(_,{modelValue:i.enablePostInlineComments,"onUpdate:modelValue":n[6]||(n[6]=l=>i.enablePostInlineComments=l),class:"justify-between flex-1",labelLeft:"Add inline comments on the PR in GitHub",disabled:s.disableInlineCommentOption},null,8,["modelValue","disabled"]),N(t(I,null,{default:c(()=>[u("SAST, IAC or Secrets scan must be enabled for inline commenting to work")]),_:1},512),[[L,s.disableInlineCommentOption]])])])]),footer:c(()=>[r("div",te,[t(y,{onClicked:s.handleClose,variation:"plain"},{default:c(()=>[u("Cancel")]),_:1},8,["onClicked"]),t(y,{onClicked:s.handleSaveConfiguration,variation:"primary","is-loading":i.isSaving},{default:c(()=>[u("Save Configuration")]),_:1},8,["onClicked","is-loading"])])]),_:1},8,["onClose"])}const oe=x(E,[["render",se]]);export{oe as default};
