import{_ as i,K as l,r as p,q as a,k as n}from"./index-13ff96f4.js";import{g as d}from"./repoName-872812ed.js";import{I as c}from"./InputSearchDropdown-02988f6b.js";const u={components:{InputSearchDropdown:c},emits:["update:selectedRepoId","repositorySelected","loaded"],props:{selectedRepoId:Number,filterRepoIds:{type:Array,default:null},label:{type:String,default:"Select a repository"},popoverClass:{type:String,default:""},includeRepoPath:{type:Boolean,default:!1}},data(){return{scmRepositories:[],isLoadingSCMRepositories:!0}},mounted(){this.fetchScmRepos()},computed:{options(){return this.scmRepositories}},methods:{async fetchScmRepos(){this.isLoadingSCMRepositories=!0;let e=await l(null,!0,!0);e=e.filter(o=>o.active),this.filterRepoIds!=null&&(e=e.filter(o=>this.filterRepoIds.includes(o.id))),this.scmRepositories=e.map(o=>({label:d(o,this.includeRepoPath),value:o.id})),this.isLoadingSCMRepositories=!1,this.selectedRepoId>0&&(await this.$nextTick(),this.$refs.repoInputSearchDropdown.prefillSearch()),this.$emit("loaded")},handleSelectValue(e){const o=this.scmRepositories.find(t=>t.id==e);this.$emit("update:selectedRepoId",e),this.$emit("repositorySelected",o)},closePopover(){this.$refs.repoInputSearchDropdown&&this.$refs.repoInputSearchDropdown.closePopover()}}};function h(e,o,t,f,m,s){const r=p("InputSearchDropdown");return a(),n(r,{ref:"repoInputSearchDropdown",inputClass:"border-carbon-40",label:t.label,options:s.options,modelValue:t.selectedRepoId,allowFlip:!1,popoverClass:t.popoverClass,useFocus:!0,"onUpdate:modelValue":s.handleSelectValue},null,8,["label","options","modelValue","popoverClass","onUpdate:modelValue"])}const _=i(u,[["render",h]]);export{_ as S};
