import{bF as f,an as l,aV as E,dU as v}from"./index-13ff96f4.js";const e=f({}),d=s=>{var i,r,p;const{type:n,progress:a,progress_message_code:c=null,external_instance_group_id:t}=s;let o=[];if(t=="all"?o=Object.keys(e.value):o=[t],n==="progress")for(const u of o){const m=(i=e.value[u])==null?void 0:i.status,g=(r=e.value[u])==null?void 0:r.progress,S=(p=e.value[u])==null?void 0:p.progressMessageCode;if(m==="completed"&&a>=50||a<g&&g!==100)return;const _=c||S;e.value={...e.value,[u]:{status:"scanning",progress:a,progressMessageCode:_}}}else n==="completed"?(e.value={...e.value,[t]:{status:"completed",progress:100}},l.emit("virtualMachineScanCompleted",{external_instance_group_id:t})):n==="failure"&&(e.value={...e.value,[t]:{status:"completed",progress:100}})};l.on("organisationChanged",()=>{e.value={}});function I(){const s=f(null),n=E(()=>s.value?e.value[s.value]??null:null);return{addListener:()=>{l.on(v,d)},removeListener:()=>{l.off(v,d)},scanningProgress:n,registerScanStartedEvent:()=>{e.value={...e.value,[s.value]:{status:"scanning",progress:5}}},registerScanStoppedEvent:()=>{e.value={...e.value,[s.value]:{status:"stopped"}}},registerInstanceGroup:r=>{s.value=r,e.value[r]||(e.value={...e.value,[r]:{status:"completed",progress:0}})}}}export{I as u};
