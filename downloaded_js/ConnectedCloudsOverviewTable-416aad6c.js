import{_ as b,I as E,f as T,bz as L,an as t,bA as u,aR as D,A as r,r as d,q as i,m as h,o as a,p as C,n as m,w as A,s as N,aa as O,k as y,F}from"./index-13ff96f4.js";import{h as B}from"./cloudLimitations-520d943e.js";import{B as U}from"./BaseCallout-aea0aba4.js";import M from"./DeleteCloudModal-fcf43857.js";const v={props:{emptyStatePosition:{type:String,default:"in-table",validator(e){return["in-table","below-table"].includes(e)}}},components:{InputSearch:E,BaseButton:T,ConnectCloudFlow:L,BaseCallout:U,DeleteCloudModal:M},data(){return{clouds:[],nonAccessibleClouds:[],isLoading:!0,scanning:{},searchTerm:"",showConnectCloudFlow:!1,showDeleteCloudModal:!1}},created(){t.on("cloudAdded",this.loadClouds),t.on("cloudEdited",this.loadClouds),t.on("cloudDeleted",this.loadClouds),t.on(u,this.handleCloudScanEvent)},beforeUnmount(){t.off("cloudAdded",this.loadClouds),t.off("cloudEdited",this.loadClouds),t.off("cloudDeleted",this.loadClouds),t.off(u,this.handleCloudScanEvent)},async mounted(){this.$route.query.connect_cloud&&(this.showConnectCloudFlow=!0),await this.loadClouds()},watch:{$teamContext(){this.loadClouds()}},computed:{showEmptyState(){return!this.isLoading&&this.clouds.length<1},showInTableEmptyState(){return this.showEmptyState&&this.emptyStatePosition==="in-table"},showBelowTableEmptyState(){return this.showEmptyState&&this.emptyStatePosition==="below-table"},hasNonAccessibleCloud(){return this.nonAccessibleClouds.length>0}},methods:{async loadClouds(){const e=await D(this.searchTerm,void 0,{include_linked_teams:!0});this.clouds=e,this.searchTerm||(this.nonAccessibleClouds=e.filter(l=>!!l.is_not_accessible)),this.isLoading=!1},handleShowConnectCloudFlow(){if(r.data.group.is_demo_group===1)return this.$modal.show("AddWorkspaceRedirectModal");const e=2;if(r.hasExpiredFullTrial()&&this.clouds.length>=e)return this.$modal.show("UpgradeAccountModal",{title:"Upgrade to connect more cloud accounts",msg:`Our free plan allows you to connect up to ${e} cloud accounts. Upgrade now to any paid plan to connect more.`});if(B(this.clouds.length))return this.$modal.show("CloudLimitReachedModal");this.showConnectCloudFlow=!0},handleHideConnectCloudFlow(){this.showConnectCloudFlow=!1},handleShowDeleteCloudModal(){this.showDeleteCloudModal=!0},handleHideDeleteCloudModal(){this.showDeleteCloudModal=!1},handleNavigateToCloud(e){this.$router.push(`/clouds/${e}`)},handleCloudScanEvent(e){const{type:l,progress:c,cloudId:s}=e;if(l==="progress_update"){if(this.scanning[s]>c)return;this.scanning[s]=c}else l==="completed"?(this.scanning[s]=100,t.emit("cloudScanFinished"),this.loadClouds()):l==="failure"&&(delete this.scanning[s],this.loadClouds(),Toast.error({title:this.$t("ERROR"),description:"We were unable to complete the scan for this cloud"}))}}},I={key:0,class:"mb-24px"},k={class:"flex justify-between align-center mb-16px"},V=m("i",{class:"icon icon-add"},null,-1);function P(e,l,c,s,o,n){const p=d("BaseCallout"),w=d("InputSearch"),f=d("BaseButton"),_=d("ConnectCloudFlow"),g=d("DeleteCloudModal");return i(),h(F,null,[n.hasNonAccessibleCloud?(i(),h("div",I,[a(p,{title:e.$t("CALLOUTS.CLOUD.CLOUD_NOT_CONNECTED.TITLE"),description:e.$t("CALLOUTS.CLOUD.CLOUD_NOT_CONNECTED.DESCRIPTION"),actionLabel:e.$t("CALLOUTS.CLOUD.CLOUD_NOT_CONNECTED.ACTION_LABEL"),onAction:n.handleShowDeleteCloudModal,variation:"danger"},null,8,["title","description","actionLabel","onAction"])])):C("",!0),m("div",k,[a(w,{modelValue:o.searchTerm,"onUpdate:modelValue":[l[0]||(l[0]=S=>o.searchTerm=S),n.loadClouds],spacing:"compact"},null,8,["modelValue","onUpdate:modelValue"]),a(f,{onClicked:n.handleShowConnectCloudFlow,size:"small"},{default:A(()=>[V,N(" Connect cloud ")]),_:1},8,["onClicked"])]),O(e.$slots,"table",{clouds:o.clouds,scanningProgress:o.scanning,isLoading:o.isLoading,showEmptyState:n.showEmptyState,onConnectNewCloud:n.handleShowConnectCloudFlow}),o.showConnectCloudFlow?(i(),y(_,{key:1,onCanceled:n.handleHideConnectCloudFlow},null,8,["onCanceled"])):C("",!0),a(g,{show:o.showDeleteCloudModal,onCancel:n.handleHideDeleteCloudModal,cloud:o.nonAccessibleClouds[0]??{}},null,8,["show","onCancel","cloud"])],64)}const z=b(v,[["render",P]]);export{z as C};
