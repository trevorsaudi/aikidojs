import{_ as h,M as _,B as p,H as f,f as m,g7 as C,r as s,q as B,k as v,w as e,o as t,s as a,n as r,u as w}from"./index-13ff96f4.js";const k={props:{credentials:Object},components:{BaseModal:_,BaseParagraph:p,BaseHeading:f,BaseButton:m},emits:["close"],data(){return{isSaving:!1}},methods:{handleCloseModal(){this.$emit("close")},async handleConfirm(){const n=await C(this.credentials.id);this.$toast.success({title:"Credentials regenerated",description:"The public API credentials have been successfully regenerated"}),this.$emit("saved"),this.$modal.show("RegisterPublicApiClientCredentialsResultModal",{clientId:n.client_id,clientSecret:n.client_secret})}}},M={class:"relative flex flex-column gap-12px"};function x(n,b,c,y,d,o){const l=s("BaseParagraph"),u=s("BaseHeading"),i=s("BaseButton"),g=s("BaseModal");return B(),v(g,{width:600,onClose:o.handleCloseModal,allowBackgroundClose:!1},{header:e(()=>[t(l,{color:"gray"},{default:e(()=>[a("Regenerate credentials")]),_:1})]),content:e(()=>[r("div",M,[t(u,{as:"h3"},{default:e(()=>[a("Are you sure you want to regenerate the client secret for "),r("strong",null,w(c.credentials.description),1),a("?")]),_:1}),t(l,{size:"medium"},{default:e(()=>[a(" Regenerating these credentials will prevent new tokens from being created with the current credentials. ")]),_:1})])]),footer:e(()=>[t(i,{onClicked:o.handleCloseModal,variation:"plain",class:"ml-auto"},{default:e(()=>[a("Cancel")]),_:1},8,["onClicked"]),t(i,{onClicked:o.handleConfirm,"is-loading":d.isSaving,variation:"destructive"},{default:e(()=>[a("Regenerate")]),_:1},8,["onClicked","is-loading"])]),_:1},8,["onClose"])}const R=h(k,[["render",x]]);export{R as default};
