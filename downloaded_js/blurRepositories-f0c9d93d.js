import{an as s,bI as i,A as o}from"./index-13ff96f4.js";const h={data(){return{scanning:{}}},mounted(){s.on("dependencyScanStarted",this.handleScanStarted),s.on(i,this.handleDependencyScanEvent)},beforeUnmount(){s.off("dependencyScanStarted",this.handleScanStarted),s.off(i,this.handleDependencyScanEvent)},methods:{async handleDependencyScanEvent(e){const{type:n,progress:r,repositoryId:t}=e;if(n==="progress_update"){if(this.scanning[t]>r)return;this.scanning[t]=r}else n==="completed"?(this.scanning[t]=100,s.emit("dependencyScanFinished")):n==="failure"&&(delete this.scanning[t],this.$toast.error("We were unable to complete the scan for this repository"))},handleScanStarted(e){this.getScanProgress(e)===0&&(this.scanning[e]=1)},getScanProgress(e){return this.scanning[e]||0},isScanInProgress(e){const n=this.getScanProgress(e);return n>0&&n<100}}},u=e=>{if(!o.hasExpiredFullTrial())return e;const n=[];let r=0;for(const t of e){const a=c(t,r);t.active&&r++,n.push({...t,is_blurred:a})}return n},c=(e,n)=>!e.active||n>=10;export{h as R,u as b};
